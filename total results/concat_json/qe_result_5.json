[
    {
        "project_signature": "test",
        "calculation_description": "Calculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
        "analysis_dict": {
            "description": "Calculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
            "formula": "TiI2",
            "database": "mc2d"
        },
        "get_conditions_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCalculation_types\n- Berry phase calculations\n- Constant bias potential calculations\n- DOS calculations\n- Dynamical Mean Field Theory\n- Dynamics calculations\n- ESM calculations\n- FCP calculations\n- GC-SCF calculations\n- Ground state calculations\n- HP code calculations\n- LDA+U calculations\n- Linear-response calculations\n- Relaxation calculations\n- Two-chemical-potential calculations\n- calculation = 'bands'\n- calculation = 'md'\n- calculation = 'nscf'\n- calculation = 'relax'\n- calculation = 'scf'\n- calculation = 'vc-md'\n- calculation = 'vc-relax'\n- charge density calculations\n- dispersion correction calculations\n- stress calculations\n- total energy calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nFunctional_and_method_types\n- BEEF-type functionals\n- Conjugate gradient diagonalization\n- Davidson diagonalization\n- PPCG diagonalization\n- Paro diagonalization\n- RMM-DIIS diagonalization\n- DFT-D calculations\n- DFT-D2 calculations\n- DFT-D3 calculations\n- Exact exchange calculations\n- Exchange-correlation functional\n- Exchange-hole dipole-moment model\n- Gradient-corrected functionals\n- Hybrid functional calculations\n- Hybrid functionals with exact exchange\n- Many-body dispersion (MBD) corrections\n- Parrinello-Rahman MD\n- Scissor operator corrections\n- Tkatchenko-Scheffler dispersion corrections\n- Wentzcovitch MD\n- functional is NOT one of: B86bPBE, PW86PBE, PBE, BLYP\n- gammaDFT calculations\n- input_dft='PBE0', 'B3LYP'\n- ion_dynamics = 'bfgs'\n- ion_dynamics = 'fire'\n- ion_dynamics = 'verlet'\n- ion_dynamics = 'damp'\n- long-range interactions\n- Non-collinear calculations\n- spin-orbit calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCell_and_material_properties\n- 2D periodic systems in x-y plane\n- Anisotropic supercells\n- Bravais lattice structure (values 0 to 14)\n- Correlated orbitals\n- Cubic supercells\n- DOS of materials\n- Fixed cell calculations\n- Framework/porous systems\n- Hard FFT grid\n- High symmetry systems\n- Insulating systems\n- Low-symmetry large cells\n- Materials like graphite\n- Materials with long-range interaction\n- Metallic systems\n- Monoclinic systems\n- Non-periodic systems\n- Periodic systems\n- Quasi-cubic supercells\n- Rare Earth Elements\n- Semiconductor systems\n- Slab systems\n- Smooth FFT grid\n- Strongly correlated electrons\n- Transition Metals\n- Variable cell calculations\n- charged cells\n- homogeneous systems\n- ibrav = -12\n- ibrav = -13\n- ibrav-defined crystal structure\n- ibrav = 5\n- ibrav = 0\n- inhomogeneous systems\n- non-symmorphic symmetry operations\n- periodic cell with defined z-direction\n- rhombohedral space group\n- single atom/isolated systems\n- symmetry-defined crystal structure\n- variable cell calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nPseudopotential_types\n- PAW sets\n- Pseudopotentials with Hubbard occupation\n- Relativistic pseudopotentials\n- UPF pseudopotentials\n- Ultrasoft pseudopotentials\n- nonlocal pseudopotentials\n- norm-conserving pseudopotentials\n- pseudopotential tables\n- pseudopotentials with spin-orbit coupling\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nMagnetism_and_Spin_conditions\n- Collinear magnetic calculations (LSDA)\n- Collinear spin\n- Constrained magnetization\n- Initial magnetization\n- Magnetic systems\n- Non-collinear magnetic calculations\n- Spin-orbit coupling\n- Spin-polarized calculations\n- lspinorb = .True.\n- nspin = 1\n- nspin = 2\n- starting_magnetization=0.0\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nIsolated_systems_and_boundary_conditions\n- Dielectric environment\n- Isolated (non-periodic) systems\n- Laue boundary conditions\n- Laue-RISM calculations\n- Systems using Reference Interaction Site Model (RISM)\n- Systems with solvent regions\n- Systems with solvent-solute interactions\n- assume_isolated must be set to 'esm'\n- charged slabs\n- constant chemical potential conditions\n- electrode boundaries\n- laue_wall != 'none'\n- vacuum boundaries\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nk_point_settings\n- Automatic k-points\n- Monkhorst-Pack grid\n- Non-automatic k-points\n- Single k-point\n- Uniform k-point grid\n- custom k-points\n- full BZ coverage\n- nosym k-points\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nElectric_field_conditions\n- 0 < emaxpos < 1\n- Kubo terms\n- System with electric field\n- block = .TRUE.\n- dielectrically consistent RISM (DRISM)\n- dipfield = .TRUE.\n- gate = .TRUE.\n- lelfield = .TRUE.\n- lfcp = .TRUE.\n- optional electric field\n- tefield = .TRUE.\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nOccupation_types\n- Fixed occupations\n- Smearing method\n- Grand canonical ensemble\n- Linear tetrahedron method\n- Optimized tetrahedron method\n- DFT+U Hubbard correction\n- DFT+U+V Hubbard correction\n- DFT+U+J Hubbard correction\n- Systems with empty states\n- Tetrahedron method (Bloechl's version)\n- occupations = 'from_input'\n- occupations = 'smearing'\n- partial occupations\n- valence and conduction manifolds\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "condition_tables": "                                       Item  ...                                     Final_comments\n0                         Calculation_types  ...  The calculation is set up to perform a relaxat...\n1               Functional_and_method_types  ...  The calculation uses a pseudopotential and a p...\n2              Cell_and_material_properties  ...  The calculation is set up to relax the structu...\n3                     Pseudopotential_types  ...  The calculation uses a pseudopotential, but th...\n4             Magnetism_and_Spin_conditions  ...  The calculation description does not explicitl...\n5  Isolated_systems_and_boundary_conditions  ...  The calculation is set up for a periodic syste...\n6                          k_point_settings  ...  The calculation uses a pseudopotential and a p...\n7                 Electric_field_conditions  ...  The provided tags seem to be related to electr...\n8                          Occupation_types  ...  The calculation uses a smearing method for the...\n\n[9 rows x 4 columns]",
        "relevant_conditions": [
            "Stress calculations",
            "UPF pseudopotentials",
            "Total energy calculations",
            "occupations = 'smearing'",
            "Ground state calculations",
            "input_dft='PBE0', 'B3LYP'",
            "High symmetry systems",
            "Pseudopotential_types",
            "nspin = 1",
            "Exchange-correlation functional",
            "Materials like graphite",
            "Periodic systems",
            "Smearing method",
            "Monoclinic systems",
            "vacuum boundaries",
            "Slab systems",
            "periodic cell with defined z-direction",
            "k_point_settings",
            "Smooth FFT grid",
            "Relaxation calculations",
            "Monkhorst-Pack grid",
            "Fixed cell calculations",
            "long-range interactions",
            "ion_dynamics = 'bfgs'",
            "Bravais lattice structure (values 0 to 14)",
            "2D periodic systems in x-y plane",
            "ion_dynamics = 'verlet'",
            "full BZ coverage",
            "Isolated_systems_and_boundary_conditions",
            "assume_isolated must be set to 'esm'",
            "Insulating systems",
            "Variable cell calculations",
            "norm-conserving pseudopotentials",
            "calculation = 'relax'",
            "Anisotropic supercells",
            "Transition Metals",
            "nspin = 2"
        ],
        "parameter_evaluation_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_dtmax\"\nDefault_Values:\n{\n  default:\n\"10.D0\"\n}\nDescription:\n\"fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nCard_Name:\n\"CONSTRAINTS\"\nNamelist:\n\"Card: CONSTRAINTS\"\nDescription:\n\"Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\"\nFinal_comments: None\nPossible_Usage_Conditions: [\n  ion_dynamics = 'verlet',\n  ion_dynamics = 'damp',\n]\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_tolp\"\nDefault_Values:\n{\n  default:\n\"reads from tolp\"\n}\nDescription:\n\"fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nraise\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  nraise*dt:\n\"when ion_temperature = 'berendsen' or 'svr'\"\n  1/nraise:\n\"when ion_temperature = 'andersen'\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"lorbm\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lorbm\nIf .TRUE. perform orbital magnetization calculation.\"\nPossible_Usage_Conditions: [\n  calculation = 'nscf',\n  norm-conserving pseudopotentials,\n  Uniform k-point grid,\n  Kubo terms,\n]\nUsage_Conditions:\n\"Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed.\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_velocity\"\nDefault_Values:\n{\n  default:\n\"determined by fcp_temperature\"\n}\nDescription:\n\"fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mass\"\nDefault_Values:\n{\n  default: None\n  ESM:\n\"5.D+6 / (xy area)\"\n  ESM-RISM:\n\"5.D+4 / (xy area)\"\n}\nDescription:\n\"fcp_mass\nMass of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_ndiis\"\nDefault_Values:\n{\n  default:\n4\n}\nDescription:\n\"fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tolp\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"cell_dynamics\"\nDefault_Values:\n{\n  default: None\n  vc-relax:\n\"bfgs\"\n}\nDescription:\n\"cell_dynamics\nSpecify the type of dynamics for the cell.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions:\n{\n  none:\n\"no dynamics (both vc-relax and vc-md)\"\n  damp-pr:\n\"damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)\"\n  damp-w:\n\"damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)\"\n  bfgs:\n\"BFGS quasi-newton algorithm (vc-relax)\"\n  pr:\n\"(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)\"\n  w:\n\"(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)\"\n}\nFinal_comments: None\nNamelist:\n\"&CELL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-2\"\n}\nDescription:\n\"fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"esm_bc\"\nDefault_Values:\n{\n  default:\n\"pbc\"\n}\nDescription:\n\"esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.\"\nPossible_Usage_Conditions: [\n  ESM calculations,\n  Slab systems,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"Used when assume_isolated = 'esm'\"\nParameter_Value_Conditions:\n{\n  pbc:\n\"regular periodic calculation (no ESM)\"\n  bc1:\n\"Vacuum-slab-vacuum (open boundary conditions)\"\n  bc2:\n\"Metal-slab-metal (dual electrode configuration)\"\n  bc3:\n\"Vacuum-slab-metal\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tempw\"\nDefault_Values:\n{\n  default:\n\"300.D0\"\n}\nDescription:\n\"tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"gcscf_beta\"\nDefault_Values:\n{\n  default:\n\"0.05D0\"\n}\nDescription:\n\"gcscf_beta\nMixing factor for GC-SCF.\"\nPossible_Usage_Conditions: [\n  GC-SCF calculations,\n  DOS of materials,\n  Materials like graphite,\n  Grand canonical ensemble,\n]\nUsage_Conditions:\n\"Larger values are recommended if systems with small DOS on Fermi surface as graphite.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nbnd\"\nDefault_Values:\n{\n  insulator:\n\"number of valence bands (number_of_electrons/2)\"\n  metal:\n\"(number of valence bands)*1.2\"\n}\nDescription:\n\"nbnd\nNumber of electronic states (bands) to be calculated.\"\nPossible_Usage_Conditions: [\n  Insulating systems,\n  Metallic systems,\n  Spin-polarized calculations,\n]\nUsage_Conditions:\n\"Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"pot_extrapolation\"\nDefault_Values:\n{\n  default:\n\"atomic\"\n}\nDescription:\n\"pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  atomic:\n\"extrapolate the potential as if it was a sum of atomic-like orbitals\"\n  first_order:\n\"extrapolate the potential with first-order formula\"\n  second_order:\n\"extrapolate the potential with second order formula\"\n}\nFinal_comments:\n\"'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</Project>\n\n<Conditions>\nStress calculations\nUPF pseudopotentials\nTotal energy calculations\noccupations = 'smearing'\nGround state calculations\ninput_dft='PBE0', 'B3LYP'\nHigh symmetry systems\nPseudopotential_types\nnspin = 1\nExchange-correlation functional\nMaterials like graphite\nPeriodic systems\nSmearing method\nMonoclinic systems\nvacuum boundaries\nSlab systems\nperiodic cell with defined z-direction\nk_point_settings\nSmooth FFT grid\nRelaxation calculations\nMonkhorst-Pack grid\nFixed cell calculations\nlong-range interactions\nion_dynamics = 'bfgs'\nBravais lattice structure (values 0 to 14)\n2D periodic systems in x-y plane\nion_dynamics = 'verlet'\nfull BZ coverage\nIsolated_systems_and_boundary_conditions\nassume_isolated must be set to 'esm'\nInsulating systems\nVariable cell calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nAnisotropic supercells\nTransition Metals\nnspin = 2\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_tempw\"\nDefault_Values:\n{\n  default:\n\"reads from tempw\"\n}\nDescription:\n\"fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "parameters_collection": [
            {
                "calculation": "relax"
            },
            {
                "tprnfor": ".TRUE."
            },
            {
                "ntyp": "2"
            },
            {
                "nbnd": "12"
            },
            {
                "nr1s, nr2s, nr3s": "4 4 4"
            },
            {
                "nosym_evc": "TRUE"
            },
            {
                "occupations": "fixed"
            },
            {
                "degauss": "0.D0"
            },
            {
                "smearing": "gaussian"
            },
            {
                "assume_isolated": "esm"
            },
            {
                "esm_bc": "bc1"
            },
            {
                "scf_must_converge": ".TRUE."
            },
            {
                "conv_thr": "1.D-8"
            },
            {
                "mixing_mode": "local-TF"
            },
            {
                "mixing_beta": "0.4D0"
            },
            {
                "ion_positions": "from_input"
            },
            {
                "ion_dynamics": "bfgs"
            },
            {
                "pot_extrapolation": "atomic"
            },
            {
                "wfc_extrapolation": "second_order"
            },
            {
                "ion_temperature": "andersen"
            },
            {
                "tempw": "500.D0"
            },
            {
                "tolp": "100.D0"
            },
            {
                "refold_pos": "True"
            },
            {
                "upscale": "50.D0"
            },
            {
                "bfgs_ndim": "1"
            },
            {
                "trust_radius_max": "0.8D0"
            },
            {
                "trust_radius_min": "1.D-4"
            },
            {
                "trust_radius_ini": "0.1D0"
            },
            {
                "w_1": "0.01D0"
            },
            {
                "w_2": "0.5D0"
            },
            {
                "fire_alpha_init": "0.2D0"
            },
            {
                "cell_dynamics": "bfgs"
            },
            {
                "fcp_conv_thr": "1.D-4"
            }
        ],
        "evaluated_parameters": [
            "Based on the provided project and tags, let's analyze the parameter \"fire_dtmax\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 functional. The calculation type is not explicitly specified, but based on the presence of the \"ion_dynamics\" tag with value \"bfgs\", it can be inferred that the calculation is a relaxation calculation.\n\nThe parameter \"fire_dtmax\" is relevant to the project only when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' and the ion_dynamics is set to 'fire'. However, in this project, the ion_dynamics is set to 'bfgs', not 'fire'. Therefore, the parameter \"fire_dtmax\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fire_dtmax\": None\n}\n```\n\nNote that the default value of \"fire_dtmax\" is \"10.D0\", but since it's not relevant to this project, we set the value to None.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_delta_t\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 functional. The calculation type is not explicitly stated, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" cards, it appears to be a single-point calculation.\n\nThe parameter \"fcp_delta_t\" is related to Fictitious Charge Particle (FCP) calculations, which are used in molecular dynamics (MD) simulations to control the temperature. However, the project does not appear to be an MD simulation, as there is no \"CONTROL\" card with a \"calculation\" parameter set to \"md\".\n\nFurthermore, the project does not have the \"lfcp\" parameter set to \".TRUE.\", which is a requirement for using the \"fcp_delta_t\" parameter.\n\nTherefore, based on the provided project and tags, the parameter \"fcp_delta_t\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_delta_t\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"wfc_extrapolation\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 slab system using the PBE0 functional. The calculation type is not explicitly specified, but based on the presence of the \"ion_dynamics\" tag with value \"bfgs\", it can be inferred that the calculation is a relaxation calculation, which is a multistep calculation.\n\nThe \"wfc_extrapolation\" parameter is relevant to relaxation calculations, as it is used to extrapolate the wavefunctions from preceding ionic steps. This can improve the convergence of the calculation.\n\nAccording to the Quantum ESPRESSO documentation, the recommended value for \"wfc_extrapolation\" in relaxation calculations is \"second_order\", which extrapolates the wave-functions with a second-order formula.\n\nTherefore, the parameter \"wfc_extrapolation\" is relevant to the project, and the appropriate value is \"second_order\".\n\n```python\nparameter_value = {\n    \"wfc_extrapolation\": \"second_order\"\n}\n```",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"CONSTRAINTS\" and the project.\n\nThe \"CONSTRAINTS\" card is used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. However, the project provided is a ground-state calculation with a fixed cell, and the ion dynamics is set to 'bfgs', which is a quasi-Newton optimization algorithm. This type of calculation does not involve molecular dynamics simulations or constrained optimization processes that would require the use of constraints.\n\nFurthermore, the project is focused on calculating the total energy, stress, and performing a relaxation calculation, which does not typically involve constraints on distances, angles, or coordination numbers between atoms.\n\nTherefore, the \"CONSTRAINTS\" parameter is not relevant to this project.\n\n```python\nparameter_value = {\"CONSTRAINTS\": None}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fire_nmin\".\n\nThe parameter \"fire_nmin\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It controls the minimum number of steps with a positive pressure (P > 0) before increasing the time step \"dt\".\n\nIn the provided project, the calculation type is not explicitly specified, but based on the presence of the \"ion_dynamics\" tag with value \"bfgs\", it can be inferred that the calculation is a relaxation calculation. However, the \"fire_nmin\" parameter is only relevant when the ion dynamics algorithm is set to \"fire\", which is not the case here.\n\nAccording to the rules, the parameter \"fire_nmin\" is not relevant to the project because the ion dynamics algorithm used is \"bfgs\", not \"fire\".\n\n```python\nparameter_value = {\n    \"fire_nmin\": None\n}\n```\n\nTherefore, the value of the parameter \"fire_nmin\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_alpha_init\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 exchange-correlation functional and a Monkhorst-Pack k-point grid. The calculation type is 'relax', as indicated by the tag \"calculation = 'relax'\".\n\nThe parameter \"fire_alpha_init\" is related to the FIRE minimization scheme, which is used in relaxation calculations to optimize the ionic positions. The FIRE algorithm is a powerful method for optimizing molecular structures, and the \"fire_alpha_init\" parameter controls the initial value of the alpha mixing factor.\n\nAccording to the Quantum ESPRESSO documentation, the FIRE algorithm is used when \"ion_dynamics = 'bfgs'\" or \"ion_dynamics = 'fire'\". In this project, the tag \"ion_dynamics = 'bfgs'\" is present, which means the FIRE algorithm is not used. However, the tag \"calculation = 'relax'\" is present, which makes the parameter \"fire_alpha_init\" relevant.\n\nSince the parameter is relevant, we need to select an appropriate value. The recommended values for \"fire_alpha_init\" are between 0.1 and 0.3. A commonly used value is 0.2, which is also the default value.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"fire_alpha_init\": \"0.2D0\"\n}\n```\n\nNote that although the FIRE algorithm is not used in this project, the parameter \"fire_alpha_init\" is still relevant due to the presence of the \"calculation = 'relax'\" tag. However, in practice, this parameter would not affect the calculation.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_tolp\".\n\nThe parameter \"fcp_tolp\" is related to the FCP (Fermi-Dirac smearing) method, which is used to calculate the electronic temperature in molecular dynamics simulations. The parameter \"fcp_tolp\" is a tolerance value for velocity rescaling, which is used to control the temperature fluctuations during the simulation.\n\nIn the provided project, the calculation type is not explicitly specified, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" tags, it appears to be a ground-state calculation. Additionally, the \"input_dft\" tag specifies the use of the PBE0 and B3LYP exchange-correlation functionals, which are commonly used in ground-state calculations.\n\nHowever, the \"fcp_tolp\" parameter is only relevant to FCP calculations, which are typically used in molecular dynamics simulations (calculation = 'md' or 'relax'). Since the project does not appear to be a molecular dynamics simulation, the \"fcp_tolp\" parameter is not relevant to this project.\n\nTherefore, the value of the \"fcp_tolp\" parameter is set to None.\n\n```python\nparameter_value = {\n    \"fcp_tolp\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"tprnfor\".\n\nThe parameter \"tprnfor\" is related to the calculation of forces in Quantum ESPRESSO. According to the documentation, it is set to .TRUE. automatically if the calculation type is 'relax', 'md', or 'vc-md'. In the provided project, the calculation type is not explicitly specified, but based on the presence of the \"ion_dynamics\" tag with value 'bfgs', which is a relaxation algorithm, it can be inferred that the calculation type is likely 'relax'.\n\nThe project also includes tags related to stress calculations, total energy calculations, and ground state calculations, which are all relevant to relaxation calculations. Additionally, the presence of the \"ibrav\" tag with value 0 indicates that the system is a monoclinic crystal, which is a type of anisotropic supercell.\n\nGiven this information, it is likely that the parameter \"tprnfor\" is relevant to the project.\n\n```python\nparameter_value = {\n    \"tprnfor\": \".TRUE.\"\n}\n```\n\nNote that the value of \"tprnfor\" is set to \".TRUE.\" based on the inference that the calculation type is 'relax', which is consistent with the provided tags and the presence of the \"ion_dynamics\" tag with value 'bfgs'.",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"laue_starting_left\" and the project.\n\nThe parameter \"laue_starting_left\" is related to the Laue-RISM (Reference Interaction Site Model) method, which is used to simulate systems with solvent-solute interactions. However, the project provided does not mention anything about solvent-solute interactions or the use of the Laue-RISM method. The project appears to be a standard solid-state calculation using Quantum ESPRESSO, with a focus on total energy calculations, stress calculations, and relaxation calculations.\n\nGiven the provided tags, the project is classified as a ground-state calculation with a PBE0 or B3LYP exchange-correlation functional, using UPF pseudopotentials, and a Monkhorst-Pack grid for k-point sampling. There is no indication of solvent-solute interactions or the need for Laue-RISM.\n\nTherefore, the parameter \"laue_starting_left\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"laue_starting_left\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"degauss\" and the project.\n\nThe parameter \"degauss\" is related to the Brillouin-zone integration in metals, specifically for systems with partial occupations or metallic systems. The project provided is a ground-state calculation with a PBE0 functional, which is a hybrid functional that includes a portion of exact exchange. The system is a periodic, monoclinic slab system with a defined z-direction, and it contains transition metals (Ti). The occupations are set to 'smearing', which indicates that the system is treated as a metal.\n\nGiven the presence of transition metals, the use of a hybrid functional, and the 'smearing' occupations, it is likely that the system is metallic. Therefore, the parameter \"degauss\" is relevant to this project.\n\nHowever, the default value of \"degauss\" is 0.D0, which is a reasonable choice for most systems. Since there is no specific information in the project that suggests a different value for \"degauss\", we will stick with the default value.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"degauss\": \"0.D0\"\n}\n```\n\nNote that if the project had specified a different type of calculation (e.g., 'bands') or a different functional (e.g., LDA or GGA), the relevance of the \"degauss\" parameter might be different. However, based on the provided information, the default value of \"degauss\" seems to be a reasonable choice.",
            "Based on the provided project and tags, let's analyze the parameter \"twochem\".\n\nThe parameter \"twochem\" is related to the simulation of photoexcited systems, which involves constraining a fraction of the electrons in the conduction manifold. This is typically relevant to calculations involving excited states or non-equilibrium systems.\n\nHowever, the provided project appears to be a ground-state calculation, as indicated by the tags \"Ground state calculations\" and \"calculation = 'relax'\". The project also involves a PBE0 functional, which is a hybrid functional suitable for ground-state calculations.\n\nGiven the project's focus on ground-state calculations, the parameter \"twochem\" is not directly relevant. The project does not involve the simulation of photoexcited systems or excited states, which is the primary use case for the \"twochem\" parameter.\n\nTherefore, the parameter \"twochem\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"twochem\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"ion_positions\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 slab system using the PBE0 functional. The calculation type is not explicitly stated, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" cards, it appears to be a single-point calculation (scf).\n\nThe \"ion_positions\" parameter is related to how atomic positions are determined, either from a restart file or the standard input. According to the rules, this parameter is relevant to multistep calculations such as 'relax', 'vc-relax', 'md', and 'vc-md'. However, since the calculation type is not explicitly stated, we need to examine the tags to determine if this parameter is relevant.\n\nAmong the tags, we find \"calculation = 'relax'\", which indicates that the calculation type is indeed a multistep relaxation calculation. Therefore, the \"ion_positions\" parameter is relevant to this project.\n\nGiven that the project is a relaxation calculation, the default value of \"ion_positions\" is \"default\", which means that if restarting, the atomic positions will be read from the restart file, and in all other cases, the atomic positions will be read from the standard input. However, since the project does not specify a restart file, the atomic positions will be read from the standard input.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"ion_positions\": \"from_input\"\n}\n```\n\nNote that I chose \"from_input\" as the value, as it is the most appropriate choice given the project's context, even though the default value would also work.",
            "Based on the provided project and tags, let's analyze the parameter \"nraise\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 functional. The calculation type is not explicitly stated, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" tags, it appears to be a single-point calculation (scf).\n\nThe \"nraise\" parameter is related to temperature control in molecular dynamics (MD) simulations. It is used to control the temperature rescaling, thermostat rise time, or collision frequency in various MD algorithms.\n\nHowever, since the project is a ground-state calculation and not an MD simulation, the \"nraise\" parameter is not relevant to this project.\n\n```python\nparameter_value = {\n    \"nraise\": None\n}\n```\n\nIn this case, the value of \"nraise\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"w_1\".\n\nThe parameter \"w_1\" is related to the line search algorithm used in the BFGS (Broyden-Fletcher-Goldfarb-Shanno) optimization method, which is used for ion dynamics in Quantum ESPRESSO. The BFGS method is a quasi-Newton optimization algorithm that uses an approximation of the Hessian matrix to find the minimum of a function.\n\nIn the context of the provided project, the calculation type is \"relax\", which is a multistep calculation that involves relaxing the ionic positions to find the minimum energy configuration. The \"ion_dynamics\" tag is set to \"bfgs\", which indicates that the BFGS algorithm is used for ion dynamics.\n\nAccording to the Quantum ESPRESSO documentation, the \"w_1\" parameter is used to control the line search algorithm in the BFGS method. A smaller value of \"w_1\" can lead to a more conservative line search, while a larger value can lead to a more aggressive line search.\n\nGiven the project's requirements, a moderate value of \"w_1\" is likely suitable. The default value of \"0.01D0\" is a reasonable choice, as it provides a good balance between convergence speed and stability.\n\nTherefore, the parameter \"w_1\" is relevant to the project, and the appropriate value is the default value.\n\n```python\nparameter_value = {\n    \"w_1\": \"0.01D0\"\n}\n```\n\nNote that the value is a string, as specified in the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"w_2\".\n\nThe parameter \"w_2\" is related to the line search algorithm used in the BFGS (Broyden-Fletcher-Goldfarb-Shanno) optimization method, which is used for ion dynamics in Quantum ESPRESSO. The BFGS method is a quasi-Newton optimization algorithm that uses an approximation of the Hessian matrix to find the minimum of a function.\n\nIn the context of the provided project, the calculation type is \"relax\", which is a multistep calculation that involves relaxing the ionic positions to find the minimum energy configuration. The \"ion_dynamics\" tag is set to \"bfgs\", which indicates that the BFGS algorithm is used for ion dynamics.\n\nThe \"w_2\" parameter is relevant to the project because it is used in the line search algorithm of the BFGS method. The default value of \"w_2\" is 0.5D0, but it can be adjusted to control the step size of the line search.\n\nAccording to the Quantum ESPRESSO documentation, the \"w_2\" parameter is used to control the Wolfe conditions, which are used to determine the step size of the line search. A smaller value of \"w_2\" can lead to a more conservative step size, while a larger value can lead to a more aggressive step size.\n\nBased on the provided project and tags, it is reasonable to use the default value of \"w_2\" = 0.5D0, as it is a commonly used value in BFGS optimization.\n\n```python\nparameter_value = {\n    \"w_2\": \"0.5D0\"\n}\n```\n\nNote that the value of \"w_2\" can be adjusted based on the specific needs of the project, but the default value is a reasonable starting point.",
            "**Relation between the parameter and the project:**\n\nThe parameter \"mixing_beta\" is related to the self-consistency cycle in Quantum ESPRESSO, which is a crucial aspect of the project. The project involves a ground-state calculation with a PBE0 functional, which requires a self-consistent solution of the Kohn-Sham equations. The \"mixing_beta\" parameter controls the mixing of the input and output densities in the self-consistency cycle, which can affect the convergence of the calculation.\n\n**Relevance of the parameter to the project:**\n\nThe parameter \"mixing_beta\" is relevant to the project because it is used in the self-consistency cycle, which is essential for the ground-state calculation. The project involves a PBE0 functional, which is a hybrid functional that requires a self-consistent solution. The \"mixing_beta\" parameter can affect the convergence of the calculation, and a suitable value is necessary to achieve a stable and accurate result.\n\n**Selection of the parameter value:**\n\nBased on the project and the conditions, a suitable value for \"mixing_beta\" can be selected. The default value is 0.7, which is a reasonable starting point. However, for systems with strong correlations or complex electronic structures, a smaller value of \"mixing_beta\" may be necessary to achieve convergence. In this case, the system is a monoclinic TiI2 slab with a PBE0 functional, which may require a smaller \"mixing_beta\" value. A value of 0.4 or 0.5 may be more suitable for this system.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"mixing_beta\": \"0.4D0\"\n}\n```\n\nNote: The value \"0.4D0\" is a string representation of the floating-point number 0.4, which is the format required by Quantum ESPRESSO.",
            "Based on the provided project and tags, let's analyze the parameter \"lorbm\".\n\nThe parameter \"lorbm\" is related to the calculation of orbital magnetization, which is a property of magnetic systems. However, the project provided is a ground-state calculation of a non-magnetic system (nspin = 1) with a PBE0 functional, which is not typically used for magnetic systems. Moreover, the project does not involve a uniform k-point grid, Kubo terms, or norm-conserving pseudopotentials, which are required conditions for using the \"lorbm\" parameter.\n\nTherefore, the parameter \"lorbm\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"lorbm\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"upscale\".\n\nThe parameter \"upscale\" is related to the convergence threshold during structural optimization. According to the Quantum ESPRESSO documentation, \"upscale\" is a parameter that controls the maximum reduction factor for the convergence threshold (\"conv_thr\") during structural optimization. This parameter is relevant when performing relaxation calculations, which is the case in this project (calculation = 'relax').\n\nThe project uses the BFGS algorithm for ion dynamics (ion_dynamics = 'bfgs'), which is one of the conditions for the \"upscale\" parameter to be relevant.\n\nConsidering the project's conditions, the \"upscale\" parameter is relevant. The default value is \"100.D0\", but we can select a more suitable value based on the project's characteristics.\n\nFor a relaxation calculation with a relatively small system (3 atoms) and a moderate number of k-points (7x7x2), a moderate value of \"upscale\" should be sufficient. A value of \"50.D0\" would be a reasonable choice, allowing for a moderate reduction of the convergence threshold during the optimization process.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"upscale\": \"50.D0\"\n}\n```\n\nNote that the value \"50.D0\" is a reasonable choice based on the project's characteristics, but it may need to be adjusted depending on the specific requirements of the calculation.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_velocity\".\n\nThe parameter \"fcp_velocity\" is related to the Fictitious Charge Particle (FCP) method, which is used in Car-Parrinello molecular dynamics (CPMD) simulations. The FCP method is a technique used to accelerate the convergence of the electronic degrees of freedom in CPMD simulations.\n\nIn the provided project, the calculation type is not explicitly specified, but based on the presence of the \"ion_dynamics\" tag with values \"bfgs\" and \"verlet\", it can be inferred that the calculation type is likely \"relax\" or \"md\". Additionally, the presence of the \"lfcp\" tag is not explicitly mentioned, but it is a required condition for the \"fcp_velocity\" parameter to be relevant.\n\nHowever, considering the project's focus on stress calculations, total energy calculations, and ground state calculations, it is unlikely that the FCP method is being used. The project appears to be focused on static calculations rather than molecular dynamics.\n\nTherefore, based on the provided information, the parameter \"fcp_velocity\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_velocity\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"bfgs_ndim\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 exchange-correlation functional and UPF pseudopotentials. The calculation type is not explicitly specified, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" cards, it appears to be a single-point calculation (i.e., 'scf').\n\nThe parameter \"bfgs_ndim\" is related to the BFGS algorithm used in relaxation calculations. According to the documentation, it is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md', and the ion dynamics is set to 'bfgs'.\n\nHowever, in this project, the calculation type is not explicitly set to 'relax' or any other type that would make \"bfgs_ndim\" relevant. Moreover, the ion dynamics is set to 'bfgs' in the conditions, but it is not clear if this is actually used in the calculation.\n\nGiven the information provided, it is not possible to determine the relevance of \"bfgs_ndim\" to the project with certainty. However, based on the presence of the \"ion_dynamics = 'bfgs'\" condition, it is possible that the parameter might be relevant.\n\nAssuming that the calculation type is indeed 'relax' (which is not explicitly stated), the default value of \"bfgs_ndim\" would be 1, which corresponds to the standard quasi-Newton BFGS method.\n\nHere is the output:\n\n```python\nparameter_value = {\n    \"bfgs_ndim\": \"1\"\n}\n```\n\nNote that this value is speculative, and the actual value of \"bfgs_ndim\" might be different depending on the actual calculation type and other factors not specified in the project.",
            "Based on the provided project and tags, let's analyze the parameter \"degauss_cond\".\n\nThe parameter \"degauss_cond\" is related to the Gaussian spreading value for Brillouin-zone integration in the conduction manifold in a two-chemical potential calculation. However, the project does not indicate a two-chemical potential calculation (twochem = .True.). The project is a ground-state calculation with a single chemical potential, as indicated by the input_dft='PBE0', 'B3LYP' and the absence of any two-chemical potential related tags.\n\nMoreover, the project is a fixed cell calculation (ibrav = 0) with a Monkhorst-Pack grid (K_POINTS automatic) for Brillouin-zone integration, which does not require the \"degauss_cond\" parameter.\n\nTherefore, the parameter \"degauss_cond\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"degauss_cond\": None\n}\n```",
            "Based on the provided project and tags, we can analyze the relation between the parameter \"ion_dynamics\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 exchange-correlation functional and a Monkhorst-Pack k-point grid. The calculation type is not explicitly specified, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" cards, it appears to be a single-step calculation, likely an \"scf\" or \"nscf\" calculation.\n\nThe \"ion_dynamics\" parameter is relevant to the project when the calculation type is \"relax\", \"md\", \"vc-relax\", or \"vc-md\". However, since the calculation type is not explicitly specified, we need to examine the tags to determine if any of these conditions are met.\n\nThe tags \"Stress calculations\", \"Relaxation calculations\", and \"Fixed cell calculations\" suggest that the calculation type might be \"relax\". Additionally, the presence of the \"ibrav = 0\" card, which specifies a non-standard Bravais lattice, and the \"CELL_PARAMETERS\" card, which defines the cell geometry, also support this interpretation.\n\nTherefore, we can conclude that the \"ion_dynamics\" parameter is relevant to the project, and the appropriate value is \"bfgs\", which is the default value for \"relax\" calculations.\n\n```python\nparameter_value = {\n    \"ion_dynamics\": \"bfgs\"\n}\n```\n\nNote that if the calculation type were explicitly specified as \"scf\" or \"nscf\", the \"ion_dynamics\" parameter would not be relevant, and the value would be set to None.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"ion_temperature\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 slab system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"ion_temperature\" is relevant to the project because it is used to control the ionic temperature during the relaxation process. In the context of 'relax' calculations, the ionic temperature is an important parameter to control the dynamics of the ions during the relaxation process.\n\nAccording to the Quantum ESPRESSO documentation, the recommended value for \"ion_temperature\" in 'relax' calculations is 'andersen', which uses the Andersen thermostat to control the ionic temperature.\n\nTherefore, the selected value for the parameter \"ion_temperature\" is 'andersen'.\n\n```python\nparameter_value = {\n    \"ion_temperature\": \"andersen\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"trust_radius_ini\".\n\nThe parameter \"trust_radius_ini\" is related to the initial ionic displacement in structural relaxation calculations. According to the Quantum ESPRESSO documentation, this parameter is used to control the initial step size in the BFGS algorithm, which is used for structural relaxation.\n\nIn the provided project, the calculation type is not explicitly specified, but based on the presence of the \"ion_dynamics = 'bfgs'\" tag, it can be inferred that the calculation is a relaxation calculation. Additionally, the presence of the \"calculation = 'relax'\" tag in the conditions confirms this.\n\nThe \"trust_radius_ini\" parameter is relevant to relaxation calculations that use the BFGS algorithm, which is the case here. Therefore, we need to select an appropriate value for this parameter.\n\nThe default value for \"trust_radius_ini\" is 0.5D0, but we can adjust this value based on the specific system being studied. For a system with a large unit cell and a complex structure, a smaller value might be more suitable to avoid large initial displacements.\n\nConsidering the system is a monoclinic slab system with a relatively large unit cell, a smaller value of \"trust_radius_ini\" might be more appropriate. Let's choose a value of 0.1D0.\n\n```python\nparameter_value = {\n    \"trust_radius_ini\": \"0.1D0\"\n}\n```\n\nNote that this value is a reasonable choice based on the provided information, but it may need to be adjusted depending on the specific system and the desired level of convergence.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_mass\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 exchange-correlation functional and a Monkhorst-Pack k-point grid. The system consists of a Ti atom and two I atoms, with a vacuum boundary in the z-direction.\n\nThe parameter \"fcp_mass\" is related to the Fictitious Charge Particle (FCP) method, which is used to accelerate the convergence of the self-consistent field (SCF) cycle in certain types of calculations. However, the FCP method is typically used in conjunction with molecular dynamics (MD) or relaxation calculations, which is not the case in this project.\n\nThe project is a single-step calculation (ground-state calculation), and the tags do not indicate the use of the FCP method or any other condition that would require the \"fcp_mass\" parameter. Therefore, the parameter is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_mass\": None\n}\n```\n\nIn this case, the value of \"fcp_mass\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"nsolv\" and the project.\n\nThe parameter \"nsolv\" is related to RISM (Reference Interaction Site Model) calculations, which is a method used to study the solvation properties of molecules in a solvent. However, the project provided does not mention RISM calculations or any solvation-related properties. The project appears to be a standard quantum chemistry calculation using Quantum ESPRESSO, with a focus on total energy calculations, stress calculations, and relaxation calculations.\n\nGiven the project's focus on solid-state calculations and the absence of any solvation-related properties, the parameter \"nsolv\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"nsolv\": None\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter \"ntyp\" represents the number of types of atoms in the unit cell. In the provided project, we have three atoms: two Iodine (I) atoms and one Titanium (Ti) atom. However, the number of types of atoms is not necessarily equal to the number of atoms. In this case, we have two types of atoms: Iodine and Titanium.\n\nAccording to the Quantum ESPRESSO documentation, \"ntyp\" is a required parameter in the &SYSTEM namelist, and it should be set to the number of different atomic species present in the system.\n\n**Relevance of the parameter to the project:**\n\nThe parameter \"ntyp\" is relevant to the project, as it is a required parameter in the &SYSTEM namelist, and the project involves a calculation with two types of atoms.\n\n**Appropriate value for the parameter:**\n\nBased on the project, the appropriate value for \"ntyp\" is 2, since we have two types of atoms: Iodine and Titanium.\n\n**Python dictionary with the parameter's value:**\n\n```python\nparameter_value = {\"ntyp\": \"2\"}\n```",
            "Based on the provided project and tags, we can analyze the relation between the parameter \"occupations\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a periodic system with a monoclinic structure, using the PBE0 and B3LYP exchange-correlation functionals. The system is an insulator, as indicated by the tag \"Insulating systems\". The calculation type is a single-step calculation, specifically a ground-state calculation.\n\nThe parameter \"occupations\" controls how electronic occupations are determined. For insulating systems, the occupations can be determined using the \"fixed\" method, which is suitable for systems with a gap.\n\nConsidering the project and tags, the parameter \"occupations\" is relevant to the project. The appropriate value for the parameter is \"fixed\", as it is suitable for insulating systems with a gap.\n\n```python\nparameter_value = {\n    \"occupations\": \"fixed\"\n}\n```\n\nNote that the \"smearing\" method is not suitable for this project, as it is typically used for metallic systems. The \"tetrahedra\", \"tetrahedra_lin\", and \"tetrahedra_opt\" methods are not relevant to this project, as they are used for DOS calculations and require a uniform grid of k-points. The \"from_input\" method is not valid for this project, as it requires a single k-point and a specific setting for the \"nbnd\" parameter.",
            "Based on the provided project and tags, let's analyze the parameter \"nosym_evc\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 exchange-correlation functional and a Monkhorst-Pack grid for k-point sampling. The system has a periodic cell with a defined z-direction and vacuum boundaries.\n\nThe parameter \"nosym_evc\" is related to the use of symmetry in k-point sampling. According to the documentation, if \"nosym_evc\" is set to .TRUE., symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice. This option is relevant when using a Monkhorst-Pack grid or custom k-points, and when aiming for full BZ coverage.\n\nIn this project, a Monkhorst-Pack grid is used, and the system has a high symmetry (monoclinic). However, the \"ibrav\" parameter is set to 0, which means that the Bravais lattice is not specified. Additionally, the \"nosym\" parameter is not present in the input file, which means that symmetry is used by default.\n\nConsidering these points, it is likely that the \"nosym_evc\" parameter is not necessary in this case, as the system's symmetry is already being used. However, to ensure full BZ coverage and to avoid any potential issues with k-point sampling, it might be beneficial to set \"nosym_evc\" to .TRUE.\n\n```python\nparameter_value = {\n    \"nosym_evc\": \"TRUE\"\n}\n```\n\nNote that this is a conservative choice, and the actual value of \"nosym_evc\" might depend on the specific requirements of the calculation.",
            "Based on the provided project and tags, let's analyze the parameter \"refold_pos\".\n\nThe parameter \"refold_pos\" is related to the ionic dynamics and is used to refold the ions into the supercell at each step. According to the documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'.\n\nIn the provided project, the calculation type is not explicitly specified, but based on the presence of the \"ion_dynamics\" tag with value 'bfgs', which is a type of ionic dynamics, we can infer that the calculation type is likely 'relax'. Additionally, the presence of the \"ibrav\" tag with value 0, which indicates a non-standard Bravais lattice structure, and the \"cell_parameters\" tag, which defines the supercell, suggests that the system is a periodic system with a defined supercell.\n\nTherefore, the parameter \"refold_pos\" is relevant to this project.\n\nAccording to the documentation, the default value of \"refold_pos\" is False. However, since the system is a periodic system with a defined supercell and the calculation type is likely 'relax', it is recommended to set \"refold_pos\" to True to ensure that the ions are refolded into the supercell at each step.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"refold_pos\": \"True\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fire_f_dec\".\n\nThe parameter \"fire_f_dec\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It is a factor for decreasing the time step \"dt\" in the FIRE algorithm.\n\nIn the provided project, the calculation type is \"relax\" (as indicated by the tag \"calculation = 'relax'\"), and the ion dynamics algorithm used is \"bfgs\" (as indicated by the tag \"ion_dynamics = 'bfgs'\"). However, the parameter \"fire_f_dec\" is only relevant when the ion dynamics algorithm is \"fire\", not \"bfgs\".\n\nTherefore, the parameter \"fire_f_dec\" is not relevant to the provided project.\n\n```python\nparameter_value = {\n    \"fire_f_dec\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"one_atom_occupations\".\n\nThe project is a Quantum ESPRESSO input file for a periodic system with 3 atoms (I, Ti, and I) in a monoclinic cell. The calculation type is not explicitly specified, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" tags, it appears to be a ground-state calculation.\n\nThe parameter \"one_atom_occupations\" is used for isolated atoms (nat=1) together with occupations='from_input'. However, in this project, we have a periodic system with 3 atoms, not an isolated atom. Therefore, this parameter is not relevant to the project.\n\nAccording to the rules, if the parameter is not relevant, we set the value to None.\n\n```python\nparameter_value = {\n    \"one_atom_occupations\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"trust_radius_min\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 exchange-correlation functional and a Monkhorst-Pack k-point grid. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"trust_radius_min\" is relevant to the project because it is used in the BFGS algorithm for structural relaxation, which is the case here since `ion_dynamics = 'bfgs'` and `calculation = 'relax'`.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"trust_radius_min\" is 1.D-3, which is a reasonable value for most systems. However, for systems with very stiff bonds or high-frequency modes, a smaller value might be necessary to avoid overshooting.\n\nConsidering the system is a monoclinic slab with a relatively large cell size in the z-direction, a smaller value of \"trust_radius_min\" might be beneficial to ensure a stable relaxation. However, without more information about the system's specific properties, it's difficult to determine the optimal value.\n\nGiven the provided options, a reasonable choice for \"trust_radius_min\" would be a value slightly smaller than the default, e.g., 1.D-4.\n\n```python\nparameter_value = {\n    \"trust_radius_min\": \"1.D-4\"\n}\n```\n\nNote that this value is a suggestion based on general guidelines and might need to be adjusted depending on the specific system's behavior during the relaxation.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_falpha\".\n\nThe parameter \"fire_falpha\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It controls the scaling of the alpha mixing parameter for steps with P > 0. The default value is 0.99D0.\n\nIn the provided project, the calculation type is not explicitly specified, but based on the presence of the \"ion_dynamics\" tag with value \"bfgs\", it can be inferred that the calculation is a relaxation calculation. However, the \"fire\" algorithm is not used in this case, as \"bfgs\" is a different algorithm.\n\nAccording to the rules, the parameter \"fire_falpha\" is only relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'. Since the ion_dynamics algorithm used in the project is \"bfgs\", not \"fire\", the parameter \"fire_falpha\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fire_falpha\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fire_f_inc\".\n\nThe parameter \"fire_f_inc\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It is a factor for increasing the time step \"dt\" during the simulation.\n\nIn the provided project, the calculation type is \"relax\" (as indicated by the tag \"calculation = 'relax'\"), and the ion dynamics algorithm used is \"bfgs\" (as indicated by the tag \"ion_dynamics = 'bfgs'\"). However, the parameter \"fire_f_inc\" is only relevant when the ion dynamics algorithm is \"fire\", not \"bfgs\".\n\nTherefore, the parameter \"fire_f_inc\" is not relevant to the provided project.\n\n```python\nparameter_value = {\n    \"fire_f_inc\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_ndiis\".\n\nThe parameter \"fcp_ndiis\" is related to the Fictitious Charge Particle (FCP) relaxation method, which is used in Quantum ESPRESSO for certain types of calculations. However, the project provided is a ground-state calculation with a fixed cell (ibrav = 0) and does not involve FCP relaxation. The calculation type is 'scf' (single-step), and the tags do not indicate the use of FCP calculations.\n\nAccording to the rules, the parameter \"fcp_ndiis\" is not relevant to the project because the calculation type is not 'relax' or 'md', and there is no indication of FCP calculations.\n\n```python\nparameter_value = {\n    \"fcp_ndiis\": None\n}\n```\n\nIn this case, the value of \"fcp_ndiis\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_nraise\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 functional. The calculation type is a single-step calculation, specifically a ground-state calculation.\n\nThe parameter \"fcp_nraise\" is related to Fictitious Charge Particle (FCP) calculations, which are used in molecular dynamics (MD) simulations to control temperature adjustments. However, the project does not involve MD simulations, and the calculation type is not 'relax' or 'md'. Therefore, the parameter \"fcp_nraise\" is not relevant to this project.\n\nAccording to the rules, since the parameter is not relevant, we set the value to None.\n\n```python\nparameter_value = {\n    \"fcp_nraise\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"nr1s, nr2s, nr3s\".\n\nThe parameter \"nr1s, nr2s, nr3s\" is related to the three-dimensional mesh for wavefunction FFT and for the smooth part of charge density (smooth grid). According to the Quantum ESPRESSO documentation, this parameter is used to control the FFT grid size for the wavefunction and charge density.\n\nIn the provided project, we can see that the calculation type is \"relax\" (ion_dynamics = 'bfgs'), which is a multistep calculation. The tags also mention \"Smooth FFT grid\", \"UPF pseudopotentials\", and \"PBE0\" exchange-correlation functional, which are all relevant to the parameter.\n\nSince the parameter is relevant to the project, we need to select an appropriate value. The default value is not provided, so we need to choose a suitable value based on the project's requirements.\n\nA common choice for the FFT grid size is to use a value that is a power of 2, 3, or 5, to optimize the FFT performance. Considering the system size and the desired accuracy, a reasonable choice for the FFT grid size could be:\n\nnr1s = 4\nnr2s = 4\nnr3s = 4\n\nThis corresponds to a grid size of 4x4x4, which is a reasonable choice for a system with a moderate size.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"nr1s, nr2s, nr3s\": \"4 4 4\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"scf_must_converge\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 and B3LYP exchange-correlation functionals. The calculation type is not explicitly stated, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" cards, it appears to be a single-point calculation.\n\nThe parameter \"scf_must_converge\" is related to the convergence of the self-consistent field (SCF) cycle, which is a crucial aspect of electronic structure calculations. According to the Quantum ESPRESSO documentation, \"scf_must_converge\" controls whether the calculation should stop when the maximum number of SCF iterations (\"electron_maxstep\") is reached.\n\nIn the context of this project, the parameter is not directly relevant, as the calculation type is not a dynamics or relaxation calculation, which are the only types mentioned in the \"Possible_Usage_Conditions\" section. However, considering the importance of SCF convergence in electronic structure calculations, it is still worth discussing.\n\nRecent research and documentation suggest that the default value of \".TRUE.\" is a safe choice for most calculations, as it ensures that the SCF cycle converges before proceeding with the calculation. However, in some cases, setting \"scf_must_converge\" to \".FALSE.\" can be useful, for example, when dealing with systems that are difficult to converge or when using advanced convergence algorithms.\n\nGiven the project's focus on ground-state calculations and the absence of dynamics or relaxation calculations, the parameter \"scf_must_converge\" is not strictly necessary. However, to ensure convergence and avoid potential issues, it is recommended to keep the default value.\n\n```python\nparameter_value = {\n    \"scf_must_converge\": \".TRUE.\"\n}\n```\n\nNote that, according to the rules, if the parameter were not relevant, the value would be set to `None`. However, in this case, the parameter is relevant, and the recommended value is the default one.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"smearing\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 and B3LYP exchange-correlation functionals. The system is an insulating material with a periodic cell in the z-direction and vacuum boundaries.\n\nThe \"smearing\" parameter controls the type of smearing method used in the calculation. Smearing is a technique used to deal with the partial occupations of the Kohn-Sham orbitals, which can occur in metallic or semiconductor systems. However, in this project, the system is insulating, and the occupations are set to 'smearing', which implies that smearing is used to deal with the partial occupations.\n\nGiven the insulating nature of the system, the most suitable smearing method would be the \"gaussian\" or \"fermi-dirac\" methods. However, the \"fermi-dirac\" method is more suitable for systems with a high degree of localization, which is not the case here. Therefore, the most appropriate value for the \"smearing\" parameter is \"gaussian\".\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"smearing\": \"gaussian\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"tolp\".\n\nThe parameter \"tolp\" is related to the tolerance for velocity rescaling in molecular dynamics (MD) simulations. It is used to determine when to rescale the velocities of the atoms to maintain a target temperature. The default value is 100.0.\n\nIn the provided project, the calculation type is not explicitly stated, but based on the presence of the \"ion_dynamics\" tag with values 'bfgs' and 'verlet', it can be inferred that the calculation type is likely 'relax' or 'md'. The \"tolp\" parameter is relevant to these calculation types.\n\nHowever, the project also contains tags indicating that it is a ground-state calculation with a fixed cell, which might not involve molecular dynamics. Nevertheless, the presence of \"ion_dynamics\" tags suggests that some form of ionic relaxation or dynamics might be involved.\n\nGiven the uncertainty, it is reasonable to assume that the \"tolp\" parameter might be relevant to the project. However, without explicit information about the calculation type, it is difficult to determine the optimal value.\n\nBased on the provided information, a conservative approach would be to use the default value of 100.0 for \"tolp\". This value is likely to be a reasonable choice for most simulations.\n\n```python\nparameter_value = {\n    \"tolp\": \"100.D0\"\n}\n```\n\nNote that if more information about the calculation type or the specific requirements of the project were available, a more informed decision could be made about the value of \"tolp\".",
            "Based on the provided project and tags, let's analyze the parameter \"cell_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 exchange-correlation functional and a Monkhorst-Pack k-point grid. The calculation type is not explicitly specified, but based on the presence of the \"CELL_PARAMETERS\" card and the \"ibrav = 0\" setting, it appears to be a fixed-cell calculation.\n\nThe \"cell_dynamics\" parameter is relevant to variable-cell calculations, which is not the case here. However, since the project includes the tag \"calculation = 'relax'\", it is likely that the user intends to perform a relaxation calculation, which may involve variable-cell dynamics.\n\nAccording to the Quantum ESPRESSO documentation, the \"cell_dynamics\" parameter is used to specify the type of dynamics for the cell in variable-cell calculations. Since the project includes the tag \"ion_dynamics = 'bfgs'\", which is a quasi-Newton algorithm for ionic relaxation, it is likely that the user wants to use a similar algorithm for cell relaxation.\n\nBased on this analysis, the most appropriate value for the \"cell_dynamics\" parameter is \"bfgs\", which is a BFGS quasi-Newton algorithm for variable-cell relaxation.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"cell_dynamics\": \"bfgs\"\n}\n```\n\nNote that this value is not strictly necessary for the current calculation, since the cell is fixed. However, if the user intends to perform a variable-cell relaxation calculation in the future, this value would be relevant.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_temperature\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 functional. The calculation type is a single-step calculation, specifically a ground-state calculation.\n\nThe parameter \"fcp_temperature\" is related to Fictitious Charge Particle (FCP) calculations, which are used in Car-Parrinello molecular dynamics (CPMD) simulations. However, the project does not involve CPMD or FCP calculations. The calculation type is a single-step ground-state calculation, and the tags do not mention FCP or CPMD.\n\nTherefore, the parameter \"fcp_temperature\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_temperature\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_conv_thr\".\n\nThe parameter \"fcp_conv_thr\" is related to Fictitious Charge Particle (FCP) relaxation, which is a method used in Quantum ESPRESSO to optimize the atomic positions in a system. The convergence threshold on force (eV) is a critical parameter in this process.\n\nIn the provided project, the calculation type is not explicitly stated, but based on the presence of the \"ion_dynamics\" tag with values 'bfgs' and 'verlet', it can be inferred that the calculation type is likely 'relax' or 'md'. Additionally, the presence of the \"lfcp\" tag is not explicitly mentioned, but since it is a required condition for using the \"fcp_conv_thr\" parameter, we can assume it is set to .TRUE.\n\nGiven the project's focus on stress calculations, total energy calculations, and relaxation calculations, the \"fcp_conv_thr\" parameter is relevant to the project.\n\nAccording to the Quantum ESPRESSO documentation, the default value for \"fcp_conv_thr\" is 1.D-2, which is a reasonable starting point for many systems. However, for systems with strong long-range interactions, such as those involving transition metals (Ti in this case), a tighter convergence threshold might be necessary.\n\nConsidering the presence of Ti in the system and the need for accurate stress and total energy calculations, a more stringent convergence threshold might be beneficial. A commonly used value for \"fcp_conv_thr\" in such cases is 1.D-4.\n\n```python\nparameter_value = {\n    \"fcp_conv_thr\": \"1.D-4\"\n}\n```\n\nNote that this value is not explicitly mentioned in the provided tags, but it is a reasonable choice based on the project's requirements and the characteristics of the system being studied.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"mixing_mode\" and the project.\n\nThe project involves a ground-state calculation of a periodic system with a monoclinic structure, using the PBE0 and B3LYP exchange-correlation functionals. The system is a slab system with a defined z-direction and has a vacuum boundary. The calculation type is a fixed-cell relaxation calculation.\n\nThe \"mixing_mode\" parameter controls the type of charge density mixing method used in the self-consistent field (SCF) calculation. The default value is \"plain\", which corresponds to charge density Broyden mixing.\n\nConsidering the project's characteristics, the \"mixing_mode\" parameter is relevant to the project. The system is a periodic, insulating system with a complex structure, which may require a more sophisticated mixing method to achieve convergence.\n\nAmong the possible values, \"local-TF\" seems to be the most suitable choice. This option uses a local-density-dependent Thomas-Fermi screening, which is more suitable for inhomogeneous systems like the one described in the project.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"mixing_mode\": \"local-TF\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"assume_isolated\".\n\nThe project is a Quantum ESPRESSO input file for a periodic system with a monoclinic structure, containing titanium and iodine atoms. The calculation type is not explicitly specified, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" cards, it appears to be a ground-state calculation.\n\nThe \"assume_isolated\" parameter is used to perform calculations assuming the system is isolated, such as a molecule or a cluster in a 3D supercell. However, the project describes a periodic system with a defined z-direction, which suggests that it is not isolated.\n\nAmong the possible usage conditions for \"assume_isolated\", we find \"vacuum boundaries\" and \"slab systems\", which are relevant to the project. However, the project does not describe a charged slab or an electrode boundary, and the \"ibrav\" value is 0, which does not correspond to a cubic supercell.\n\nConsidering the project's characteristics, the most suitable value for \"assume_isolated\" would be \"esm\", as it requires a cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0. This is consistent with the project's cell parameters.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"assume_isolated\": \"esm\"\n}\n```",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"fcp_mu\" and the project.\n\nThe parameter \"fcp_mu\" is related to the Fictitious Charge Particle (FCP) method, which is used to simulate systems under constant chemical potential conditions. However, the project provided is a ground-state calculation with a fixed cell and a Monkhorst-Pack grid, which does not involve constant chemical potential conditions. The calculation type is 'relax', but it is a fixed-cell relaxation, not a variable-cell relaxation that would require constant chemical potential conditions.\n\nFurthermore, the project does not mention the use of the FCP method or constant chemical potential conditions. The pseudopotentials used are also not indicative of FCP calculations.\n\nTherefore, I conclude that the parameter \"fcp_mu\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_mu\": None\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter \"calculation\" is a crucial input in Quantum ESPRESSO, as it determines the type of calculation to be performed. In the provided project, the system is a periodic, monoclinic slab system with a defined z-direction, and the user wants to perform stress calculations, total energy calculations, and relaxation calculations. The project also involves the use of pseudopotentials, a Monkhorst-Pack grid, and a smooth FFT grid.\n\n**Relevance of the parameter to the project:**\n\nThe parameter \"calculation\" is highly relevant to the project, as it will determine the type of calculation to be performed. The project involves relaxation calculations, which means that the atomic positions and possibly the lattice constants need to be optimized.\n\n**Selection of the parameter value:**\n\nBased on the project and the tags, the most suitable value for the \"calculation\" parameter is \"relax\". This is because the project involves relaxation calculations, and the \"relax\" option in Quantum ESPRESSO allows for the optimization of atomic positions while keeping the lattice constants fixed.\n\n**Python dictionary with the parameter value:**\n\n```python\nparameter_value = {\n    \"calculation\": \"relax\"\n}\n```\n\nNote that the \"relax\" option is a multistep calculation, which is suitable for the project's requirements. The other options, such as \"scf\" or \"nscf\", are single-step calculations that may not be sufficient for the project's needs.",
            "Based on the provided project and tags, let's analyze the parameter \"esm_bc\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a slab system, likely a transition metal oxide, with a monoclinic structure. The calculation type is 'relax', which is a multistep calculation. The tags indicate that this is a slab system with vacuum boundaries, and the exchange-correlation functional is PBE0 or B3LYP.\n\nThe parameter \"esm_bc\" is related to the boundary conditions used for the slab system when the \"assume_isolated\" parameter is set to 'esm'. Since the project has a slab system with vacuum boundaries, this parameter is relevant.\n\nAccording to the documentation, the possible values for \"esm_bc\" are:\n\n* pbc: regular periodic calculation (no ESM)\n* bc1: Vacuum-slab-vacuum (open boundary conditions)\n* bc2: Metal-slab-metal (dual electrode configuration)\n* bc3: Vacuum-slab-metal\n\nGiven the project's characteristics, the most suitable value for \"esm_bc\" is bc1, as it corresponds to a vacuum-slab-vacuum configuration, which is consistent with the presence of vacuum boundaries in the slab system.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"esm_bc\": \"bc1\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"trust_radius_max\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 functional. The calculation type is 'relax', which is a multistep calculation. The ion dynamics is set to 'bfgs', which is a quasi-Newton optimization algorithm.\n\nThe parameter \"trust_radius_max\" is relevant to the project because it is used in the BFGS algorithm to control the maximum ionic displacement during the structural relaxation. According to the Quantum ESPRESSO documentation, \"trust_radius_max\" is the maximum allowed displacement of the ions in a single step of the BFGS algorithm.\n\nGiven the project's conditions, a suitable value for \"trust_radius_max\" would be around 0.8-1.0 Bohr radii, which is a typical range for many systems. However, considering the system is a transition metal (Ti) and an insulator (I2), a slightly smaller value might be more suitable to avoid large displacements.\n\nTherefore, I select the default value of 0.8D0 as the most appropriate value for \"trust_radius_max\" in this project.\n\n```python\nparameter_value = {\n    \"trust_radius_max\": \"0.8D0\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"tempw\".\n\nThe parameter \"tempw\" is related to the temperature in molecular dynamics (MD) runs or the target temperature for most thermostats. According to the Quantum ESPRESSO documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'.\n\nIn the provided project, the calculation type is not explicitly specified. However, based on the presence of the \"ion_dynamics\" tag with values 'bfgs' and 'verlet', which are related to relaxation and molecular dynamics calculations, respectively, it can be inferred that the calculation type is likely 'relax' or 'md'.\n\nGiven the relevance of the parameter to the project, let's select an appropriate value. The default value is 300.0 K, which is a reasonable starting point for many systems. However, considering the presence of transition metals (Ti) and the fact that the system is a slab with vacuum boundaries, a slightly higher temperature might be more suitable to account for the increased thermal fluctuations.\n\n```python\nparameter_value = {\n    \"tempw\": \"500.D0\"\n}\n```\n\nNote that the selected value is still within a reasonable range and can be adjusted based on further analysis or specific requirements of the project.",
            "Based on the provided project and tags, let's analyze the parameter \"gcscf_beta\".\n\nThe parameter \"gcscf_beta\" is related to GC-SCF (Grand Canonical Self-Consistent Field) calculations, which is a method used to calculate the electronic structure of systems with a variable number of electrons. The \"gcscf_beta\" parameter controls the mixing factor for GC-SCF.\n\nIn the provided project, the calculation type is not explicitly stated, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" tags, it appears to be a ground-state calculation. The \"input_dft\" tag specifies the use of the PBE0 and B3LYP exchange-correlation functionals, which are commonly used in ground-state calculations.\n\nHowever, there is no indication that GC-SCF calculations are being performed in this project. The \"gcscf_beta\" parameter is not relevant to the project.\n\n```python\nparameter_value = {\n    \"gcscf_beta\": None\n}\n```\n\nNote that the \"gcscf_beta\" parameter is not relevant to the project, so its value is set to None.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a monoclinic system with a slab geometry, using the PBE0 exchange-correlation functional and a Monkhorst-Pack k-point grid. The calculation type is 'relax', as indicated by the \"calculation = 'relax'\" tag.\n\nThe parameter \"fcp_dynamics\" is related to the Fictitious Charge Particle (FCP) method, which is used to accelerate the convergence of the self-consistent field (SCF) cycle in certain types of calculations. However, the FCP method is not explicitly mentioned in the project, and the \"lfcp\" tag is not present.\n\nAccording to the rules, the \"fcp_dynamics\" parameter is only relevant if \"lfcp = .TRUE.\" and the calculation type is either 'relax' or 'md'. Since \"lfcp\" is not present in the project, we cannot assume its value, and therefore, the \"fcp_dynamics\" parameter is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_dynamics\": None\n}\n```\n\nIn this case, the value of the \"fcp_dynamics\" parameter is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"nbnd\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 and B3LYP exchange-correlation functionals. The system is a monoclinic crystal with a periodic cell in the z-direction and a vacuum boundary.\n\nThe parameter \"nbnd\" is related to the number of electronic states (bands) to be calculated. According to the Quantum ESPRESSO documentation, \"nbnd\" is a mandatory input parameter for all types of calculations.\n\nConsidering the project, we can see that it is a ground-state calculation, which is a single-step calculation. The system is also an insulator, as indicated by the \"insulating systems\" tag.\n\nAccording to the default values provided, for insulators, the recommended value for \"nbnd\" is \"number of valence bands (number_of_electrons/2)\". Let's calculate this value.\n\nThe number of valence electrons for Ti is 4 (3d^2 4s^2), and for I is 7 (5s^2 5p^5). Therefore, the total number of valence electrons is 4 + 2*7 = 18. The number of valence bands is 18/2 = 9.\n\nHowever, since the system is a periodic system with a defined z-direction, we need to consider the number of bands in the direction of periodicity. In this case, we can use the default value for insulators as a starting point and adjust it according to the system's periodicity.\n\nA common approach is to use a slightly larger value to ensure convergence. Let's use 12 as a reasonable estimate for \"nbnd\".\n\nHere is the output:\n\n```python\nparameter_value = {\n    \"nbnd\": \"12\"\n}\n```\n\nNote that this value is a reasonable estimate and may need to be adjusted based on the specific requirements of the calculation and the system's properties.",
            "Based on the provided project and tags, let's analyze the parameter \"pot_extrapolation\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 functional. The calculation type is not explicitly stated, but based on the presence of the \"ion_dynamics\" tag with value \"bfgs\", it can be inferred that the calculation is a relaxation calculation, which is a multistep calculation.\n\nThe \"pot_extrapolation\" parameter is relevant to relaxation calculations, as stated in the Possible_Usage_Conditions and Usage_Conditions. This parameter controls how the potential is extrapolated from preceding ionic steps during the relaxation process.\n\nConsidering the project's requirements, the most suitable value for \"pot_extrapolation\" would be \"atomic\". This is because the \"atomic\" option extrapolates the potential as if it was a sum of atomic-like orbitals, which is a reasonable assumption for a solid-state system like TiI2.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"pot_extrapolation\": \"atomic\"\n}\n```\n\nNote that the other options, \"none\", \"first_order\", and \"second_order\", are not suitable for this project. \"none\" would not perform any extrapolation, while \"first_order\" and \"second_order\" are only relevant for molecular dynamics calculations, which is not the case here.",
            "Based on the provided project and tags, let's analyze the parameter \"conv_thr\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiI2 system using the PBE0 and B3LYP exchange-correlation functionals. The calculation type is 'scf' (self-consistent field), as indicated by the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" cards.\n\nThe parameter \"conv_thr\" is relevant to this project, as it is used in self-consistent calculations ('scf') to set the convergence threshold for the estimated energy error.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"conv_thr\" is 1.D-6, which is a reasonable choice for most systems. However, for systems with a large number of electrons or complex electronic structures, a tighter convergence threshold may be necessary.\n\nConsidering the system under study, TiI2, which is a transition metal compound with a relatively complex electronic structure, a tighter convergence threshold may be beneficial. A commonly used value for \"conv_thr\" in such cases is 1.D-8.\n\nTherefore, the selected value for the parameter \"conv_thr\" is 1.D-8.\n\n```python\nparameter_value = {\n    \"conv_thr\": \"1.D-8\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_tempw\".\n\nThe parameter \"fcp_tempw\" is related to Fictitious Charge Particle (FCP) dynamics runs, which is a method used in molecular dynamics simulations to accelerate the convergence of the electronic degrees of freedom. The parameter \"fcp_tempw\" represents the starting temperature (Kelvin) in FCP dynamics runs.\n\nIn the provided project, the calculation type is not explicitly stated, but based on the presence of the \"ion_dynamics\" tag with values \"bfgs\" and \"verlet\", it can be inferred that the calculation type is likely \"relax\" or \"md\". Additionally, the presence of the \"lfcp\" tag is not explicitly mentioned, but it is a required condition for the usage of \"fcp_tempw\".\n\nHowever, considering the project's focus on stress calculations, total energy calculations, and ground state calculations, it is unlikely that FCP dynamics is being used. The project seems to be focused on static calculations rather than molecular dynamics.\n\nTherefore, based on the provided information, the parameter \"fcp_tempw\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_tempw\": None\n}\n```"
        ],
        "evaluated_parameters_graph": {
            "directed": true,
            "multigraph": false,
            "graph": {},
            "nodes": [
                {
                    "Parameter_Name": "calculation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "scf"
                    },
                    "Description": "calculation\nA string describing the task to be performed",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'",
                        "calculation = 'bands'",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Fixed cell calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "scf": "standard calculation",
                        "nscf": null,
                        "bands": null,
                        "relax": "only the atomic positions are allowed to vary",
                        "md": "ab-initio molecular dynamics (MD) simulations",
                        "vc-relax": "allows to vary both the atomic positions and lattice constants",
                        "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "calculation"
                },
                {
                    "Parameter_Name": "tprnfor",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "tprnfor\ncalculate forces",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-md'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "when calculation = 'relax','md','vc-md'"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "tprnfor"
                },
                {
                    "Parameter_Name": "ntyp",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ntyp\nnumber of types of atoms in the unit cell",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ntyp"
                },
                {
                    "Parameter_Name": "nbnd",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "insulator": "number of valence bands (number_of_electrons/2)",
                        "metal": "(number of valence bands)*1.2"
                    },
                    "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                    "Possible_Usage_Conditions": [
                        "Insulating systems",
                        "Metallic systems",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nbnd"
                },
                {
                    "Parameter_Name": "nr1s, nr2s, nr3s",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )",
                    "Possible_Usage_Conditions": [
                        "Smooth FFT grid",
                        "Ultrasoft pseudopotentials",
                        "PAW sets"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "all three dimensions should be set, to use this parameter",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nr1s, nr2s, nr3s"
                },
                {
                    "Parameter_Name": "nosym_evc",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                    "Possible_Usage_Conditions": [
                        "Monkhorst-Pack grid",
                        "custom k-points",
                        "full BZ coverage"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                    },
                    "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                    "Namelist": "&SYSTEM",
                    "id": "nosym_evc"
                },
                {
                    "Parameter_Name": "occupations",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "occupations\nControls how electronic occupations are determined",
                    "Possible_Usage_Conditions": [
                        "DOS calculations",
                        "stress calculations",
                        "Relaxation calculations",
                        "Dynamics calculations",
                        "Metallic systems",
                        "Insulating systems",
                        "Uniform k-point grid",
                        "Single k-point",
                        "occupations = 'smearing'",
                        "Tetrahedron method (Bloechl's version)",
                        "Linear tetrahedron method",
                        "Optimized tetrahedron method",
                        "Fixed occupations",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": null,
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "smearing": "for metals, requires parameters smearing and degauss",
                        "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                        "tetrahedra_lin": "original linear tetrahedron method, reference only",
                        "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                        "fixed": "for insulators with a gap",
                        "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "occupations"
                },
                {
                    "Parameter_Name": "degauss",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.D0"
                    },
                    "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'bands'",
                        "Metallic systems",
                        "partial occupations",
                        "occupations = 'smearing'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "degauss"
                },
                {
                    "Parameter_Name": "smearing",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "gaussian"
                    },
                    "Description": "smearing\nControls the type of smearing method to be used",
                    "Possible_Usage_Conditions": [
                        "Metallic systems",
                        "Semiconductor systems",
                        "partial occupations",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "gaussian/gauss": "ordinary Gaussian spreading",
                        "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                        "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                        "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "smearing"
                },
                {
                    "Parameter_Name": "assume_isolated",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'vc-relax'",
                        "Cubic supercells",
                        "2D periodic systems in x-y plane",
                        "Isolated (non-periodic) systems",
                        "charged slabs",
                        "vacuum boundaries",
                        "electrode boundaries",
                        "optional electric field"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "regular periodic calculation w/o any correction",
                        "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                        "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                        "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                    },
                    "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                    "Namelist": "&SYSTEM",
                    "id": "assume_isolated"
                },
                {
                    "Parameter_Name": "esm_bc",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "pbc"
                    },
                    "Description": "esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "Slab systems",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = 'esm'",
                    "Parameter_Value_Conditions": {
                        "pbc": "regular periodic calculation (no ESM)",
                        "bc1": "Vacuum-slab-vacuum (open boundary conditions)",
                        "bc2": "Metal-slab-metal (dual electrode configuration)",
                        "bc3": "Vacuum-slab-metal"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_bc"
                },
                {
                    "Parameter_Name": "scf_must_converge",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": ".TRUE."
                    },
                    "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                    },
                    "Final_comments": "Use with care.",
                    "Namelist": "&ELECTRONS",
                    "id": "scf_must_converge"
                },
                {
                    "Parameter_Name": "conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-6"
                    },
                    "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "conv_thr"
                },
                {
                    "Parameter_Name": "mixing_mode",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "plain"
                    },
                    "Description": "mixing_mode\nControls the type of charge density mixing method",
                    "Possible_Usage_Conditions": [
                        "homogeneous systems",
                        "inhomogeneous systems",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "plain": "charge density Broyden mixing",
                        "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                        "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                    },
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_mode"
                },
                {
                    "Parameter_Name": "mixing_beta",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.7D0"
                    },
                    "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                    "Possible_Usage_Conditions": [
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_beta"
                },
                {
                    "Parameter_Name": "ion_positions",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "default"
                    },
                    "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "",
                    "Parameter_Value_Conditions": {
                        "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                        "from_input": "read atomic positions from standard input, even if restarting"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_positions"
                },
                {
                    "Parameter_Name": "ion_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "calculation=relax": "bfgs",
                        "calculation=md": "verlet",
                        "calculation=vc-relax": "bfgs",
                        "calculation=vc-md": "beeman"
                    },
                    "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                        "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                        "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                        "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                        "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                        "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                        "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_dynamics"
                },
                {
                    "Parameter_Name": "pot_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "atomic"
                    },
                    "Description": "pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "atomic": "extrapolate the potential as if it was a sum of atomic-like orbitals",
                        "first_order": "extrapolate the potential with first-order formula",
                        "second_order": "extrapolate the potential with second order formula"
                    },
                    "Final_comments": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations",
                    "Namelist": "&IONS",
                    "id": "pot_extrapolation"
                },
                {
                    "Parameter_Name": "wfc_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "first_order": "extrapolate the wave-functions with first-order formula",
                        "second_order": "extrapolate the wave-functions with second order formula"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "wfc_extrapolation"
                },
                {
                    "Parameter_Name": "ion_temperature",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "not_controlled"
                    },
                    "Description": "ion_temperature\nControls the ionic temperature using different methods",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                        "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                        "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                        "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                        "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                        "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                        "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                        "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                        "not_controlled": "(default) ionic temperature is not controlled"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_temperature"
                },
                {
                    "Parameter_Name": "tempw",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "300.D0"
                    },
                    "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tempw"
                },
                {
                    "Parameter_Name": "tolp",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tolp"
                },
                {
                    "Parameter_Name": "refold_pos",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'md'",
                        "calculation = 'relax'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'damp'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "refold_pos"
                },
                {
                    "Parameter_Name": "upscale",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "upscale"
                },
                {
                    "Parameter_Name": "bfgs_ndim",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "1": "standard quasi-Newton BFGS method is used"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "bfgs_ndim"
                },
                {
                    "Parameter_Name": "trust_radius_max",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.8D0"
                    },
                    "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_max"
                },
                {
                    "Parameter_Name": "trust_radius_min",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-3"
                    },
                    "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "trust_radius < trust_radius_min": "BFGS is reset"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_min"
                },
                {
                    "Parameter_Name": "trust_radius_ini",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_ini"
                },
                {
                    "Parameter_Name": "w_1",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.01D0"
                    },
                    "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_1"
                },
                {
                    "Parameter_Name": "w_2",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_2"
                },
                {
                    "Parameter_Name": "fire_alpha_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.2D0"
                    },
                    "Description": "fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                    "Parameter_Value_Conditions": {
                        "0.1-0.3": "recommended values"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "fire_alpha_init"
                },
                {
                    "Parameter_Name": "cell_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null,
                        "vc-relax": "bfgs"
                    },
                    "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                    "Parameter_Value_Conditions": {
                        "none": "no dynamics (both vc-relax and vc-md)",
                        "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                        "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                        "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                        "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                        "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CELL",
                    "id": "cell_dynamics"
                },
                {
                    "Parameter_Name": "fcp_conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-2"
                    },
                    "Description": "fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "FCP calculations",
                        "lfcp = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&FCP",
                    "id": "fcp_conv_thr"
                },
                {
                    "Parameter_Name": "nr1, nr2, nr3",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "nr1, nr2, nr3\nThree-dimensional FFT mesh (hard grid) for charge density (and scf potential)",
                    "Possible_Usage_Conditions": [
                        "charge density calculations",
                        "Hard FFT grid"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "If not specified the grid is calculated based on the cutoff for charge density (see also ecutrho)",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": "all three dimensions should be set, to use this parameter",
                    "Namelist": "&SYSTEM",
                    "id": "nr1, nr2, nr3"
                },
                {
                    "Parameter_Name": "ecutrho",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "4 * ecutwfc"
                    },
                    "Description": "ecutrho\nKinetic energy cutoff (Ry) for charge density and potential",
                    "Possible_Usage_Conditions": [
                        "Gradient-corrected functionals"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Value requirements vary based on the type of pseudopotential and functional being used",
                    "Parameter_Value_Conditions": {
                        "default": "norm-conserving pseudopotential",
                        "8-12 * ecutwfc": "ultrasoft PP",
                        "4 * ecutwfc": "PAW datasets (requires testing)",
                        "higher than default": "gradient-corrected functional, cells with vacuum, or pseudopotential without non-linear core correction"
                    },
                    "Final_comments": "For norm-conserving pseudopotential, small reductions from default are possible but introduce noise in forces and stress. For PAW datasets, testing is mandatory due to augmentation charge shape dependency.",
                    "Namelist": "&SYSTEM",
                    "id": "ecutrho"
                },
                {
                    "Parameter_Name": "ecutwfc",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ecutwfc\nkinetic energy cutoff (Ry) for wavefunctions",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ecutwfc"
                },
                {
                    "Parameter_Name": "noinv",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "noinv\nif (.TRUE.) disable the usage of k => -k symmetry (time reversal) in k-point generation",
                    "Possible_Usage_Conditions": [
                        "Non-collinear magnetic calculations",
                        "custom k-points"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "noinv"
                },
                {
                    "Card_Name": "K_POINTS",
                    "Namelist": "Card: K_POINTS",
                    "Required/Optional": null,
                    "Card_Options": [
                        "tpiba",
                        "tpiba_b",
                        "tpiba_c",
                        "crystal",
                        "crystal_b",
                        "crystal_c",
                        "gamma",
                        "automatic"
                    ],
                    "Default_Option": "tpiba",
                    "Description": null,
                    "Card_Use_Conditions": null,
                    "Card_Option_Given_Conditions": {
                        "gamma": "wavefunctions can be chosen as real, and specialized subroutines optimized for calculations at the gamma point are used",
                        "automatic": "generates uniform grid of k-points with specified grid and offset parameters"
                    },
                    "Syntax_Given_Option": {
                        "tpiba": "K_POINTS tpiba\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal": "K_POINTS crystal\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_b": "K_POINTS tpiba_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_b": "K_POINTS crystal_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_c": "K_POINTS tpiba_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_c": "K_POINTS crystal_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "automatic": "K_POINTS automatic\nnk1 nk2 nk3 sk1 sk2 sk3",
                        "gamma": "K_POINTS gamma"
                    },
                    "Item_Description": {
                        "nks": "Number of supplied special k-points",
                        "xk_x, xk_y, xk_z": "Special k-points in the irreducible Brillouin Zone (IBZ) of the lattice (with all symmetries)",
                        "wk": "weights",
                        "nk1, nk2, nk3": "These parameters specify the k-point grid (nk1 x nk2 x nk3) as in Monkhorst-Pack grids",
                        "sk1, sk2, sk3": "The grid offsets"
                    },
                    "Item_Conditions": {
                        "sk1, sk2, sk3": "must be 0 (no offset) or 1 (grid displaced by half a grid step in the corresponding direction)",
                        "nks": "must be 3 for tpiba_c and crystal_c options"
                    },
                    "General_Syntax": null,
                    "Final_comments": "Only grids having the full symmetry of the crystal work with tetrahedra. Some grids with offset may not work.",
                    "Possible_Usage_Conditions": [],
                    "id": "K_POINTS"
                },
                {
                    "Card_Name": "OCCUPATIONS",
                    "Namelist": "Card: OCCUPATIONS",
                    "Required/Optional": "optional",
                    "Card_Options": null,
                    "Default_Option": null,
                    "Description": null,
                    "Card_Use_Conditions": {
                        "occupations": "from_input"
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": null,
                    "Item_Description": {
                        "f_inp1": "Occupations of individual states (MAX 10 PER ROW). For spin-polarized calculations, these are majority spin states.",
                        "f_inp2": "Occupations of minority spin states (MAX 10 PER ROW)"
                    },
                    "Item_Conditions": {
                        "f_inp2": "To be specified only for spin-polarized calculations"
                    },
                    "General_Syntax": "OCCUPATIONS\nf_inp1(1) f_inp1(2) . . . f_inp1(nbnd)\n[ f_inp2(1) f_inp2(2) . . . f_inp2(nbnd) ]",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "occupations = 'from_input'"
                    ],
                    "id": "OCCUPATIONS"
                },
                {
                    "Parameter_Name": "tot_charge",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": 0.0
                    },
                    "Description": "tot_charge\nTotal charge of the system. Useful for simulations with charged cells.",
                    "Possible_Usage_Conditions": [
                        "charged cells"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when simulating systems with non-neutral charge states. In periodic calculations, a compensating jellium background is inserted for non-neutral cells.",
                    "Parameter_Value_Conditions": {
                        "0": "neutral cell",
                        "+1": "one electron missing from the system",
                        "-1": "one additional electron"
                    },
                    "Final_comments": "In a periodic calculation a compensating jellium background is inserted to remove divergences if the cell is not neutral.",
                    "Namelist": "&SYSTEM",
                    "id": "tot_charge"
                },
                {
                    "Parameter_Name": "nspin",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nspin\nControls spin polarization type in calculations",
                    "Possible_Usage_Conditions": [
                        "nspin = 1",
                        "nspin = 2",
                        "Collinear magnetic calculations (LSDA)",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "1": "non-polarized calculation",
                        "2": "spin-polarized calculation, LSDA (magnetization along z axis)",
                        "4": "spin-polarized calculation, noncollinear (magnetization in generic direction)"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nspin"
                },
                {
                    "Parameter_Name": "constrained_magnetization",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "constrained_magnetization\nUsed to perform constrained calculations in magnetic systems.",
                    "Possible_Usage_Conditions": [
                        "Magnetic systems",
                        "Non-collinear magnetic calculations",
                        "Collinear magnetic calculations (LSDA)"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "no constraint",
                        "total": "total magnetization is constrained by adding a penalty term to total energy, noncolinear case only",
                        "atomic": "atomic magnetization are constrained to defined starting magnetization",
                        "total direction": "angle theta of total magnetization with z axis is constrained",
                        "atomic direction": "only cosine of angle1 of atomic magnetic moment is constrained"
                    },
                    "Final_comments": "Note: symmetrization may prevent to reach the desired orientation of the magnetization. Try not to start with very highly symmetric configurations or use the nosym flag (only as a last remedy)",
                    "Namelist": "&SYSTEM",
                    "id": "constrained_magnetization"
                },
                {
                    "Parameter_Name": "esm_efield",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.d0"
                    },
                    "Description": "esm_efield\ngives the magnitude of the electric field [Ry/a.u.] to be applied between semi-infinite ESM electrodes",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\" and esm_bc = \"bc2\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_efield"
                },
                {
                    "Parameter_Name": "esm_w",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.d0"
                    },
                    "Description": "esm_w\ndetermines the position offset [in a.u.] of the start of the effective screening region, measured relative to the cell edge. (ESM region begins at z = +/- [L_z/2 + esm_w] )",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "periodic cell with defined z-direction",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_w"
                },
                {
                    "Parameter_Name": "esm_nfit",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 4
                    },
                    "Description": "esm_nfit\ngives the number of z-grid points for the polynomial fit along the cell edge",
                    "Possible_Usage_Conditions": [
                        "assume_isolated must be set to 'esm'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_nfit"
                },
                {
                    "Parameter_Name": "cell_dofree",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "all"
                    },
                    "Description": "cell_dofree\nSelect which of the cell parameters should be moved",
                    "Possible_Usage_Conditions": [
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in vc-relax or vc-md calculation",
                    "Parameter_Value_Conditions": {
                        "all": "all axis and angles are moved",
                        "ibrav": "all axis and angles are moved, but the lattice remains consistent with the initial ibrav choice",
                        "a": "the x component of axis 1 (v1_x) is fixed",
                        "b": "the y component of axis 2 (v2_y) is fixed",
                        "c": "the z component of axis 3 (v3_z) is fixed",
                        "fixa": "axis 1 (v1_x,v1_y,v1_z) is fixed",
                        "fixb": "axis 2 (v2_x,v2_y,v2_z) is fixed",
                        "fixc": "axis 3 (v3_x,v3_y,v3_z) is fixed",
                        "x": "only the x component of axis 1 (v1_x) is moved",
                        "y": "only the y component of axis 2 (v2_y) is moved",
                        "z": "only the z component of axis 3 (v3_z) is moved",
                        "xy": "only v1_x and v2_y are moved",
                        "xz": "only v1_x and v3_z are moved",
                        "yz": "only v2_y and v3_z are moved",
                        "xyz": "only v1_x, v2_y, v3_z are moved",
                        "shape": "all axis and angles, keeping the volume fixed",
                        "volume": "the volume changes, keeping all angles fixed (i.e. only celldm(1) changes)",
                        "2Dxy": "only x and y components are allowed to change",
                        "2Dshape": "as above, keeping the area in xy plane fixed",
                        "epitaxial_ab": "fix axis 1 and 2 while allowing axis 3 to move",
                        "epitaxial_ac": "fix axis 1 and 3 while allowing axis 2 to move",
                        "epitaxial_bc": "fix axis 2 and 3 while allowing axis 1 to move"
                    },
                    "Final_comments": "Note: if axis are not orthogonal, some of these options do not work (symmetry is broken).",
                    "Namelist": "&CELL",
                    "id": "cell_dofree"
                },
                {
                    "Parameter_Name": "electron_maxstep",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 100
                    },
                    "Description": "electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "electron_maxstep"
                },
                {
                    "Parameter_Name": "diago_thr_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null,
                        "scf_atomic_orbitals": "1.D-2",
                        "scf_charge_density": "1.D-5",
                        "non_scf": "(conv_thr/N elec)/10"
                    },
                    "Description": "diago_thr_init\nConvergence threshold (ethr) for iterative diagonalization (the check is on eigenvalue convergence)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "During self consistency (scf) the threshold is automatically reduced (but never below 1.D-13) when approaching convergence",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "diago_thr_init"
                },
                {
                    "Card_Name": "CONSTRAINTS",
                    "Namelist": "Card: CONSTRAINTS",
                    "Required/Optional": "optional",
                    "Card_Options": [
                        "type_coord",
                        "atom_coord",
                        "distance",
                        "planar_angle",
                        "torsional_angle",
                        "bennett_proj",
                        "potential_wall"
                    ],
                    "Default_Option": null,
                    "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                    "Card_Use_Conditions": {
                        "calculation": [
                            "calculation = 'relax'",
                            "calculation = 'md'"
                        ],
                        "ion_dynamics": [
                            "damp",
                            "verlet"
                        ],
                        "not_compatible": [
                            "calculation = 'vc-relax'",
                            "calculation = 'vc-md'"
                        ]
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": {
                        "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                        "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                        "distance": "constr_type distance constr(1) constr(2) constr_target",
                        "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                        "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                        "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                        "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                    },
                    "Item_Description": {
                        "nconstr": "The total number of constraints to be applied",
                        "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                        "constr_type": "Type of constraint"
                    },
                    "Item_Conditions": null,
                    "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "ion_dynamics = 'verlet'",
                        "ion_dynamics = 'damp'"
                    ],
                    "id": "CONSTRAINTS"
                },
                {
                    "Parameter_Name": "nraise",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                        "1/nraise": "when ion_temperature = 'andersen'"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "nraise"
                },
                {
                    "Parameter_Name": "delta_t",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D0"
                    },
                    "Description": "delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "positive": "when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling",
                        "negative": "when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps"
                    },
                    "Final_comments": "For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.",
                    "Namelist": "&IONS",
                    "id": "delta_t"
                },
                {
                    "Parameter_Name": "lfcp",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "ESM calculations",
                        "Constant bias potential calculations",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "'calculation' must be 'relax' or 'md'",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))"
                    },
                    "Final_comments": "The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.",
                    "Namelist": "&CONTROL",
                    "id": "lfcp"
                }
            ],
            "edges": [
                {
                    "condition": "parameter is automatically set",
                    "source_node": "tprnfor",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "tprnfor",
                    "source": "tprnfor",
                    "target": "calculation"
                },
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "nr1, nr2, nr3"
                },
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "ecutrho"
                },
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "ecutwfc"
                },
                {
                    "condition": "when noinv=.true., time revers",
                    "source_node": "nosym_evc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nosym_evc",
                    "source": "nosym_evc",
                    "target": "noinv"
                },
                {
                    "condition": "requires smearing and degauss ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "smearing"
                },
                {
                    "condition": "tetrahedra method requires uni",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "K_POINTS"
                },
                {
                    "condition": "from_input option requires occ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "OCCUPATIONS"
                },
                {
                    "condition": "from_input option requires nbn",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "nbnd"
                },
                {
                    "condition": "from_input occupations should ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "tot_charge"
                },
                {
                    "condition": "gaussian smearing for metals o",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "occupations"
                },
                {
                    "condition": "used in Gaussian smearing",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "degauss"
                },
                {
                    "condition": "for spin-polarized calculation",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "nspin"
                },
                {
                    "condition": "for magnetic calculations",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "constrained_magnetization"
                },
                {
                    "condition": "Used with esm to choose bounda",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_bc"
                },
                {
                    "condition": "Used with esm for optional ele",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_efield"
                },
                {
                    "condition": "Related to esm",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_w"
                },
                {
                    "condition": "Related to esm",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_nfit"
                },
                {
                    "condition": "Should be set to \"2Dxy\" when u",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "cell_dofree"
                },
                {
                    "condition": "must be set to 'esm'",
                    "source_node": "esm_bc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "esm_bc",
                    "source": "esm_bc",
                    "target": "assume_isolated"
                },
                {
                    "condition": "related when bc2 is used",
                    "source_node": "esm_bc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "esm_bc",
                    "source": "esm_bc",
                    "target": "esm_efield"
                },
                {
                    "condition": "referenced when scf_must_conve",
                    "source_node": "scf_must_converge",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "scf_must_converge",
                    "source": "scf_must_converge",
                    "target": "electron_maxstep"
                },
                {
                    "condition": "In nscf calculations, conv_thr",
                    "source_node": "conv_thr",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "conv_thr",
                    "source": "conv_thr",
                    "target": "diago_thr_init"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "calculation"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "mixing_beta"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "smearing"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "mixing_mode"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "smearing"
                },
                {
                    "condition": "can be used with 'damp' and 'f",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "CONSTRAINTS"
                },
                {
                    "condition": "for vc-relax with 'bfgs', requ",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "cell_dynamics"
                },
                {
                    "condition": "'relax', 'md', 'vc-relax', or ",
                    "source_node": "pot_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "pot_extrapolation",
                    "source": "pot_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "'first_order' and 'second-orde",
                    "source_node": "wfc_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "wfc_extrapolation",
                    "source": "wfc_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tempw"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "nraise"
                },
                {
                    "condition": "used with rescaling method",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tolp"
                },
                {
                    "condition": "used with rescale-T and reduce",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "delta_t"
                },
                {
                    "condition": "must be 'md' or ion_dynamics m",
                    "source_node": "refold_pos",
                    "source_type": "&IONS",
                    "relationship_defined_by": "refold_pos",
                    "source": "refold_pos",
                    "target": "calculation"
                },
                {
                    "condition": "can be 'damp'",
                    "source_node": "refold_pos",
                    "source_type": "&IONS",
                    "relationship_defined_by": "refold_pos",
                    "source": "refold_pos",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "'conv_thr' is automatically re",
                    "source_node": "upscale",
                    "source_type": "&IONS",
                    "relationship_defined_by": "upscale",
                    "source": "upscale",
                    "target": "conv_thr"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be bfgs",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: relax, md, vc-",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "calculation"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_1",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_1",
                    "source": "w_1",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "w_2",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_2",
                    "source": "w_2",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_2",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_2",
                    "source": "w_2",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "fire_alpha_init",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_alpha_init",
                    "source": "fire_alpha_init",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'fire'",
                    "source_node": "fire_alpha_init",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_alpha_init",
                    "source": "fire_alpha_init",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be 'bfgs' when cell_dynam",
                    "source_node": "cell_dynamics",
                    "source_type": "&CELL",
                    "relationship_defined_by": "cell_dynamics",
                    "source": "cell_dynamics",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be .TRUE.",
                    "source_node": "fcp_conv_thr",
                    "source_type": "&FCP",
                    "relationship_defined_by": "fcp_conv_thr",
                    "source": "fcp_conv_thr",
                    "target": "lfcp"
                },
                {
                    "condition": "must be 'relax' or 'md'",
                    "source_node": "fcp_conv_thr",
                    "source_type": "&FCP",
                    "relationship_defined_by": "fcp_conv_thr",
                    "source": "fcp_conv_thr",
                    "target": "calculation"
                }
            ]
        },
        "trimmed_documentation": [
            {
                "Parameter_Name": "calculation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "scf"
                },
                "Description": "calculation\nA string describing the task to be performed",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'",
                    "calculation = 'bands'",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Fixed cell calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "scf": "standard calculation",
                    "nscf": null,
                    "bands": null,
                    "relax": "only the atomic positions are allowed to vary",
                    "md": "ab-initio molecular dynamics (MD) simulations",
                    "vc-relax": "allows to vary both the atomic positions and lattice constants",
                    "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tprnfor",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": null
                },
                "Description": "tprnfor\ncalculate forces",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-md'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when calculation = 'relax','md','vc-md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "parameter is automatically set to .TRUE. when calculation is 'relax','md','vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "lorbm",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "lorbm\nIf .TRUE. perform orbital magnetization calculation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'nscf'",
                    "norm-conserving pseudopotentials",
                    "Uniform k-point grid",
                    "Kubo terms"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.",
                "Parameter_Value_Conditions": {
                    "TRUE": "Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed."
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lelfield": "If lelfield=.true., only Kubo terms are computed"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "twochem",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when performing two chemical potential calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "must be set to smearing",
                    "nelec_cond": "related parameter",
                    "nbnd_cond": "related parameter",
                    "degauss_cond": "related parameter"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "ntyp",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "ntyp\nnumber of types of atoms in the unit cell",
                "Possible_Usage_Conditions": [],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nbnd",
                "Value_Type": "integer",
                "Default_Values": {
                    "insulator": "number of valence bands (number_of_electrons/2)",
                    "metal": "(number of valence bands)*1.2"
                },
                "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                "Possible_Usage_Conditions": [
                    "Insulating systems",
                    "Metallic systems",
                    "Spin-polarized calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nr1s, nr2s, nr3s",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )",
                "Possible_Usage_Conditions": [
                    "Smooth FFT grid",
                    "Ultrasoft pseudopotentials",
                    "PAW sets"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "all three dimensions should be set, to use this parameter",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "nr1, nr2, nr3": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutrho": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutwfc": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym_evc",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                "Possible_Usage_Conditions": [
                    "Monkhorst-Pack grid",
                    "custom k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "when noinv=.true., time reversal symmetry is not assumed"
                },
                "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "occupations",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null
                },
                "Description": "occupations\nControls how electronic occupations are determined",
                "Possible_Usage_Conditions": [
                    "DOS calculations",
                    "stress calculations",
                    "Relaxation calculations",
                    "Dynamics calculations",
                    "Metallic systems",
                    "Insulating systems",
                    "Uniform k-point grid",
                    "Single k-point",
                    "occupations = 'smearing'",
                    "Tetrahedron method (Bloechl's version)",
                    "Linear tetrahedron method",
                    "Optimized tetrahedron method",
                    "Fixed occupations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": null,
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "smearing": "for metals, requires parameters smearing and degauss",
                    "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                    "tetrahedra_lin": "original linear tetrahedron method, reference only",
                    "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                    "fixed": "for insulators with a gap",
                    "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "smearing": "requires smearing and degauss parameters",
                    "K_POINTS": "tetrahedra method requires uniform grid of k-points",
                    "OCCUPATIONS": "from_input option requires occupations to be read from OCCUPATIONS card",
                    "nbnd": "from_input option requires nbnd parameter to be set",
                    "tot_charge": "from_input occupations should be consistent with tot_charge"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "one_atom_occupations",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.",
                "Possible_Usage_Conditions": [
                    "single atom/isolated systems",
                    "UPF pseudopotentials",
                    "Non-collinear magnetic calculations",
                    "Spin-orbit coupling",
                    "starting_magnetization=0.0",
                    "Isolated (non-periodic) systems",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only for isolated atoms (nat=1) and when occupations='from_input'",
                "Parameter_Value_Conditions": {
                    "TRUE": "When ordering of wavefunctions as atomic starting wavefunctions is needed"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "Must be set to 'from_input'",
                    "nat": "Must be 1",
                    "starting_magnetization": "Equal to 0.0 for spin-orbit with time-reversal case",
                    "starting_spin_angle": "Can be set to TRUE in magnetic case with spin-orbit"
                },
                "Final_comments": "The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss_cond",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0 Ry"
                },
                "Description": "degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)",
                "Possible_Usage_Conditions": [
                    "Two-chemical-potential calculations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in two-chemical potential calculations when twochem = .True.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "twochem": "Parameter is used when twochem = .True."
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                "Possible_Usage_Conditions": [
                    "calculation = 'bands'",
                    "Metallic systems",
                    "partial occupations",
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "smearing",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "gaussian"
                },
                "Description": "smearing\nControls the type of smearing method to be used",
                "Possible_Usage_Conditions": [
                    "Metallic systems",
                    "Semiconductor systems",
                    "partial occupations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "gaussian/gauss": "ordinary Gaussian spreading",
                    "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                    "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                    "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "gaussian smearing for metals occupations='smearing'",
                    "degauss": "used in Gaussian smearing",
                    "nspin": "for spin-polarized calculations",
                    "constrained_magnetization": "for magnetic calculations"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "assume_isolated",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-relax'",
                    "Cubic supercells",
                    "2D periodic systems in x-y plane",
                    "Isolated (non-periodic) systems",
                    "charged slabs",
                    "vacuum boundaries",
                    "electrode boundaries",
                    "optional electric field"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "none": "regular periodic calculation w/o any correction",
                    "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                    "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                    "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "esm_bc": "Used with esm to choose boundary conditions",
                    "esm_efield": "Used with esm for optional electric field",
                    "esm_w": "Related to esm",
                    "esm_nfit": "Related to esm",
                    "cell_dofree": "Should be set to \"2Dxy\" when using 2D option in vc-relax calculations"
                },
                "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "esm_bc",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "pbc"
                },
                "Description": "esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.",
                "Possible_Usage_Conditions": [
                    "ESM calculations",
                    "Slab systems",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used when assume_isolated = 'esm'",
                "Parameter_Value_Conditions": {
                    "pbc": "regular periodic calculation (no ESM)",
                    "bc1": "Vacuum-slab-vacuum (open boundary conditions)",
                    "bc2": "Metal-slab-metal (dual electrode configuration)",
                    "bc3": "Vacuum-slab-metal"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "assume_isolated": "must be set to 'esm'",
                    "esm_efield": "related when bc2 is used"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "gcscf_beta",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.05D0"
                },
                "Description": "gcscf_beta\nMixing factor for GC-SCF.",
                "Possible_Usage_Conditions": [
                    "GC-SCF calculations",
                    "DOS of materials",
                    "Materials like graphite",
                    "Grand canonical ensemble"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Larger values are recommended if systems with small DOS on Fermi surface as graphite.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "scf_must_converge",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": ".TRUE."
                },
                "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "electron_maxstep": "referenced when scf_must_converge is .false."
                },
                "Final_comments": "Use with care.",
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-6"
                },
                "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "diago_thr_init": "In nscf calculations, conv_thr is used to set the default value of the threshold (ethr) for iterative diagonalization"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_mode",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "plain"
                },
                "Description": "mixing_mode\nControls the type of charge density mixing method",
                "Possible_Usage_Conditions": [
                    "homogeneous systems",
                    "inhomogeneous systems",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "plain": "charge density Broyden mixing",
                    "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                    "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "Used in SCF calculations",
                    "mixing_beta": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_beta",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.7D0"
                },
                "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                "Possible_Usage_Conditions": [
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "mixing_mode": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "ion_positions",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "default"
                },
                "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "",
                "Parameter_Value_Conditions": {
                    "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                    "from_input": "read atomic positions from standard input, even if restarting"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation=relax": "bfgs",
                    "calculation=md": "verlet",
                    "calculation=vc-relax": "bfgs",
                    "calculation=vc-md": "beeman"
                },
                "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                    "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                    "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                    "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                    "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                    "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                    "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "CONSTRAINTS": "can be used with 'damp' and 'fire' for constrained optimization, and with 'verlet' for constrained dynamics",
                    "cell_dynamics": "for vc-relax with 'bfgs', requires cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "pot_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "atomic"
                },
                "Description": "pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "atomic": "extrapolate the potential as if it was a sum of atomic-like orbitals",
                    "first_order": "extrapolate the potential with first-order formula",
                    "second_order": "extrapolate the potential with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "wfc_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "first_order": "extrapolate the wave-functions with first-order formula",
                    "second_order": "extrapolate the wave-functions with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "ion_temperature\nControls the ionic temperature using different methods",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                    "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                    "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                    "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                    "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                    "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                    "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                    "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                    "not_controlled": "(default) ionic temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tempw": "used with most temperature control methods",
                    "nraise": "used with most temperature control methods",
                    "tolp": "used with rescaling method",
                    "delta_t": "used with rescale-T and reduce-T methods"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "tempw",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "300.D0"
                },
                "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "tolp",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                    "1/nraise": "when ion_temperature = 'andersen'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_temperature": {
                        "reduce-T": "temperature reduction by delta_t",
                        "rescale-v": "average temperature rescaling to tempw",
                        "rescaling": "instantaneous temperature rescaling to tempw (with vc-md)",
                        "berendsen": "rise time parameter calculation",
                        "andersen": "collision frequency parameter calculation",
                        "svr": "characteristic time setting"
                    },
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "refold_pos",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                "Possible_Usage_Conditions": [
                    "calculation = 'md'",
                    "calculation = 'relax'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'damp'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be 'md' or ion_dynamics must be 'damp'",
                    "ion_dynamics": "can be 'damp'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "upscale",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "conv_thr": "'conv_thr' is automatically reduced when the relaxation approaches convergence so that forces are still accurate, but 'conv_thr' will not be reduced to less that conv_thr / upscale"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "bfgs_ndim",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "1": "standard quasi-Newton BFGS method is used"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_max",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.8D0"
                },
                "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_min",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-3"
                },
                "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "trust_radius < trust_radius_min": "BFGS is reset"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be bfgs",
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_ini",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_1",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.01D0"
                },
                "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_2",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_alpha_init",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.2D0"
                },
                "Description": "fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": {
                    "0.1-0.3": "recommended values"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_falpha",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.99D0"
                },
                "Description": "fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_nmin",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 5
                },
                "Description": "fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_inc",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.1D0"
                },
                "Description": "fire_f_inc\nFactor for increasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_dec",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "fire_f_dec\nFactor for decreasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_dtmax",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "10.D0"
                },
                "Description": "fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "dt": "dtmax = fire_dtmax*dt"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "cell_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null,
                    "vc-relax": "bfgs"
                },
                "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                "Parameter_Value_Conditions": {
                    "none": "no dynamics (both vc-relax and vc-md)",
                    "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                    "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                    "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                    "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                    "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs' when cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&CELL"
            },
            {
                "Parameter_Name": "fcp_mu",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "constant chemical potential conditions"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if lfcp = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation = relax": "bfgs",
                    "calculation = md": "velocity-verlet"
                },
                "Description": "fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "calculation = 'relax'",
                    "newton": "calculation = 'relax'",
                    "damp": "calculation = 'relax'",
                    "lm": "calculation = 'relax'",
                    "velocity-verlet": "calculation = 'md'",
                    "verlet": "calculation = 'md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": {
                        "bfgs": "must be bfgs",
                        "newton": "must be damp",
                        "damp": "must be damp",
                        "lm": "must be damp",
                        "velocity-verlet": "must be verlet",
                        "verlet": "must be verlet"
                    }
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-2"
                },
                "Description": "fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_ndiis",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 4
                },
                "Description": "fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'",
                    "fcp_dynamics": "only used if equal to 'newton'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_mass",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null,
                    "ESM": "5.D+6 / (xy area)",
                    "ESM-RISM": "5.D+4 / (xy area)"
                },
                "Description": "fcp_mass\nMass of the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_velocity",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "determined by fcp_temperature"
                },
                "Description": "fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'",
                    "fcp_temperature": "determines default value"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'",
                    "rescale-v": "control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "rescale-T": "control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'",
                    "reduce-T": "reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'",
                    "berendsen": "control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "andersen": "control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "initial": "initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on",
                    "not_controlled": "(default) FCP's temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_tempw": [
                        "rescaling",
                        "rescale-v",
                        "berendsen",
                        "andersen",
                        "initial"
                    ],
                    "fcp_tolp": [
                        "rescaling"
                    ],
                    "fcp_nraise": [
                        "rescale-v",
                        "reduce-T",
                        "berendsen",
                        "andersen"
                    ],
                    "fcp_delta_t": [
                        "rescale-T",
                        "reduce-T"
                    ]
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_tempw",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from tempw"
                },
                "Description": "fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be relax or md"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_tolp",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from tolp"
                },
                "Description": "fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tolp": "reads default value from"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_delta_t",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from &IONS -> delta_t"
                },
                "Description": "fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_delta_t < 0": "For cooling/heating rate calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "&IONS": "reads default value from delta_t",
                    "fcp_nraise": "Used in reduce-T mode for step counting",
                    "fcp_temperature": "Determines mode of operation"
                },
                "Final_comments": "The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.",
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": "reads from nraise"
                },
                "Description": "fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_temperature = reduce-T": "every fcp_nraise steps temperature reduced by -fcp_delta_t",
                    "fcp_temperature = rescale-v": "every fcp_nraise steps average temperature rescaled to fcp_tempw",
                    "fcp_temperature = berendsen": "tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise",
                    "fcp_temperature = andersen": "nu*dt = 1/fcp_nraise"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_temperature": "determines how fcp_nraise is used",
                    "fcp_delta_t": "used when fcp_temperature = reduce-T",
                    "fcp_tempw": "used when fcp_temperature = rescale-v"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "nsolv",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nsolv\nThe number of solvents (i.e. molecular species) in the unit cell",
                "Possible_Usage_Conditions": [
                    "RISM calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if trism = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Parameter_Name": "laue_starting_left",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.0
                },
                "Description": "laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.",
                "Possible_Usage_Conditions": [
                    "RISM calculations",
                    "Periodic systems",
                    "Laue boundary conditions",
                    "Systems with solvent-solute interactions"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if trism = .TRUE. and for Laue-RISM",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE.",
                    "laue_expand_left": "used in solvent region definition"
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Card_Name": "CONSTRAINTS",
                "Namelist": "Card: CONSTRAINTS",
                "Required/Optional": "optional",
                "Card_Options": [
                    "type_coord",
                    "atom_coord",
                    "distance",
                    "planar_angle",
                    "torsional_angle",
                    "bennett_proj",
                    "potential_wall"
                ],
                "Default_Option": null,
                "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                "Card_Use_Conditions": {
                    "calculation": [
                        "calculation = 'relax'",
                        "calculation = 'md'"
                    ],
                    "ion_dynamics": [
                        "damp",
                        "verlet"
                    ],
                    "not_compatible": [
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ]
                },
                "Card_Option_Given_Conditions": null,
                "Syntax_Given_Option": {
                    "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                    "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                    "distance": "constr_type distance constr(1) constr(2) constr_target",
                    "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                    "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                    "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                    "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                },
                "Item_Description": {
                    "nconstr": "The total number of constraints to be applied",
                    "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                    "constr_type": "Type of constraint"
                },
                "Item_Conditions": null,
                "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be set to 'damp' or 'verlet'"
                },
                "Final_comments": null,
                "Possible_Usage_Conditions": [
                    "ion_dynamics = 'verlet'",
                    "ion_dynamics = 'damp'"
                ]
            }
        ],
        "trimmed_documentation_string": [
            "Parameter_Name:\n\"fire_dtmax\"\nDefault_Values:\n{\n  default:\n\"10.D0\"\n}\nDescription:\n\"fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Card_Name:\n\"CONSTRAINTS\"\nNamelist:\n\"Card: CONSTRAINTS\"\nDescription:\n\"Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\"\nFinal_comments: None\nPossible_Usage_Conditions: [\n  ion_dynamics = 'verlet',\n  ion_dynamics = 'damp',\n]",
            "Parameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_tolp\"\nDefault_Values:\n{\n  default:\n\"reads from tolp\"\n}\nDescription:\n\"fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nraise\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  nraise*dt:\n\"when ion_temperature = 'berendsen' or 'svr'\"\n  1/nraise:\n\"when ion_temperature = 'andersen'\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"lorbm\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lorbm\nIf .TRUE. perform orbital magnetization calculation.\"\nPossible_Usage_Conditions: [\n  calculation = 'nscf',\n  norm-conserving pseudopotentials,\n  Uniform k-point grid,\n  Kubo terms,\n]\nUsage_Conditions:\n\"Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed.\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_velocity\"\nDefault_Values:\n{\n  default:\n\"determined by fcp_temperature\"\n}\nDescription:\n\"fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_mass\"\nDefault_Values:\n{\n  default: None\n  ESM:\n\"5.D+6 / (xy area)\"\n  ESM-RISM:\n\"5.D+4 / (xy area)\"\n}\nDescription:\n\"fcp_mass\nMass of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_ndiis\"\nDefault_Values:\n{\n  default:\n4\n}\nDescription:\n\"fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"tolp\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"cell_dynamics\"\nDefault_Values:\n{\n  default: None\n  vc-relax:\n\"bfgs\"\n}\nDescription:\n\"cell_dynamics\nSpecify the type of dynamics for the cell.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions:\n{\n  none:\n\"no dynamics (both vc-relax and vc-md)\"\n  damp-pr:\n\"damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)\"\n  damp-w:\n\"damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)\"\n  bfgs:\n\"BFGS quasi-newton algorithm (vc-relax)\"\n  pr:\n\"(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)\"\n  w:\n\"(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)\"\n}\nFinal_comments: None\nNamelist:\n\"&CELL\"",
            "Parameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-2\"\n}\nDescription:\n\"fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"esm_bc\"\nDefault_Values:\n{\n  default:\n\"pbc\"\n}\nDescription:\n\"esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.\"\nPossible_Usage_Conditions: [\n  ESM calculations,\n  Slab systems,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"Used when assume_isolated = 'esm'\"\nParameter_Value_Conditions:\n{\n  pbc:\n\"regular periodic calculation (no ESM)\"\n  bc1:\n\"Vacuum-slab-vacuum (open boundary conditions)\"\n  bc2:\n\"Metal-slab-metal (dual electrode configuration)\"\n  bc3:\n\"Vacuum-slab-metal\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"tempw\"\nDefault_Values:\n{\n  default:\n\"300.D0\"\n}\nDescription:\n\"tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"gcscf_beta\"\nDefault_Values:\n{\n  default:\n\"0.05D0\"\n}\nDescription:\n\"gcscf_beta\nMixing factor for GC-SCF.\"\nPossible_Usage_Conditions: [\n  GC-SCF calculations,\n  DOS of materials,\n  Materials like graphite,\n  Grand canonical ensemble,\n]\nUsage_Conditions:\n\"Larger values are recommended if systems with small DOS on Fermi surface as graphite.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"nbnd\"\nDefault_Values:\n{\n  insulator:\n\"number of valence bands (number_of_electrons/2)\"\n  metal:\n\"(number of valence bands)*1.2\"\n}\nDescription:\n\"nbnd\nNumber of electronic states (bands) to be calculated.\"\nPossible_Usage_Conditions: [\n  Insulating systems,\n  Metallic systems,\n  Spin-polarized calculations,\n]\nUsage_Conditions:\n\"Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"pot_extrapolation\"\nDefault_Values:\n{\n  default:\n\"atomic\"\n}\nDescription:\n\"pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  atomic:\n\"extrapolate the potential as if it was a sum of atomic-like orbitals\"\n  first_order:\n\"extrapolate the potential with first-order formula\"\n  second_order:\n\"extrapolate the potential with second order formula\"\n}\nFinal_comments:\n\"'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"fcp_tempw\"\nDefault_Values:\n{\n  default:\n\"reads from tempw\"\n}\nDescription:\n\"fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\""
        ],
        "qe_generation_template": "&CONTROL calculation, value: relax, value_type: character\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nbnd, value: 12, value_type: integer\n&SYSTEM nr1s, nr2s, nr3s, value: 4 4 4, value_type: integer\n&SYSTEM nosym_evc, value: TRUE, value_type: logical\n&SYSTEM occupations, value: fixed, value_type: character\n&SYSTEM degauss, value: 0.D0, value_type: real\n&SYSTEM smearing, value: gaussian, value_type: character\n&SYSTEM assume_isolated, value: esm, value_type: character\n&SYSTEM esm_bc, value: bc1, value_type: character\n&ELECTRONS scf_must_converge, value: .TRUE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-8, value_type: real\n&ELECTRONS mixing_mode, value: local-TF, value_type: character\n&ELECTRONS mixing_beta, value: 0.4D0, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS pot_extrapolation, value: atomic, value_type: character\n&IONS wfc_extrapolation, value: second_order, value_type: character\n&IONS ion_temperature, value: andersen, value_type: character\n&IONS tempw, value: 500.D0, value_type: real\n&IONS tolp, value: 100.D0, value_type: real\n&IONS refold_pos, value: True, value_type: logical\n&IONS upscale, value: 50.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 0.8D0, value_type: real\n&IONS trust_radius_min, value: 1.D-4, value_type: real\n&IONS trust_radius_ini, value: 0.1D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS w_2, value: 0.5D0, value_type: real\n&IONS fire_alpha_init, value: 0.2D0, value_type: real\n&CELL cell_dynamics, value: bfgs, value_type: character\n&FCP fcp_conv_thr, value: 1.D-4, value_type: real\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514",
        "qe_initialization": "&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514",
        "generated_input": "qe_input=QeMatch(qe_input_gen=\"&CONTROL\\n  calculation = 'relax'\\n  tprnfor = .TRUE.\\n  pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\\n  outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\\n  title = 'test'\\n/\\n\\n&SYSTEM\\n  ibrav = 0\\n  nat = 3\\n  ntyp = 2\\n  nbnd = 12\\n  ecutwfc = 35.0\\n  ecutrho = 280.0\\n  nosym_evc = .TRUE.\\n  occupations = 'fixed'\\n  degauss = 0.D0\\n  smearing = 'gaussian'\\n  assume_isolated = 'esm'\\n  esm_bc = 'bc1'\\n/\\n\\n&ELECTRONS\\n  scf_must_converge = .TRUE.\\n  conv_thr = 1.D-8\\n  mixing_mode = 'local-TF'\\n  mixing_beta = 0.4D0\\n/\\n\\n&IONS\\n  ion_positions = 'from_input'\\n  ion_dynamics = 'bfgs'\\n  pot_extrapolation = 'atomic'\\n  wfc_extrapolation = 'second_order'\\n  ion_temperature = 'andersen'\\n  tempw = 500.D0\\n  tolp = 100.D0\\n  refold_pos = .TRUE.\\n  upscale = 50.D0\\n  bfgs_ndim = 1\\n  trust_radius_max = 0.8D0\\n  trust_radius_min = 1.D-4\\n  trust_radius_ini = 0.1D0\\n  w_1 = 0.01D0\\n  w_2 = 0.5D0\\n  fire_alpha_init = 0.2D0\\n/\\n\\n&CELL\\n  cell_dynamics = 'bfgs'\\n/\\n\\nFCP\\n  fcp_conv_thr = 1.D-4\\n/\\n\\nATOMIC_SPECIES\\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\\nTi     47.867 ti_pbe_v1.4.uspp\\n\\nATOMIC_POSITIONS angstrom\\nI        0.9625001706     0.5556997326     1.7629012409\\nTi      -0.9625001705     1.6670991977     0.0000000000\\nI        0.9625001706     2.7784986630    17.2820694105\\n\\nK_POINTS automatic\\n7 7 2 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n    3.8500006824     0.0000000000     0.0000000000\\n   -1.9250003411     3.3341983955     0.0000000000\\n    0.0000000000     0.0000000000    19.0449706514\\n\")",
        "error_msg": [],
        "log_qe_gen_prompt": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nCreate a Quantum Espresso input file for 'calculation = 'relax'\nGround state calculations\nRelaxation calculations\nStress calculations\nTotal energy calculations' calculation of 'TiI2' compound, based on the given CONTEXT and DETAILS.\n\n<CONTEXT>\n&CONTROL title = 'test'\n\n&CONTROL calculation, value: relax, value_type: character\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nbnd, value: 12, value_type: integer\n&SYSTEM nr1s, nr2s, nr3s, value: 4 4 4, value_type: integer\n&SYSTEM nosym_evc, value: TRUE, value_type: logical\n&SYSTEM occupations, value: fixed, value_type: character\n&SYSTEM degauss, value: 0.D0, value_type: real\n&SYSTEM smearing, value: gaussian, value_type: character\n&SYSTEM assume_isolated, value: esm, value_type: character\n&SYSTEM esm_bc, value: bc1, value_type: character\n&ELECTRONS scf_must_converge, value: .TRUE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-8, value_type: real\n&ELECTRONS mixing_mode, value: local-TF, value_type: character\n&ELECTRONS mixing_beta, value: 0.4D0, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS pot_extrapolation, value: atomic, value_type: character\n&IONS wfc_extrapolation, value: second_order, value_type: character\n&IONS ion_temperature, value: andersen, value_type: character\n&IONS tempw, value: 500.D0, value_type: real\n&IONS tolp, value: 100.D0, value_type: real\n&IONS refold_pos, value: True, value_type: logical\n&IONS upscale, value: 50.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 0.8D0, value_type: real\n&IONS trust_radius_min, value: 1.D-4, value_type: real\n&IONS trust_radius_ini, value: 0.1D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS w_2, value: 0.5D0, value_type: real\n&IONS fire_alpha_init, value: 0.2D0, value_type: real\n&CELL cell_dynamics, value: bfgs, value_type: character\n&FCP fcp_conv_thr, value: 1.D-4, value_type: real\n&SYSTEM\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n</CONTEXT>\n\n<DETAILS>\nCalculate relaxation of the structure based on relax calculation for TiI2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</DETAILS>\n\n<RULES>\n- Write the input file for the given calculation type\n- Set the value of the variables based on the CONTEXT and the DETAILS\n- Use only relevant parameters based on the CONTEXT, DETAILS\n- Each parameter should be under correct namelist\n- Each parameter should have a correct value type such as integer, real, character, or logical\n- The namelists &CONTROL, &SYSTEM, &ELECTRONS, must be in this order exactly\n- The cards ATOMIC_SPECIES, ATOMIC_POSITIONS, K_POINTS, and CELL_PARAMETERS must be present and based on CONTEXT and DETAILS\n- In &CONTROL should have 'pseudo_dir': /home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp and 'outdir':'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir' defined, according to the given CONTEXT\n</RULES>\n\n<OUTPUT>\n- Write the input file\n- Put the code blocks in ```fortran and ```.\n- Review the code to see how the generated code followed the RULES, CONTEXT, and DETAILS, then give some explanation.\n</OUTPUT>\n"
        ],
        "log_qe_input": [
            "&CONTROL\n  calculation = 'relax'\n  tprnfor = .TRUE.\n  pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n  outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n  title = 'test'\n/\n\n&SYSTEM\n  ibrav = 0\n  nat = 3\n  ntyp = 2\n  nbnd = 12\n  ecutwfc = 35.0\n  ecutrho = 280.0\n  nosym_evc = .TRUE.\n  occupations = 'fixed'\n  degauss = 0.D0\n  smearing = 'gaussian'\n  assume_isolated = 'esm'\n  esm_bc = 'bc1'\n/\n\n&ELECTRONS\n  scf_must_converge = .TRUE.\n  conv_thr = 1.D-8\n  mixing_mode = 'local-TF'\n  mixing_beta = 0.4D0\n/\n\n&IONS\n  ion_positions = 'from_input'\n  ion_dynamics = 'bfgs'\n  pot_extrapolation = 'atomic'\n  wfc_extrapolation = 'second_order'\n  ion_temperature = 'andersen'\n  tempw = 500.D0\n  tolp = 100.D0\n  refold_pos = .TRUE.\n  upscale = 50.D0\n  bfgs_ndim = 1\n  trust_radius_max = 0.8D0\n  trust_radius_min = 1.D-4\n  trust_radius_ini = 0.1D0\n  w_1 = 0.01D0\n  w_2 = 0.5D0\n  fire_alpha_init = 0.2D0\n/\n\n&CELL\n  cell_dynamics = 'bfgs'\n/\n\nFCP\n  fcp_conv_thr = 1.D-4\n/\n\nATOMIC_SPECIES\nI     126.904 I.pbe-n-kjpaw_psl.0.2.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nI        0.9625001706     0.5556997326     1.7629012409\nTi      -0.9625001705     1.6670991977     0.0000000000\nI        0.9625001706     2.7784986630    17.2820694105\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.8500006824     0.0000000000     0.0000000000\n   -1.9250003411     3.3341983955     0.0000000000\n    0.0000000000     0.0000000000    19.0449706514\n"
        ],
        "log_qe_solution": [],
        "rest_formula_data": {
            "formula": "TiI2",
            "k_points_2d": "None",
            "uuid": "18a2c3a5-93c4-439a-9c6d-6deaf2ba3667",
            "ase_atom_object": "None",
            "indx": "None"
        },
        "workflow_log": [
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Interface agent",
                    "start_time": "2025-02-07 12:37:22"
                },
                "timestamp": "2025-02-07 12:37:22.327988",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:37:22",
                    "end_time": "2025-02-07 12:37:28",
                    "message": "Interface agent"
                },
                "timestamp": "2025-02-07 12:37:28.215833",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "2D structure generation",
                    "start_time": "2025-02-07 12:37:28"
                },
                "timestamp": "2025-02-07 12:37:28.215952",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:37:28",
                    "end_time": "2025-02-07 12:37:28",
                    "message": "2D structure generation"
                },
                "timestamp": "2025-02-07 12:37:28.425360",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Starting Quantum Espresso documentation collection",
                    "start_time": "2025-02-07 12:37:28"
                },
                "timestamp": "2025-02-07 12:37:28.425474",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:37:28",
                    "end_time": "2025-02-07 12:37:31",
                    "message": "Quantum Espresso documentation collection"
                },
                "timestamp": "2025-02-07 12:37:31.035585",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso condition extraction",
                    "start_time": "2025-02-07 12:37:31"
                },
                "timestamp": "2025-02-07 12:37:31.035661",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:37:31",
                    "end_time": "2025-02-07 12:38:16",
                    "message": "Quantum Espresso condition extraction"
                },
                "timestamp": "2025-02-07 12:38:16.101261",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Parameter graph generation",
                    "start_time": "2025-02-07 12:38:16"
                },
                "timestamp": "2025-02-07 12:38:16.101371",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:38:16",
                    "end_time": "2025-02-07 12:38:16",
                    "message": "Parameter graph generation"
                },
                "timestamp": "2025-02-07 12:38:16.106551",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Documentation collection for trimmed parameters",
                    "start_time": "2025-02-07 12:38:16"
                },
                "timestamp": "2025-02-07 12:38:16.106614",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:38:16",
                    "end_time": "2025-02-07 12:38:16",
                    "message": "Documentation collection for trimmed parameters"
                },
                "timestamp": "2025-02-07 12:38:16.107998",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input parameter evaluation",
                    "start_time": "2025-02-07 12:38:16"
                },
                "timestamp": "2025-02-07 12:38:16.108052",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:38:16",
                    "end_time": "2025-02-07 12:40:23",
                    "message": "Quantum Espresso input parameter evaluation"
                },
                "timestamp": "2025-02-07 12:40:23.725781",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation template",
                    "start_time": "2025-02-07 12:40:23"
                },
                "timestamp": "2025-02-07 12:40:23.726075",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:40:23",
                    "end_time": "2025-02-07 12:40:23",
                    "message": "Quantum Espresso input generation template"
                },
                "timestamp": "2025-02-07 12:40:23.734334",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation",
                    "start_time": "2025-02-07 12:40:23"
                },
                "timestamp": "2025-02-07 12:40:23.734415",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:40:23",
                    "end_time": "2025-02-07 12:40:35",
                    "message": "Quantum Espresso input generation"
                },
                "timestamp": "2025-02-07 12:40:35.043893",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso is initializing",
                    "start_time": "2025-02-07 12:40:35"
                },
                "timestamp": "2025-02-07 12:40:35.044020",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:40:35",
                    "end_time": "2025-02-07 12:40:36",
                    "message": "Quantum Espresso calculation completed successfully"
                },
                "timestamp": "2025-02-07 12:40:36.631404",
                "level": "INFO"
            }
        ],
        "workflow_state": "FINISHED"
    }
]
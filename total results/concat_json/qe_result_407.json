[
    {
        "project_signature": "test",
        "calculation_description": "Conduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.",
        "analysis_dict": {
            "description": "Conduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.",
            "formula": "ReS2",
            "database": "mc3d"
        },
        "get_conditions_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCalculation_types\n- Berry phase calculations\n- Constant bias potential calculations\n- DOS calculations\n- Dynamical Mean Field Theory\n- Dynamics calculations\n- ESM calculations\n- FCP calculations\n- GC-SCF calculations\n- Ground state calculations\n- HP code calculations\n- LDA+U calculations\n- Linear-response calculations\n- Relaxation calculations\n- Two-chemical-potential calculations\n- calculation = 'bands'\n- calculation = 'md'\n- calculation = 'nscf'\n- calculation = 'relax'\n- calculation = 'scf'\n- calculation = 'vc-md'\n- calculation = 'vc-relax'\n- charge density calculations\n- dispersion correction calculations\n- stress calculations\n- total energy calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nFunctional_and_method_types\n- BEEF-type functionals\n- Conjugate gradient diagonalization\n- Davidson diagonalization\n- PPCG diagonalization\n- Paro diagonalization\n- RMM-DIIS diagonalization\n- DFT-D calculations\n- DFT-D2 calculations\n- DFT-D3 calculations\n- Exact exchange calculations\n- Exchange-correlation functional\n- Exchange-hole dipole-moment model\n- Gradient-corrected functionals\n- Hybrid functional calculations\n- Hybrid functionals with exact exchange\n- Many-body dispersion (MBD) corrections\n- Parrinello-Rahman MD\n- Scissor operator corrections\n- Tkatchenko-Scheffler dispersion corrections\n- Wentzcovitch MD\n- functional is NOT one of: B86bPBE, PW86PBE, PBE, BLYP\n- gammaDFT calculations\n- input_dft='PBE0', 'B3LYP'\n- ion_dynamics = 'bfgs'\n- ion_dynamics = 'fire'\n- ion_dynamics = 'verlet'\n- ion_dynamics = 'damp'\n- long-range interactions\n- Non-collinear calculations\n- spin-orbit calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCell_and_material_properties\n- 2D periodic systems in x-y plane\n- Anisotropic supercells\n- Bravais lattice structure (values 0 to 14)\n- Correlated orbitals\n- Cubic supercells\n- DOS of materials\n- Fixed cell calculations\n- Framework/porous systems\n- Hard FFT grid\n- High symmetry systems\n- Insulating systems\n- Low-symmetry large cells\n- Materials like graphite\n- Materials with long-range interaction\n- Metallic systems\n- Monoclinic systems\n- Non-periodic systems\n- Periodic systems\n- Quasi-cubic supercells\n- Rare Earth Elements\n- Semiconductor systems\n- Slab systems\n- Smooth FFT grid\n- Strongly correlated electrons\n- Transition Metals\n- Variable cell calculations\n- charged cells\n- homogeneous systems\n- ibrav = -12\n- ibrav = -13\n- ibrav-defined crystal structure\n- ibrav = 5\n- ibrav = 0\n- inhomogeneous systems\n- non-symmorphic symmetry operations\n- periodic cell with defined z-direction\n- rhombohedral space group\n- single atom/isolated systems\n- symmetry-defined crystal structure\n- variable cell calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nPseudopotential_types\n- PAW sets\n- Pseudopotentials with Hubbard occupation\n- Relativistic pseudopotentials\n- UPF pseudopotentials\n- Ultrasoft pseudopotentials\n- nonlocal pseudopotentials\n- norm-conserving pseudopotentials\n- pseudopotential tables\n- pseudopotentials with spin-orbit coupling\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nMagnetism_and_Spin_conditions\n- Collinear magnetic calculations (LSDA)\n- Collinear spin\n- Constrained magnetization\n- Initial magnetization\n- Magnetic systems\n- Non-collinear magnetic calculations\n- Spin-orbit coupling\n- Spin-polarized calculations\n- lspinorb = .True.\n- nspin = 1\n- nspin = 2\n- starting_magnetization=0.0\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nIsolated_systems_and_boundary_conditions\n- Dielectric environment\n- Isolated (non-periodic) systems\n- Laue boundary conditions\n- Laue-RISM calculations\n- Systems using Reference Interaction Site Model (RISM)\n- Systems with solvent regions\n- Systems with solvent-solute interactions\n- assume_isolated must be set to 'esm'\n- charged slabs\n- constant chemical potential conditions\n- electrode boundaries\n- laue_wall != 'none'\n- vacuum boundaries\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nk_point_settings\n- Automatic k-points\n- Monkhorst-Pack grid\n- Non-automatic k-points\n- Single k-point\n- Uniform k-point grid\n- custom k-points\n- full BZ coverage\n- nosym k-points\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nElectric_field_conditions\n- 0 < emaxpos < 1\n- Kubo terms\n- System with electric field\n- block = .TRUE.\n- dielectrically consistent RISM (DRISM)\n- dipfield = .TRUE.\n- gate = .TRUE.\n- lelfield = .TRUE.\n- lfcp = .TRUE.\n- optional electric field\n- tefield = .TRUE.\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nOccupation_types\n- Fixed occupations\n- Smearing method\n- Grand canonical ensemble\n- Linear tetrahedron method\n- Optimized tetrahedron method\n- DFT+U Hubbard correction\n- DFT+U+V Hubbard correction\n- DFT+U+J Hubbard correction\n- Systems with empty states\n- Tetrahedron method (Bloechl's version)\n- occupations = 'from_input'\n- occupations = 'smearing'\n- partial occupations\n- valence and conduction manifolds\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "condition_tables": "                                       Item  ...                                     Final_comments\n0                         Calculation_types  ...  The calculation is a structural optimization (...\n1               Functional_and_method_types  ...  The calculation description specifies a struct...\n2              Cell_and_material_properties  ...  The calculation description specifies a struct...\n3                     Pseudopotential_types  ...  The calculation description specifies the use ...\n4             Magnetism_and_Spin_conditions  ...  The calculation description does not mention a...\n5  Isolated_systems_and_boundary_conditions  ...  The calculation description does not provide i...\n6                          k_point_settings  ...  The calculation description specifies the use ...\n7                 Electric_field_conditions  ...  The calculation description does not mention a...\n8                          Occupation_types  ...  The calculation description does not provide s...\n\n[9 rows x 4 columns]",
        "relevant_conditions": [
            "Tetrahedron method (Bloechl's version)",
            "Occupation_types",
            "total energy calculations",
            "Grand canonical ensemble",
            "occupations = 'from_input'",
            "ibrav-defined crystal structure",
            "cutoff of 70 Ry",
            "Semiconductor systems",
            "4x4x4 k-mesh for the BZ sampling",
            "Automatic k-points",
            "PAW pseudopotential",
            "vacuum boundaries",
            "nspin = 2",
            "Hybrid functional calculations",
            "ibrav = -13",
            "full BZ coverage",
            "Linear tetrahedron method",
            "Optimized tetrahedron method",
            "ibrav = 0",
            "Periodic systems",
            "DFT+U+J Hubbard correction",
            "DFT+U Hubbard correction",
            "ibrav = -12",
            "Systems with empty states",
            "High symmetry systems",
            "input_dft='PBE0'",
            "k-mesh",
            "cutoff",
            "norm-conserving pseudopotentials",
            "calculation = 'relax'",
            "DFT+U+V Hubbard correction",
            "PBE0",
            "valence and conduction manifolds",
            "Monkhorst-Pack grid",
            "ibrav constrain",
            "Ground state calculations",
            "ibrav = 5",
            "Fixed cell calculations",
            "Isolated_systems_and_boundary_conditions",
            "Uniform k-point grid",
            "Fixed occupations",
            "nonlocal pseudopotentials",
            "partial occupations",
            "occupations = 'smearing'",
            "Hybrid functionals with exact exchange",
            "PAW sets",
            "Transition Metals",
            "Smearing method"
        ],
        "parameter_evaluation_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym\nControls whether symmetry is used in calculations\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Low-symmetry large cells,\n  Isolated (non-periodic) systems,\n  custom k-points,\n  nosym k-points,\n  full BZ coverage,\n]\nUsage_Conditions:\n\"When .TRUE., symmetry is not used affecting k-points handling and charge density calculations\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"Disables symmetry usage, k-points list used as is, no symmetry-inequivalent k-points generation, no charge density symmetrization\"\n}\nFinal_comments:\n\"Do not use this option unless you know exactly what you want and what you get\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"celldm\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.\"\nPossible_Usage_Conditions: [\n  ibrav-defined crystal structure,\n]\nUsage_Conditions:\n\"Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified\"\nParameter_Value_Conditions:\n{\n  celldm(1):\n\"is the lattice parameter \"a\" (in BOHR)\"\n  celldm(1) when ibrav=0:\n\"only celldm(1) is used if present\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"starting_ns_eigenvalue\"\nDefault_Values:\n{\n  default:\n\"-1.d0\"\n}\nDescription:\n\"starting_ns_eigenvalue(m,ispin,ityp)\nIn the first iteration of an DFT+U run it overwrites the m-th eigenvalue of the ns occupation matrix for the ispin component of atomic species ityp.\"\nPossible_Usage_Conditions: [\n  DFT+U Hubbard correction,\n  Collinear magnetic calculations (LSDA),\n  Non-collinear magnetic calculations,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used in first iteration of DFT+U calculations. For noncollinear case, ispin index runs up to npol=2. The value lmax is given by the maximum angular momentum number to which the Hubbard U is applied.\"\nParameter_Value_Conditions:\n{\n  -1.d0:\n\"parameter not set\"\n  other values:\n\"overwrites eigenvalue of ns occupation matrix\"\n}\nFinal_comments:\n\"Leave unchanged eigenvalues that are not set. This is useful to suggest the desired orbital occupations when the default choice takes another path.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"screening_parameter\"\nDefault_Values:\n{\n  default:\n0.106\n}\nDescription:\n\"screening_parameter\nscreening_parameter for HSE like hybrid functionals.\"\nPossible_Usage_Conditions: [\n  Hybrid functional calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"exx_fraction\"\nDefault_Values:\n{\n  default: None\n  PBE0:\n0.25\n  B3LYP:\n0.2\n}\nDescription:\n\"exx_fraction\nFraction of EXX for hybrid functional calculations\"\nPossible_Usage_Conditions: [\n  Hybrid functional calculations,\n  input_dft='PBE0', 'B3LYP',\n]\nUsage_Conditions:\n\"Used in hybrid functional calculations\"\nParameter_Value_Conditions:\n{\n  0.25:\n\"When input_dft = 'PBE0'\"\n  0.20:\n\"When input_dft = 'B3LYP'\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"uniqueb\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"uniqueb\nUsed for monoclinic lattices to specify the orientation of the twofold axis or mirror normal\"\nPossible_Usage_Conditions: [\n  Monoclinic systems,\n  ibrav = -12,\n  ibrav = -13,\n]\nUsage_Conditions:\n\"Used only for monoclinic lattices\"\nParameter_Value_Conditions:\n{\n  True:\n\"twofold axis or mirror normal is parallel to b axis\"\n  False:\n\"twofold axis or mirror normal is parallel to c axis\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nqx1, nqx2, nqx3\"\nDefault_Values:\n{\n  default:\n\"the size of the k-point mesh used\"\n}\nDescription:\n\"nqx1, nqx2, nqx3\nThree-dimensional mesh for q (k1-k2) sampling of the Fock operator (EXX). Can be smaller than the number of k-points.\"\nPossible_Usage_Conditions: [\n  Exact exchange calculations,\n  Hybrid functionals with exact exchange,\n  custom k-points,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments:\n\"Currently this defaults to the size of the k-point mesh used.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"lfcp\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  ESM calculations,\n  Constant bias potential calculations,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"'calculation' must be 'relax' or 'md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))\"\n}\nFinal_comments:\n\"The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.\"\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"remove_rigid_rot\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"delta_t\"\nDefault_Values:\n{\n  default:\n\"1.D0\"\n}\nDescription:\n\"delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  positive:\n\"when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling\"\n  negative:\n\"when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps\"\n}\nFinal_comments:\n\"For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nelec_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"nelec_cond\nNumber of electrons placed in the conduction manifold in a two-chemical potential calculation (twochem = .True.). Of the total number of electrons nelec_cond will occupy the valence manifold and nelec_cond will be constrained in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  valence and conduction manifolds,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</Project>\n\n<Conditions>\nTetrahedron method (Bloechl's version)\nOccupation_types\ntotal energy calculations\nGrand canonical ensemble\noccupations = 'from_input'\nibrav-defined crystal structure\ncutoff of 70 Ry\nSemiconductor systems\n4x4x4 k-mesh for the BZ sampling\nAutomatic k-points\nPAW pseudopotential\nvacuum boundaries\nnspin = 2\nHybrid functional calculations\nibrav = -13\nfull BZ coverage\nLinear tetrahedron method\nOptimized tetrahedron method\nibrav = 0\nPeriodic systems\nDFT+U+J Hubbard correction\nDFT+U Hubbard correction\nibrav = -12\nSystems with empty states\nHigh symmetry systems\ninput_dft='PBE0'\nk-mesh\ncutoff\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nDFT+U+V Hubbard correction\nPBE0\nvalence and conduction manifolds\nMonkhorst-Pack grid\nibrav constrain\nGround state calculations\nibrav = 5\nFixed cell calculations\nIsolated_systems_and_boundary_conditions\nUniform k-point grid\nFixed occupations\nnonlocal pseudopotentials\npartial occupations\noccupations = 'smearing'\nHybrid functionals with exact exchange\nPAW sets\nTransition Metals\nSmearing method\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tefield\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.\"\nPossible_Usage_Conditions: [\n  Ground state calculations,\n  Relaxation calculations,\n  tefield = .TRUE.,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  True:\n\"A saw-like potential simulating an electric field is added to the bare ionic potential\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "parameters_collection": [
            {
                "calculation": "scf"
            },
            {
                "ntyp": "2"
            },
            {
                "nr1s, nr2s, nr3s": "Default values calculated based on ecutwfc and ecutrho"
            },
            {
                "nosym": ".TRUE."
            },
            {
                "nosym_evc": "False"
            },
            {
                "occupations": "'from_input'"
            },
            {
                "smearing": "methfessel-paxton"
            },
            {
                "exx_fraction": "0.25"
            },
            {
                "nqx1, nqx2, nqx3": "8x7x8"
            },
            {
                "starting_ns_eigenvalue": "-1.d0"
            },
            {
                "conv_thr": "1.D-6"
            },
            {
                "ion_positions": "from_input"
            },
            {
                "ion_dynamics": "bfgs"
            },
            {
                "upscale": "100.D0"
            },
            {
                "bfgs_ndim": "1"
            }
        ],
        "evaluated_parameters": [
            "Based on the provided project and the conditions, the parameter \"occupations\" is relevant to the project. The \"occupations\" parameter controls how electronic occupations are determined in Quantum ESPRESSO calculations. In this project, the calculation type is not explicitly mentioned, but the presence of the \"ATOMIC_POSITIONS\" and \"K_POINTS\" sections suggests that it is likely a single-step calculation such as 'scf', 'nscf', or 'bands'.\n\nThe project uses a uniform k-point grid, as indicated by the \"K_POINTS automatic\" section, and the \"ibrav = 0\" parameter indicates that the crystal structure is user-defined. The \"ecutwfc = 35.0\" and \"ecutrho = 280.0\" parameters specify the cutoff energy for the wavefunctions and charge density, respectively. The \"ATOMIC_SPECIES\" section lists the atomic species and their corresponding pseudopotentials.\n\nGiven these conditions, the appropriate value for the \"occupations\" parameter would be 'from_input'. This value is valid only for a single k-point and requires the \"nbnd\" parameter to be set in the input. The occupations should also be consistent with the \"tot_charge\" parameter. In this project, the \"K_POINTS\" section specifies a uniform grid of k-points, which is suitable for the 'from_input' value.\n\nTherefore, the appropriate value for the \"occupations\" parameter in this project is 'from_input'.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"occupations\": \"'from_input'\"}\n```",
            "Based on the provided project and the parameter description, the \"nosym\" parameter is relevant to the project. The project uses a user-defined crystal structure with ibrav = 0, which means the structure is not a standard one and the symmetry is not automatically determined. Therefore, the \"nosym\" parameter can be used to control whether symmetry is used in the calculations.\n\nIn this case, since the structure is not a standard one and the symmetry is not automatically determined, it would be appropriate to set \"nosym\" to .TRUE. to disable symmetry usage. This will ensure that the k-points list is used as is, no symmetry-inequivalent k-points are generated, and no charge density symmetrization is performed.\n\nHere is the python dictionary with the parameter value:\n\n```python\nparameter_value = {\"nosym\": \".TRUE.\"}\n```",
            "The parameter \"nsolv\" is related to the RISM (Reference Interaction Site Model) calculations in Quantum ESPRESSO. RISM is a method used to study solvation effects in molecular systems. However, in the provided project, there is no indication of solvation effects or RISM calculations. The project is a standard DFT calculation using Quantum ESPRESSO, with no mention of solvents or molecular species in the unit cell. Therefore, the parameter \"nsolv\" is not relevant to this project.\n\nHere is the Python dictionary as per the instructions:\n\n```python\nparameter_value = {\"nsolv\": None}\n```",
            "The parameter \"degauss\" is related to the gaussian spreading for Brillouin-zone integration in metals. However, in the provided project, the system is not metallic but semiconducting, as indicated by the presence of semiconductor systems in the conditions and the use of PAW pseudopotentials. Therefore, the parameter \"degauss\" is not relevant to this project.\n\nHere is the python dictionary as per the instructions:\n\n```python\nparameter_value = {'degauss': None}\n```",
            "Based on the provided project and conditions, the parameter \"celldm\" is relevant to the project. However, the project does not provide explicit values for \"celldm\" and instead uses the \"ibrav\" parameter with a value of 0, which indicates a user-defined crystal structure with lattice parameters specified in the \"CELL_PARAMETERS\" section.\n\nAccording to the Quantum ESPRESSO documentation, when \"ibrav\" is set to 0, only \"celldm(1)\" is used if present, and it represents the lattice parameter \"a\" in Bohr. However, since the project does not provide a value for \"celldm(1)\", we cannot determine its value.\n\nTherefore, the value for the \"celldm\" parameter in this context is not explicitly provided and cannot be determined from the given information.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"celldm\": None}\n```",
            "The parameter \"ion_positions\" is relevant to the project as it controls how atomic positions are determined. In this project, the atomic positions are provided in the \"ATOMIC_POSITIONS\" section of the input file, which means that the atomic positions are being read from the standard input.\n\nThe type of calculation in this project is not explicitly stated, but it can be inferred that it is a single-step calculation, such as 'scf', 'nscf', or 'bands', as there are no tags indicating a multistep calculation like 'relax' or 'md'.\n\nGiven the information provided, the appropriate value for the \"ion_positions\" parameter is \"from_input\". This means that the atomic positions should be read from the standard input, even if restarting.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"ion_positions\": \"from_input\"}\n```",
            "The parameter \"nr1s, nr2s, nr3s\" is relevant to the project as it is used to define the three-dimensional mesh for wavefunction FFT and for the smooth part of charge density in Quantum ESPRESSO calculations. This parameter is particularly important when using Ultrasoft pseudopotentials or PAW sets, as mentioned in the Possible_Usage_Conditions.\n\nIn the provided project, the pseudopotentials used are of the Ultrasoft type, as indicated by the file names ending with \"uspp.F.UPF\". Therefore, the parameter \"nr1s, nr2s, nr3s\" is relevant to this project.\n\nHowever, the project does not provide explicit values for \"nr1s, nr2s, nr3s\". In such cases, Quantum ESPRESSO uses default values which are calculated based on the cutoff energy for wavefunctions (ecutwfc) and the cutoff energy for charge density (ecutrho). The default values can be calculated as follows:\n\n- nr1s = ceil(ecutwfc / ecutrho * n1)\n- nr2s = ceil(ecutwfc / ecutrho * n2)\n- nr3s = ceil(ecutwfc / ecutrho * n3)\n\nwhere n1, n2, and n3 are the number of divisions along the three lattice vectors, and ceil() is the ceiling function.\n\nGiven that the project does not provide explicit values for \"nr1s, nr2s, nr3s\" and Quantum ESPRESSO uses default values, we cannot provide exact values for these parameters. However, we can confirm that these parameters are relevant to the project.\n\n```python\nparameter_value = {\n  \"nr1s, nr2s, nr3s\": \"Default values calculated based on ecutwfc and ecutrho\"\n}\n```",
            "Based on the provided project and the conditions, the parameter \"starting_ns_eigenvalue\" is relevant to the project. This parameter is used in the first iteration of DFT+U calculations to overwrite the m-th eigenvalue of the ns occupation matrix for the ispin component of atomic species ityp. However, the project does not explicitly mention the use of DFT+U Hubbard correction, which is one of the possible usage conditions for this parameter.\n\nNevertheless, the parameter can still be relevant if the user wants to suggest the desired orbital occupations in the first iteration. The default value of this parameter is \"-1.d0\", which means the parameter is not set. If the user wants to overwrite the eigenvalue of the ns occupation matrix, they can set it to a value other than \"-1.d0\".\n\nGiven the conditions and the project, the appropriate value for the parameter \"starting_ns_eigenvalue\" would be \"-1.d0\", as there is no explicit mention of DFT+U Hubbard correction in the project.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"starting_ns_eigenvalue\": \"-1.d0\"}\n```",
            "The parameter \"screening_parameter\" is relevant to the project if the project involves hybrid functional calculations. Hybrid functionals are a type of exchange-correlation functional that mix a portion of exact exchange with a portion of a traditional density functional. The screening_parameter is used to control the range of the exact exchange interaction in hybrid functionals like HSE (Heyd-Scuseria-Ernzerhof).\n\nHowever, based on the provided project and tags, there is no indication that hybrid functional calculations are being performed. The project uses the PBE (Perdew-Burke-Ernzerhof) functional, which is a type of generalized gradient approximation (GGA) functional, not a hybrid functional. Therefore, the \"screening_parameter\" is not relevant to this project.\n\nHere is the python dictionary as per the instructions:\n\n```python\nparameter_value = {\"screening_parameter\": None}\n```",
            "The parameter \"exx_fraction\" is relevant to the project as it is used in hybrid functional calculations, which are mentioned in the conditions. The project does not explicitly state the type of hybrid functional used, but it does mention \"PBE0\" in the conditions. Therefore, the appropriate value for the \"exx_fraction\" parameter would be 0.25, as per the given conditions.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"exx_fraction\": \"0.25\"}\n```\n\nThis value is based on the assumption that the project uses the PBE0 hybrid functional, as mentioned in the conditions. If the project uses a different hybrid functional, the value of \"exx_fraction\" may be different. However, without explicit information about the type of hybrid functional used in the project, it is reasonable to assume the use of PBE0 based on the provided conditions.",
            "Based on the provided project and conditions, the parameter \"twochem\" is not relevant to the project. The project is a total energy calculation for a periodic system using Quantum ESPRESSO, and there is no indication that a two chemical potential calculation for the simulation of photoexcited systems is required. Additionally, the parameter \"twochem\" is only relevant when the occupations are set to 'smearing', which is not the case in this project.\n\nTherefore, the appropriate value for the parameter \"twochem\" is None.\n\nHere is the python dictionary:\n```python\nparameter_value = {\"twochem\": None}\n```",
            "The parameter \"upscale\" is relevant to the project as it is used in structural optimization calculations, which are indicated by the calculation type being 'relax', 'md', 'vc-relax', or 'vc-md'. In this project, the calculation type is not explicitly stated, but the presence of the \"&IONS\" namelist suggests that the calculation involves ionic dynamics, which is consistent with the usage conditions for the \"upscale\" parameter.\n\nThe \"upscale\" parameter is used to set the maximum reduction factor for the convergence threshold (\"conv_thr\") during structural optimization. This parameter is important in controlling the convergence of the optimization process, as it determines how much the convergence threshold can be reduced at each step. A larger value for \"upscale\" allows for a larger reduction in the convergence threshold, which can lead to faster convergence but may also result in less accurate results.\n\nBased on the provided information, the appropriate value for the \"upscale\" parameter in this project is not explicitly stated. However, a common default value for this parameter is \"100.D0\", which is the value listed in the \"Default_Values\" section of the parameter description. Therefore, the appropriate value for the \"upscale\" parameter in this project is \"100.D0\".\n\nHere is the Python dictionary with the parameter name and value:\n\n```python\nparameter_value = {\"upscale\": \"100.D0\"}\n```",
            "Based on the provided project and the description of the \"uniqueb\" parameter, it is not relevant to the project. The \"uniqueb\" parameter is used for monoclinic lattices to specify the orientation of the twofold axis or mirror normal. However, the project does not involve a monoclinic lattice, as indicated by the \"ibrav\" parameter in the &SYSTEM namelist, which is set to 0. This corresponds to a cubic lattice, not a monoclinic lattice. Therefore, the \"uniqueb\" parameter is not applicable to this project.\n\nHere is the Python dictionary as requested:\n\n```python\nparameter_value = {\"uniqueb\": None}\n```",
            "The parameter \"nqx1, nqx2, nqx3\" is relevant to the project as it is used in hybrid functional calculations, which involve exact exchange calculations. The project uses the PBE0 hybrid functional, which is a type of hybrid functional that includes a portion of exact exchange.\n\nIn the context of Quantum ESPRESSO, the parameters \"nqx1, nqx2, nqx3\" define the size of the k-point mesh used for the sampling of the Fock operator in exact exchange calculations. This mesh can be smaller than the number of k-points used for the Brillouin zone sampling.\n\nHowever, the project does not explicitly specify the values for \"nqx1, nqx2, nqx3\". Therefore, according to the documentation, these parameters default to the size of the k-point mesh used. In this project, the k-point mesh is defined as 8x7x8.\n\nGiven this information, the appropriate value for \"nqx1, nqx2, nqx3\" would be the size of the k-point mesh used, which is 8x7x8.\n\nHere is the Python dictionary:\n\n```python\nparameter_value = {\"nqx1, nqx2, nqx3\": \"8x7x8\"}\n```",
            "The parameter \"conv_thr\" is relevant to the project as it is used in self-consistent calculations ('scf') for convergence threshold. The project provided is a Quantum ESPRESSO input file for a self-consistent calculation, as indicated by the absence of a specific calculation type in the &CONTROL namelist.\n\nThe \"conv_thr\" parameter sets the convergence threshold for self-consistency, estimated energy error < conv_thr. It is an extensive parameter, like the total energy. The default value for \"conv_thr\" is 1.D-6, which is a reasonable value for most calculations. However, the appropriate value for \"conv_thr\" may depend on the specific system and the desired accuracy of the calculation.\n\nIn this case, since the project does not provide any specific value for \"conv_thr\", we will use the default value of 1.D-6.\n\nHere is the python dictionary with the parameter value:\n\n```python\nparameter_value = {\"conv_thr\": \"1.D-6\"}\n```",
            "The parameter \"nosym_evc\" is relevant to the project as it determines whether symmetry is used in the calculation or not. In this case, the project does not explicitly specify the use of symmetry, and the k-points are generated automatically using the \"K_POINTS automatic\" tag. However, the project does not specify the use of a Monkhorst-Pack grid or custom k-points, which are the conditions for using the \"nosym_evc\" parameter.\n\nBased on the provided information, it is not clear whether the \"nosym_evc\" parameter should be set to True or False. However, since the project does not explicitly specify the use of symmetry or a Monkhorst-Pack grid, it is reasonable to assume that the default value of False should be used.\n\nTherefore, the appropriate value for the \"nosym_evc\" parameter is False.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"nosym_evc\": \"False\"}\n```",
            "The parameter \"smearing\" is relevant to the project as it controls the type of smearing method to be used in the Quantum ESPRESSO calculation. Smearing is a technique used to improve the convergence of the self-consistent field (SCF) calculation by smoothing out the discontinuity in the occupation numbers at the Fermi level. This is particularly important for metallic systems, but it can also be used for semiconductor systems and systems with partial occupations.\n\nIn the provided project, the system is a semiconductor system as indicated by the presence of both Re and S atoms, which are typically used in semiconductor materials. Therefore, the use of a smearing method is appropriate.\n\nThe possible values for the smearing parameter are \"gaussian\", \"methfessel-paxton\", \"marzari-vanderbilt\", and \"fermi-dirac\". Each of these methods has its own advantages and disadvantages, and the choice of method can affect the accuracy and convergence of the calculation.\n\nGiven the information provided, it is not possible to determine the most appropriate value for the smearing parameter. However, a common choice for semiconductor systems is the \"methfessel-paxton\" method, which is a first-order spreading method that can provide good convergence and accuracy.\n\nTherefore, the appropriate value for the smearing parameter is \"methfessel-paxton\".\n\n```python\nparameter_value = {\"smearing\": \"methfessel-paxton\"}\n```",
            "The parameter \"ion_dynamics\" is relevant to the project as it specifies the type of ionic dynamics used in the calculation. The project is a Quantum ESPRESSO input file for a system with 12 atoms, using a plane-wave basis set with a cutoff energy of 35 Ry for the wavefunctions and 280 Ry for the charge density. The system is defined with a custom crystal structure (ibrav = 0), and a 4x4x4 k-point mesh is used for Brillouin zone sampling.\n\nThe parameter \"ion_dynamics\" is relevant to the project because the calculation type is not specified in the provided project. However, based on the provided conditions, the calculation type could be either 'relax' or 'vc-relax'. In both cases, the appropriate value for the parameter \"ion_dynamics\" is \"bfgs\", which uses the BFGS quasi-newton algorithm based on trust radius procedure.\n\nTherefore, the appropriate value for the parameter \"ion_dynamics\" is \"bfgs\".\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"ion_dynamics\": \"bfgs\"}\n```",
            "The parameter \"bfgs_ndim\" is relevant to the project as it is used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. This parameter is used when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' and the ion_dynamics is set to 'bfgs'.\n\nIn the provided project, the calculation type is not explicitly mentioned, but the presence of the \"ATOMIC_POSITIONS\" tag suggests that the calculation involves ionic relaxation or molecular dynamics, which would require a multistep calculation type such as 'relax' or 'md'. However, without explicit information about the calculation type and ion_dynamics, we cannot definitively say that the \"bfgs_ndim\" parameter is relevant.\n\nAssuming that the calculation type is 'relax' or 'md' and the ion_dynamics is 'bfgs', the appropriate value for the \"bfgs_ndim\" parameter would be 1, which corresponds to the standard quasi-Newton BFGS method.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"bfgs_ndim\": \"1\"}\n```\n\nHowever, if the calculation type is not 'relax', 'md', 'vc-relax', or 'vc-md' or the ion_dynamics is not 'bfgs', then the \"bfgs_ndim\" parameter is not relevant to the project and the value should be set to None.\n\n```python\nparameter_value = {\"bfgs_ndim\": None}\n```",
            "The parameter \"ion_temperature\" is relevant to the project when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'. However, in the provided project, the calculation type is not explicitly mentioned. Since the project does not contain any information about the type of calculation, we cannot determine if the parameter is relevant or not.\n\nAssuming that the calculation type is relevant to the parameter, we can check the possible values for the parameter. The possible values are 'rescaling', 'rescale-v', 'rescale-T', 'reduce-T', 'berendsen', 'andersen', 'svr', 'initial', and 'not_controlled'.\n\nSince the project does not provide any information about the ionic temperature control method, we cannot select an appropriate value for the parameter. Therefore, the value for the parameter \"ion_temperature\" should be set to None.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"ion_temperature\": None}\n```",
            "The parameter \"assume_isolated\" is used to perform calculations assuming the system to be isolated, such as a molecule or a cluster in a 3D supercell. In the provided project, the system is a periodic system with a 12-atom unit cell, as indicated by the \"ibrav = 0\" tag and the \"ATOMIC_POSITIONS\" section. Therefore, the \"assume_isolated\" parameter is not relevant to this project.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"assume_isolated\": None}\n```\n\nThe \"assume_isolated\" parameter is typically used for isolated (non-periodic) systems, charged slabs, vacuum boundaries, electrode boundaries, or optional electric field conditions. However, none of these conditions are present in the provided project. Therefore, the \"assume_isolated\" parameter is not relevant and should be set to None.",
            "Based on the provided project and conditions, the parameter \"lfcp\" is not relevant to the project. The project is a total energy calculation using Quantum ESPRESSO with a specified crystal structure, atomic species, atomic positions, k-points, and cell parameters. The \"lfcp\" parameter is used for constant bias potential calculations with the ESM method, which is not mentioned in the project or conditions. Therefore, the value for the \"lfcp\" parameter is not applicable to this project.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"lfcp\": None}\n```",
            "The parameter \"fire_nmin\" is relevant to the project when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' and the ion_dynamics is set to 'fire'. However, in the provided project, the calculation type is not explicitly mentioned, and the ion_dynamics is not set to 'fire'. Therefore, the parameter \"fire_nmin\" is not directly relevant to the project.\n\nHowever, if we were to assume that the calculation type is 'relax' or 'md' and the ion_dynamics is set to 'fire', then the parameter \"fire_nmin\" would be relevant. The \"fire_nmin\" parameter is used in the FIRE (Fast Inertial Relaxation Engine) algorithm, which is a damped dynamics method used for structure relaxation and molecular dynamics simulations. It determines the minimum number of steps with P > 0 before increasing the time step 'dt'.\n\nGiven the information provided and the rules, the parameter \"fire_nmin\" is not directly relevant to the project. Therefore, the value for the parameter should be set to None.\n\n```python\nparameter_value = {\"fire_nmin\": None}\n```",
            "The parameter \"calculation\" is relevant to the project as it determines the type of calculation to be performed in Quantum ESPRESSO. In this case, the project involves a standard calculation to find the total energy of the system, which is typically done using the 'scf' (self-consistent field) calculation.\n\nThe 'scf' calculation is a single-step calculation that finds the electronic ground state of the system by iteratively solving the Kohn-Sham equations until the electron density and the total energy converge to a self-consistent solution. This is the most common type of calculation in Quantum ESPRESSO and is used to calculate the total energy, electron density, and other ground state properties of the system.\n\nTherefore, the appropriate value for the parameter \"calculation\" in this project is 'scf'.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"calculation\": \"scf\"}\n```",
            "The parameter \"ntyp\" is relevant to the project as it represents the number of types of atoms in the unit cell. In this case, we have two types of atoms in the unit cell: Re and S. Therefore, the appropriate value for the parameter \"ntyp\" is 2.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"ntyp\": \"2\"}\n```\n\nThis parameter is important for Quantum ESPRESSO calculations as it is used to specify the number of different types of atoms in the unit cell. This information is used in the calculation of the electronic structure and properties of the system. The value of this parameter is determined by the number of different types of atoms present in the system, as specified in the ATOMIC_SPECIES section of the input file.\n\nIn this case, we have 12 atoms in total, but only two different types of atoms: Re and S. Therefore, the value of \"ntyp\" is 2. This is consistent with the Quantum ESPRESSO documentation and recent research in the field of quantum chemistry calculations using this software.",
            "The parameter \"fcp_mu\" is related to the Fictitious Charge Particle (FCP) method, which is used to facilitate simulations under constant chemical potential conditions. However, the provided project does not mention the use of the FCP method, and there is no indication that the calculation is being performed under constant chemical potential conditions. Additionally, the project does not include the \"lfcp\" parameter, which must be set to \".TRUE.\" for the \"fcp_mu\" parameter to be relevant. Therefore, the \"fcp_mu\" parameter is not relevant to the provided project.\n\n```python\nparameter_value = {\"fcp_mu\": None}\n```",
            "The parameter \"degauss_cond\" is relevant to the project if the calculation involves a two-chemical potential method, which is not explicitly mentioned in the provided project or tags. However, since the project does not specify a two-chemical potential calculation, the parameter \"degauss_cond\" is not directly relevant to this project.\n\nTherefore, the value for the parameter \"degauss_cond\" should be set to None.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"degauss_cond\": None}\n```",
            "The parameter \"remove_rigid_rot\" is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'. This keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. It removes the spurious interaction with the periodic images by setting the total torque of the internal forces to zero. This allows for the use of smaller supercells.\n\nIn the provided project, the calculation type is not explicitly mentioned. However, the project does not seem to be an isolated system since it uses periodic boundary conditions as indicated by the 'ibrav = 0' tag. Therefore, the \"remove_rigid_rot\" parameter is not relevant to this project.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"remove_rigid_rot\": None}\n```",
            "The parameter \"delta_t\" is relevant for molecular dynamics simulations and relaxation calculations in Quantum ESPRESSO. It controls the temperature modification in these simulations, depending on the ion_temperature setting. However, in the provided project, there is no indication of a molecular dynamics simulation or relaxation calculation. The project is set up for a total energy calculation, as indicated by the absence of a calculation tag and the presence of a k-point grid for Brillouin zone sampling. Therefore, the parameter \"delta_t\" is not relevant to this project.\n\n```python\nparameter_value = {\"delta_t\": None}\n```",
            "The parameter \"nelec_cond\" is relevant to the project if the calculation involves a two-chemical potential calculation, which is not explicitly mentioned in the provided project or tags. However, based on the given information, it is not possible to determine if this is the case.\n\nThe parameter \"nelec_cond\" is used to specify the number of electrons placed in the conduction manifold in a two-chemical potential calculation. This type of calculation is used when the system has a band gap and the Fermi level is not well defined. In this case, the system is treated as a grand canonical ensemble, and the chemical potential is allowed to vary.\n\nIn the provided project, there is no indication that a two-chemical potential calculation is being performed. The calculation type is not specified, but it appears to be a total energy calculation based on the tags. The system is defined as a periodic system with a fixed cell, and the calculation is using a PAW pseudopotential. There is no mention of a band gap or a Fermi level, and the occupations are set to 'from_input', which suggests that the occupations are fixed.\n\nTherefore, based on the provided information, it is not possible to determine the appropriate value for the parameter \"nelec_cond\". It is likely that this parameter is not relevant to the project.\n\n```python\nparameter_value = {\"nelec_cond\": None}\n```",
            "The parameter \"tefield\" in Quantum ESPRESSO is used to add a saw-like potential simulating an electric field to the bare ionic potential. This parameter is relevant for ground state calculations and relaxation calculations, as indicated by the possible usage conditions.\n\nIn the provided project, there is no mention of an electric field or any need to simulate one. The project is focused on a total energy calculation for a system with 12 atoms, using a 4x4x4 k-mesh for the BZ sampling and automatic k-points. The system is defined with a periodic boundary condition and uses PAW pseudopotentials. There is no indication that a saw-like potential simulating an electric field is needed for this calculation.\n\nTherefore, the parameter \"tefield\" is not relevant to this project.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"tefield\": None}\n```"
        ],
        "evaluated_parameters_graph": {
            "directed": true,
            "multigraph": false,
            "graph": {},
            "nodes": [
                {
                    "Parameter_Name": "calculation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "scf"
                    },
                    "Description": "calculation\nA string describing the task to be performed",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'",
                        "calculation = 'bands'",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Fixed cell calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "scf": "standard calculation",
                        "nscf": null,
                        "bands": null,
                        "relax": "only the atomic positions are allowed to vary",
                        "md": "ab-initio molecular dynamics (MD) simulations",
                        "vc-relax": "allows to vary both the atomic positions and lattice constants",
                        "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "calculation"
                },
                {
                    "Parameter_Name": "ntyp",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ntyp\nnumber of types of atoms in the unit cell",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ntyp"
                },
                {
                    "Parameter_Name": "nr1s, nr2s, nr3s",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )",
                    "Possible_Usage_Conditions": [
                        "Smooth FFT grid",
                        "Ultrasoft pseudopotentials",
                        "PAW sets"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "all three dimensions should be set, to use this parameter",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nr1s, nr2s, nr3s"
                },
                {
                    "Parameter_Name": "nosym",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "nosym\nControls whether symmetry is used in calculations",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Low-symmetry large cells",
                        "Isolated (non-periodic) systems",
                        "custom k-points",
                        "nosym k-points",
                        "full BZ coverage"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "When .TRUE., symmetry is not used affecting k-points handling and charge density calculations",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "Disables symmetry usage, k-points list used as is, no symmetry-inequivalent k-points generation, no charge density symmetrization"
                    },
                    "Final_comments": "Do not use this option unless you know exactly what you want and what you get",
                    "Namelist": "&SYSTEM",
                    "id": "nosym"
                },
                {
                    "Parameter_Name": "nosym_evc",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                    "Possible_Usage_Conditions": [
                        "Monkhorst-Pack grid",
                        "custom k-points",
                        "full BZ coverage"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                    },
                    "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                    "Namelist": "&SYSTEM",
                    "id": "nosym_evc"
                },
                {
                    "Parameter_Name": "occupations",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "occupations\nControls how electronic occupations are determined",
                    "Possible_Usage_Conditions": [
                        "DOS calculations",
                        "stress calculations",
                        "Relaxation calculations",
                        "Dynamics calculations",
                        "Metallic systems",
                        "Insulating systems",
                        "Uniform k-point grid",
                        "Single k-point",
                        "occupations = 'smearing'",
                        "Tetrahedron method (Bloechl's version)",
                        "Linear tetrahedron method",
                        "Optimized tetrahedron method",
                        "Fixed occupations",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": null,
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "smearing": "for metals, requires parameters smearing and degauss",
                        "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                        "tetrahedra_lin": "original linear tetrahedron method, reference only",
                        "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                        "fixed": "for insulators with a gap",
                        "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "occupations"
                },
                {
                    "Parameter_Name": "smearing",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "gaussian"
                    },
                    "Description": "smearing\nControls the type of smearing method to be used",
                    "Possible_Usage_Conditions": [
                        "Metallic systems",
                        "Semiconductor systems",
                        "partial occupations",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "gaussian/gauss": "ordinary Gaussian spreading",
                        "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                        "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                        "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "smearing"
                },
                {
                    "Parameter_Name": "exx_fraction",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null,
                        "PBE0": 0.25,
                        "B3LYP": 0.2
                    },
                    "Description": "exx_fraction\nFraction of EXX for hybrid functional calculations",
                    "Possible_Usage_Conditions": [
                        "Hybrid functional calculations",
                        "input_dft='PBE0', 'B3LYP'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used in hybrid functional calculations",
                    "Parameter_Value_Conditions": {
                        "0.25": "When input_dft = 'PBE0'",
                        "0.20": "When input_dft = 'B3LYP'"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "exx_fraction"
                },
                {
                    "Parameter_Name": "nqx1, nqx2, nqx3",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": "the size of the k-point mesh used"
                    },
                    "Description": "nqx1, nqx2, nqx3\nThree-dimensional mesh for q (k1-k2) sampling of the Fock operator (EXX). Can be smaller than the number of k-points.",
                    "Possible_Usage_Conditions": [
                        "Exact exchange calculations",
                        "Hybrid functionals with exact exchange",
                        "custom k-points"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": "Currently this defaults to the size of the k-point mesh used.",
                    "Namelist": "&SYSTEM",
                    "id": "nqx1, nqx2, nqx3"
                },
                {
                    "Parameter_Name": "starting_ns_eigenvalue",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "-1.d0"
                    },
                    "Description": "starting_ns_eigenvalue(m,ispin,ityp)\nIn the first iteration of an DFT+U run it overwrites the m-th eigenvalue of the ns occupation matrix for the ispin component of atomic species ityp.",
                    "Possible_Usage_Conditions": [
                        "DFT+U Hubbard correction",
                        "Collinear magnetic calculations (LSDA)",
                        "Non-collinear magnetic calculations",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used in first iteration of DFT+U calculations. For noncollinear case, ispin index runs up to npol=2. The value lmax is given by the maximum angular momentum number to which the Hubbard U is applied.",
                    "Parameter_Value_Conditions": {
                        "-1.d0": "parameter not set",
                        "other values": "overwrites eigenvalue of ns occupation matrix"
                    },
                    "Final_comments": "Leave unchanged eigenvalues that are not set. This is useful to suggest the desired orbital occupations when the default choice takes another path.",
                    "Namelist": "&SYSTEM",
                    "id": "starting_ns_eigenvalue"
                },
                {
                    "Parameter_Name": "conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-6"
                    },
                    "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "conv_thr"
                },
                {
                    "Parameter_Name": "ion_positions",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "default"
                    },
                    "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "",
                    "Parameter_Value_Conditions": {
                        "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                        "from_input": "read atomic positions from standard input, even if restarting"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_positions"
                },
                {
                    "Parameter_Name": "ion_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "calculation=relax": "bfgs",
                        "calculation=md": "verlet",
                        "calculation=vc-relax": "bfgs",
                        "calculation=vc-md": "beeman"
                    },
                    "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                        "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                        "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                        "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                        "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                        "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                        "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_dynamics"
                },
                {
                    "Parameter_Name": "upscale",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "upscale"
                },
                {
                    "Parameter_Name": "bfgs_ndim",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "1": "standard quasi-Newton BFGS method is used"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "bfgs_ndim"
                },
                {
                    "Parameter_Name": "nr1, nr2, nr3",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "nr1, nr2, nr3\nThree-dimensional FFT mesh (hard grid) for charge density (and scf potential)",
                    "Possible_Usage_Conditions": [
                        "charge density calculations",
                        "Hard FFT grid"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "If not specified the grid is calculated based on the cutoff for charge density (see also ecutrho)",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": "all three dimensions should be set, to use this parameter",
                    "Namelist": "&SYSTEM",
                    "id": "nr1, nr2, nr3"
                },
                {
                    "Parameter_Name": "ecutrho",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "4 * ecutwfc"
                    },
                    "Description": "ecutrho\nKinetic energy cutoff (Ry) for charge density and potential",
                    "Possible_Usage_Conditions": [
                        "Gradient-corrected functionals"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Value requirements vary based on the type of pseudopotential and functional being used",
                    "Parameter_Value_Conditions": {
                        "default": "norm-conserving pseudopotential",
                        "8-12 * ecutwfc": "ultrasoft PP",
                        "4 * ecutwfc": "PAW datasets (requires testing)",
                        "higher than default": "gradient-corrected functional, cells with vacuum, or pseudopotential without non-linear core correction"
                    },
                    "Final_comments": "For norm-conserving pseudopotential, small reductions from default are possible but introduce noise in forces and stress. For PAW datasets, testing is mandatory due to augmentation charge shape dependency.",
                    "Namelist": "&SYSTEM",
                    "id": "ecutrho"
                },
                {
                    "Parameter_Name": "ecutwfc",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ecutwfc\nkinetic energy cutoff (Ry) for wavefunctions",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ecutwfc"
                },
                {
                    "Parameter_Name": "noinv",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "noinv\nif (.TRUE.) disable the usage of k => -k symmetry (time reversal) in k-point generation",
                    "Possible_Usage_Conditions": [
                        "Non-collinear magnetic calculations",
                        "custom k-points"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "noinv"
                },
                {
                    "Card_Name": "K_POINTS",
                    "Namelist": "Card: K_POINTS",
                    "Required/Optional": null,
                    "Card_Options": [
                        "tpiba",
                        "tpiba_b",
                        "tpiba_c",
                        "crystal",
                        "crystal_b",
                        "crystal_c",
                        "gamma",
                        "automatic"
                    ],
                    "Default_Option": "tpiba",
                    "Description": null,
                    "Card_Use_Conditions": null,
                    "Card_Option_Given_Conditions": {
                        "gamma": "wavefunctions can be chosen as real, and specialized subroutines optimized for calculations at the gamma point are used",
                        "automatic": "generates uniform grid of k-points with specified grid and offset parameters"
                    },
                    "Syntax_Given_Option": {
                        "tpiba": "K_POINTS tpiba\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal": "K_POINTS crystal\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_b": "K_POINTS tpiba_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_b": "K_POINTS crystal_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_c": "K_POINTS tpiba_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_c": "K_POINTS crystal_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "automatic": "K_POINTS automatic\nnk1 nk2 nk3 sk1 sk2 sk3",
                        "gamma": "K_POINTS gamma"
                    },
                    "Item_Description": {
                        "nks": "Number of supplied special k-points",
                        "xk_x, xk_y, xk_z": "Special k-points in the irreducible Brillouin Zone (IBZ) of the lattice (with all symmetries)",
                        "wk": "weights",
                        "nk1, nk2, nk3": "These parameters specify the k-point grid (nk1 x nk2 x nk3) as in Monkhorst-Pack grids",
                        "sk1, sk2, sk3": "The grid offsets"
                    },
                    "Item_Conditions": {
                        "sk1, sk2, sk3": "must be 0 (no offset) or 1 (grid displaced by half a grid step in the corresponding direction)",
                        "nks": "must be 3 for tpiba_c and crystal_c options"
                    },
                    "General_Syntax": null,
                    "Final_comments": "Only grids having the full symmetry of the crystal work with tetrahedra. Some grids with offset may not work.",
                    "Possible_Usage_Conditions": [],
                    "id": "K_POINTS"
                },
                {
                    "Card_Name": "OCCUPATIONS",
                    "Namelist": "Card: OCCUPATIONS",
                    "Required/Optional": "optional",
                    "Card_Options": null,
                    "Default_Option": null,
                    "Description": null,
                    "Card_Use_Conditions": {
                        "occupations": "from_input"
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": null,
                    "Item_Description": {
                        "f_inp1": "Occupations of individual states (MAX 10 PER ROW). For spin-polarized calculations, these are majority spin states.",
                        "f_inp2": "Occupations of minority spin states (MAX 10 PER ROW)"
                    },
                    "Item_Conditions": {
                        "f_inp2": "To be specified only for spin-polarized calculations"
                    },
                    "General_Syntax": "OCCUPATIONS\nf_inp1(1) f_inp1(2) . . . f_inp1(nbnd)\n[ f_inp2(1) f_inp2(2) . . . f_inp2(nbnd) ]",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "occupations = 'from_input'"
                    ],
                    "id": "OCCUPATIONS"
                },
                {
                    "Parameter_Name": "nbnd",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "insulator": "number of valence bands (number_of_electrons/2)",
                        "metal": "(number of valence bands)*1.2"
                    },
                    "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                    "Possible_Usage_Conditions": [
                        "Insulating systems",
                        "Metallic systems",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nbnd"
                },
                {
                    "Parameter_Name": "tot_charge",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": 0.0
                    },
                    "Description": "tot_charge\nTotal charge of the system. Useful for simulations with charged cells.",
                    "Possible_Usage_Conditions": [
                        "charged cells"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when simulating systems with non-neutral charge states. In periodic calculations, a compensating jellium background is inserted for non-neutral cells.",
                    "Parameter_Value_Conditions": {
                        "0": "neutral cell",
                        "+1": "one electron missing from the system",
                        "-1": "one additional electron"
                    },
                    "Final_comments": "In a periodic calculation a compensating jellium background is inserted to remove divergences if the cell is not neutral.",
                    "Namelist": "&SYSTEM",
                    "id": "tot_charge"
                },
                {
                    "Parameter_Name": "degauss",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.D0"
                    },
                    "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'bands'",
                        "Metallic systems",
                        "partial occupations",
                        "occupations = 'smearing'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "degauss"
                },
                {
                    "Parameter_Name": "nspin",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nspin\nControls spin polarization type in calculations",
                    "Possible_Usage_Conditions": [
                        "nspin = 1",
                        "nspin = 2",
                        "Collinear magnetic calculations (LSDA)",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "1": "non-polarized calculation",
                        "2": "spin-polarized calculation, LSDA (magnetization along z axis)",
                        "4": "spin-polarized calculation, noncollinear (magnetization in generic direction)"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nspin"
                },
                {
                    "Parameter_Name": "constrained_magnetization",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "constrained_magnetization\nUsed to perform constrained calculations in magnetic systems.",
                    "Possible_Usage_Conditions": [
                        "Magnetic systems",
                        "Non-collinear magnetic calculations",
                        "Collinear magnetic calculations (LSDA)"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "no constraint",
                        "total": "total magnetization is constrained by adding a penalty term to total energy, noncolinear case only",
                        "atomic": "atomic magnetization are constrained to defined starting magnetization",
                        "total direction": "angle theta of total magnetization with z axis is constrained",
                        "atomic direction": "only cosine of angle1 of atomic magnetic moment is constrained"
                    },
                    "Final_comments": "Note: symmetrization may prevent to reach the desired orientation of the magnetization. Try not to start with very highly symmetric configurations or use the nosym flag (only as a last remedy)",
                    "Namelist": "&SYSTEM",
                    "id": "constrained_magnetization"
                },
                {
                    "Parameter_Name": "input_dft",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "read from pseudopotential files"
                    },
                    "Description": "input_dft\nExchange-correlation functional: eg 'PBE', 'BLYP' etc\nOverrides the value read from pseudopotential files.",
                    "Possible_Usage_Conditions": [
                        "Exchange-correlation functional"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Use with care and if you know what you are doing!",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "input_dft"
                },
                {
                    "Card_Name": "HUBBARD",
                    "Namelist": "Card: HUBBARD",
                    "Required/Optional": null,
                    "Card_Options": [
                        "atomic",
                        "ortho-atomic",
                        "norm-atomic",
                        "wf",
                        "pseudo"
                    ],
                    "Default_Option": null,
                    "Description": "The HUBBARD card is used to define the parameters for 'DFT+U', 'DFT+U+J', and 'DFT+U+V' calculations. These approaches are used to correct the electronic structure in systems where strongly correlated electrons are present, typically in transition metals and rare-earth elements.",
                    "Card_Use_Conditions": {
                        "DFT+U": "When using standard DFT+U calculation",
                        "DFT+U+J": "When using DFT+U+J calculation",
                        "DFT+U+V": "When using DFT+U+V calculation"
                    },
                    "Card_Option_Given_Conditions": {
                        "atomic": "Uses atomic orbitals (from pseudopotential). With Forces and stress.",
                        "ortho-atomic": "Uses Lowdin orthogonalized atomic orbitals (recommended to avoid double counting Hubbard corrections). With Forces and stress.",
                        "norm-atomic": "Uses normalized atomic orbitals (without orthogonalization). Without Forces and stress.",
                        "wf": "Uses Wannier functions to build Hubbard projectors (not maximally localized). Without Forces and stress.",
                        "pseudo": "Uses pseudopotential projectors (requires all-electron atomic orbitals). With Forces and stress."
                    },
                    "Syntax_Given_Option": {
                        "DFT+U": "HUBBARD atomic | ortho-atomic | norm-atomic | wf | pseudo\nU  label(1)-manifold(1)  u_val(1)\n[ J0  label(1)-manifold(1)  j0_val(1) ]\nU  label(n)-manifold(n)  u_val(n)\n[ J0  label(n)-manifold(n)  j0_val(n) ]",
                        "DFT+U+J": "HUBBARD atomic | ortho-atomic | norm-atomic | wf | pseudo\nparamType(1)  label(1)-manifold(1)  paramValue(1)\nparamType(n)  label(n)-manifold(n)  paramValue(n)",
                        "DFT+U+V": "HUBBARD atomic | ortho-atomic | norm-atomic | wf | pseudo\nU  label(I)-manifold(I)  u_val(I)\n[ J0  label(I)-manifold(I)  j0_val(I) ]\nV  label(I)-manifold(I)  label(J)-manifold(J)  I  J  v_val(I,J)\nU  label(N)-manifold(N)  u_val(N)\n[ J0  label(N)-manifold(N)  j0_val(N) ]\nV  label(N)-manifold(N)  label(M)-manifold(M)  N  M  v_val(N,M)"
                    },
                    "Item_Description": {
                        "U": "Specifies the U parameter",
                        "label": "Atom label (as defined in ATOMIC_SPECIES)",
                        "manifold": "Specifies the atomic manifold (e.g., 3d, 2p)",
                        "u_val": "Value of the U parameter (in eV)",
                        "J0": "Specifies the J0 parameter",
                        "j0_val": "Value of the J0 parameter (in eV)",
                        "paramType": "Type of Hubbard parameter (U, J, B, E2, E3)",
                        "paramValue": "Value of the parameter (in eV)",
                        "V": "Specifies the V parameter (interaction between two atoms)",
                        "v_val": "Value of the V parameter (in eV)"
                    },
                    "Item_Conditions": {
                        "J0": "Optional parameter",
                        "j0_val": "Required when J0 is specified"
                    },
                    "General_Syntax": "HUBBARD atomic | ortho-atomic | norm-atomic | wf | pseudo",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "DFT+U Hubbard correction",
                        "DFT+U+J Hubbard correction",
                        "DFT+U+V Hubbard correction"
                    ],
                    "id": "HUBBARD"
                },
                {
                    "Parameter_Name": "diago_thr_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null,
                        "scf_atomic_orbitals": "1.D-2",
                        "scf_charge_density": "1.D-5",
                        "non_scf": "(conv_thr/N elec)/10"
                    },
                    "Description": "diago_thr_init\nConvergence threshold (ethr) for iterative diagonalization (the check is on eigenvalue convergence)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "During self consistency (scf) the threshold is automatically reduced (but never below 1.D-13) when approaching convergence",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "diago_thr_init"
                },
                {
                    "Card_Name": "CONSTRAINTS",
                    "Namelist": "Card: CONSTRAINTS",
                    "Required/Optional": "optional",
                    "Card_Options": [
                        "type_coord",
                        "atom_coord",
                        "distance",
                        "planar_angle",
                        "torsional_angle",
                        "bennett_proj",
                        "potential_wall"
                    ],
                    "Default_Option": null,
                    "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                    "Card_Use_Conditions": {
                        "calculation": [
                            "calculation = 'relax'",
                            "calculation = 'md'"
                        ],
                        "ion_dynamics": [
                            "damp",
                            "verlet"
                        ],
                        "not_compatible": [
                            "calculation = 'vc-relax'",
                            "calculation = 'vc-md'"
                        ]
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": {
                        "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                        "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                        "distance": "constr_type distance constr(1) constr(2) constr_target",
                        "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                        "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                        "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                        "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                    },
                    "Item_Description": {
                        "nconstr": "The total number of constraints to be applied",
                        "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                        "constr_type": "Type of constraint"
                    },
                    "Item_Conditions": null,
                    "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "ion_dynamics = 'verlet'",
                        "ion_dynamics = 'damp'"
                    ],
                    "id": "CONSTRAINTS"
                },
                {
                    "Parameter_Name": "cell_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null,
                        "vc-relax": "bfgs"
                    },
                    "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                    "Parameter_Value_Conditions": {
                        "none": "no dynamics (both vc-relax and vc-md)",
                        "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                        "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                        "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                        "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                        "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CELL",
                    "id": "cell_dynamics"
                }
            ],
            "edges": [
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "nr1, nr2, nr3"
                },
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "ecutrho"
                },
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "ecutwfc"
                },
                {
                    "condition": "Time reversal symmetry assumes",
                    "source_node": "nosym",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nosym",
                    "source": "nosym",
                    "target": "noinv"
                },
                {
                    "condition": "when noinv=.true., time revers",
                    "source_node": "nosym_evc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nosym_evc",
                    "source": "nosym_evc",
                    "target": "noinv"
                },
                {
                    "condition": "requires smearing and degauss ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "smearing"
                },
                {
                    "condition": "tetrahedra method requires uni",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "K_POINTS"
                },
                {
                    "condition": "from_input option requires occ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "OCCUPATIONS"
                },
                {
                    "condition": "from_input option requires nbn",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "nbnd"
                },
                {
                    "condition": "from_input occupations should ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "tot_charge"
                },
                {
                    "condition": "gaussian smearing for metals o",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "occupations"
                },
                {
                    "condition": "used in Gaussian smearing",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "degauss"
                },
                {
                    "condition": "for spin-polarized calculation",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "nspin"
                },
                {
                    "condition": "for magnetic calculations",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "constrained_magnetization"
                },
                {
                    "condition": "Determines default value based",
                    "source_node": "exx_fraction",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "exx_fraction",
                    "source": "exx_fraction",
                    "target": "input_dft"
                },
                {
                    "condition": "defaults to its size",
                    "source_node": "nqx1, nqx2, nqx3",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nqx1, nqx2, nqx3",
                    "source": "nqx1, nqx2, nqx3",
                    "target": "K_POINTS"
                },
                {
                    "condition": "related to maximum angular mom",
                    "source_node": "starting_ns_eigenvalue",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "starting_ns_eigenvalue",
                    "source": "starting_ns_eigenvalue",
                    "target": "HUBBARD"
                },
                {
                    "condition": "In nscf calculations, conv_thr",
                    "source_node": "conv_thr",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "conv_thr",
                    "source": "conv_thr",
                    "target": "diago_thr_init"
                },
                {
                    "condition": "can be used with 'damp' and 'f",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "CONSTRAINTS"
                },
                {
                    "condition": "for vc-relax with 'bfgs', requ",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "cell_dynamics"
                },
                {
                    "condition": "'conv_thr' is automatically re",
                    "source_node": "upscale",
                    "source_type": "&IONS",
                    "relationship_defined_by": "upscale",
                    "source": "upscale",
                    "target": "conv_thr"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "ion_dynamics"
                }
            ]
        },
        "trimmed_documentation": [
            {
                "Parameter_Name": "calculation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "scf"
                },
                "Description": "calculation\nA string describing the task to be performed",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'",
                    "calculation = 'bands'",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Fixed cell calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "scf": "standard calculation",
                    "nscf": null,
                    "bands": null,
                    "relax": "only the atomic positions are allowed to vary",
                    "md": "ab-initio molecular dynamics (MD) simulations",
                    "vc-relax": "allows to vary both the atomic positions and lattice constants",
                    "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tefield",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.",
                "Possible_Usage_Conditions": [
                    "Ground state calculations",
                    "Relaxation calculations",
                    "tefield = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "True": "A saw-like potential simulating an electric field is added to the bare ionic potential"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "edir": "Used to define form and size of added potential",
                    "eamp": "Used to define form and size of added potential",
                    "emaxpos": "Used to define form and size of added potential",
                    "eopreg": "Used to define form and size of added potential"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "twochem",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when performing two chemical potential calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "must be set to smearing",
                    "nelec_cond": "related parameter",
                    "nbnd_cond": "related parameter",
                    "degauss_cond": "related parameter"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "lfcp",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "ESM calculations",
                    "Constant bias potential calculations",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "'calculation' must be 'relax' or 'md'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "&FCP": "must be set when lfcp is .TRUE.",
                    "assume_isolated": "must be 'esm'",
                    "esm_bc": "must be 'bc2' or 'bc3', or 'bc1' with trism=.TRUE.",
                    "ignore_wolfe": "is always .TRUE., for BFGS"
                },
                "Final_comments": "The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.",
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "celldm",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.",
                "Possible_Usage_Conditions": [
                    "ibrav-defined crystal structure"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified",
                "Parameter_Value_Conditions": {
                    "celldm(1)": "is the lattice parameter \"a\" (in BOHR)",
                    "celldm(1) when ibrav=0": "only celldm(1) is used if present"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ibrav": "depends on ibrav value",
                    "CELL_PARAMETERS": "cell vectors are read from card CELL_PARAMETERS when ibrav=0",
                    "A, B, C, cosAB, cosAC, cosBC": "mutually exclusive with celldm"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "ntyp",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "ntyp\nnumber of types of atoms in the unit cell",
                "Possible_Usage_Conditions": [],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nr1s, nr2s, nr3s",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )",
                "Possible_Usage_Conditions": [
                    "Smooth FFT grid",
                    "Ultrasoft pseudopotentials",
                    "PAW sets"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "all three dimensions should be set, to use this parameter",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "nr1, nr2, nr3": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutrho": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutwfc": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym\nControls whether symmetry is used in calculations",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Low-symmetry large cells",
                    "Isolated (non-periodic) systems",
                    "custom k-points",
                    "nosym k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "When .TRUE., symmetry is not used affecting k-points handling and charge density calculations",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "Disables symmetry usage, k-points list used as is, no symmetry-inequivalent k-points generation, no charge density symmetrization"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "Time reversal symmetry assumes k and -k equivalence unless noinv=.true."
                },
                "Final_comments": "Do not use this option unless you know exactly what you want and what you get",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym_evc",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                "Possible_Usage_Conditions": [
                    "Monkhorst-Pack grid",
                    "custom k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "when noinv=.true., time reversal symmetry is not assumed"
                },
                "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "occupations",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null
                },
                "Description": "occupations\nControls how electronic occupations are determined",
                "Possible_Usage_Conditions": [
                    "DOS calculations",
                    "stress calculations",
                    "Relaxation calculations",
                    "Dynamics calculations",
                    "Metallic systems",
                    "Insulating systems",
                    "Uniform k-point grid",
                    "Single k-point",
                    "occupations = 'smearing'",
                    "Tetrahedron method (Bloechl's version)",
                    "Linear tetrahedron method",
                    "Optimized tetrahedron method",
                    "Fixed occupations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": null,
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "smearing": "for metals, requires parameters smearing and degauss",
                    "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                    "tetrahedra_lin": "original linear tetrahedron method, reference only",
                    "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                    "fixed": "for insulators with a gap",
                    "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "smearing": "requires smearing and degauss parameters",
                    "K_POINTS": "tetrahedra method requires uniform grid of k-points",
                    "OCCUPATIONS": "from_input option requires occupations to be read from OCCUPATIONS card",
                    "nbnd": "from_input option requires nbnd parameter to be set",
                    "tot_charge": "from_input occupations should be consistent with tot_charge"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss_cond",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0 Ry"
                },
                "Description": "degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)",
                "Possible_Usage_Conditions": [
                    "Two-chemical-potential calculations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in two-chemical potential calculations when twochem = .True.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "twochem": "Parameter is used when twochem = .True."
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nelec_cond",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "nelec_cond\nNumber of electrons placed in the conduction manifold in a two-chemical potential calculation (twochem = .True.). Of the total number of electrons nelec_cond will occupy the valence manifold and nelec_cond will be constrained in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "Two-chemical-potential calculations",
                    "valence and conduction manifolds"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in two-chemical potential calculations when twochem = .True.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "twochem": "Must be set to .true. for this parameter to be relevant"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                "Possible_Usage_Conditions": [
                    "calculation = 'bands'",
                    "Metallic systems",
                    "partial occupations",
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "smearing",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "gaussian"
                },
                "Description": "smearing\nControls the type of smearing method to be used",
                "Possible_Usage_Conditions": [
                    "Metallic systems",
                    "Semiconductor systems",
                    "partial occupations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "gaussian/gauss": "ordinary Gaussian spreading",
                    "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                    "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                    "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "gaussian smearing for metals occupations='smearing'",
                    "degauss": "used in Gaussian smearing",
                    "nspin": "for spin-polarized calculations",
                    "constrained_magnetization": "for magnetic calculations"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "exx_fraction",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null,
                    "PBE0": 0.25,
                    "B3LYP": 0.2
                },
                "Description": "exx_fraction\nFraction of EXX for hybrid functional calculations",
                "Possible_Usage_Conditions": [
                    "Hybrid functional calculations",
                    "input_dft='PBE0', 'B3LYP'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in hybrid functional calculations",
                "Parameter_Value_Conditions": {
                    "0.25": "When input_dft = 'PBE0'",
                    "0.20": "When input_dft = 'B3LYP'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "input_dft": "Determines default value based on functional type"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "screening_parameter",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.106
                },
                "Description": "screening_parameter\nscreening_parameter for HSE like hybrid functionals.",
                "Possible_Usage_Conditions": [
                    "Hybrid functional calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nqx1, nqx2, nqx3",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": "the size of the k-point mesh used"
                },
                "Description": "nqx1, nqx2, nqx3\nThree-dimensional mesh for q (k1-k2) sampling of the Fock operator (EXX). Can be smaller than the number of k-points.",
                "Possible_Usage_Conditions": [
                    "Exact exchange calculations",
                    "Hybrid functionals with exact exchange",
                    "custom k-points"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "K_POINTS": "defaults to its size"
                },
                "Final_comments": "Currently this defaults to the size of the k-point mesh used.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "starting_ns_eigenvalue",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "-1.d0"
                },
                "Description": "starting_ns_eigenvalue(m,ispin,ityp)\nIn the first iteration of an DFT+U run it overwrites the m-th eigenvalue of the ns occupation matrix for the ispin component of atomic species ityp.",
                "Possible_Usage_Conditions": [
                    "DFT+U Hubbard correction",
                    "Collinear magnetic calculations (LSDA)",
                    "Non-collinear magnetic calculations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in first iteration of DFT+U calculations. For noncollinear case, ispin index runs up to npol=2. The value lmax is given by the maximum angular momentum number to which the Hubbard U is applied.",
                "Parameter_Value_Conditions": {
                    "-1.d0": "parameter not set",
                    "other values": "overwrites eigenvalue of ns occupation matrix"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "HUBBARD": "related to maximum angular momentum number for Hubbard U"
                },
                "Final_comments": "Leave unchanged eigenvalues that are not set. This is useful to suggest the desired orbital occupations when the default choice takes another path.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "assume_isolated",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-relax'",
                    "Cubic supercells",
                    "2D periodic systems in x-y plane",
                    "Isolated (non-periodic) systems",
                    "charged slabs",
                    "vacuum boundaries",
                    "electrode boundaries",
                    "optional electric field"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "none": "regular periodic calculation w/o any correction",
                    "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                    "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                    "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "esm_bc": "Used with esm to choose boundary conditions",
                    "esm_efield": "Used with esm for optional electric field",
                    "esm_w": "Related to esm",
                    "esm_nfit": "Related to esm",
                    "cell_dofree": "Should be set to \"2Dxy\" when using 2D option in vc-relax calculations"
                },
                "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "uniqueb",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "uniqueb\nUsed for monoclinic lattices to specify the orientation of the twofold axis or mirror normal",
                "Possible_Usage_Conditions": [
                    "Monoclinic systems",
                    "ibrav = -12",
                    "ibrav = -13"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only for monoclinic lattices",
                "Parameter_Value_Conditions": {
                    "True": "twofold axis or mirror normal is parallel to b axis",
                    "False": "twofold axis or mirror normal is parallel to c axis"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ibrav": "Used with ibrav values -12 or -13"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-6"
                },
                "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "diago_thr_init": "In nscf calculations, conv_thr is used to set the default value of the threshold (ethr) for iterative diagonalization"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "ion_positions",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "default"
                },
                "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "",
                "Parameter_Value_Conditions": {
                    "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                    "from_input": "read atomic positions from standard input, even if restarting"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation=relax": "bfgs",
                    "calculation=md": "verlet",
                    "calculation=vc-relax": "bfgs",
                    "calculation=vc-md": "beeman"
                },
                "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                    "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                    "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                    "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                    "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                    "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                    "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "CONSTRAINTS": "can be used with 'damp' and 'fire' for constrained optimization, and with 'verlet' for constrained dynamics",
                    "cell_dynamics": "for vc-relax with 'bfgs', requires cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "remove_rigid_rot",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": "Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "ion_temperature\nControls the ionic temperature using different methods",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                    "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                    "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                    "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                    "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                    "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                    "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                    "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                    "not_controlled": "(default) ionic temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tempw": "used with most temperature control methods",
                    "nraise": "used with most temperature control methods",
                    "tolp": "used with rescaling method",
                    "delta_t": "used with rescale-T and reduce-T methods"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "delta_t",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D0"
                },
                "Description": "delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "positive": "when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling",
                    "negative": "when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_temperature": "must be either 'rescale-T' or 'reduce-T'",
                    "nraise": "used when ion_temperature = 'reduce-T'"
                },
                "Final_comments": "For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "upscale",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "conv_thr": "'conv_thr' is automatically reduced when the relaxation approaches convergence so that forces are still accurate, but 'conv_thr' will not be reduced to less that conv_thr / upscale"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "bfgs_ndim",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "1": "standard quasi-Newton BFGS method is used"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_nmin",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 5
                },
                "Description": "fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fcp_mu",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "constant chemical potential conditions"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if lfcp = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "nsolv",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nsolv\nThe number of solvents (i.e. molecular species) in the unit cell",
                "Possible_Usage_Conditions": [
                    "RISM calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if trism = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            }
        ],
        "trimmed_documentation_string": [
            "Parameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nosym\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym\nControls whether symmetry is used in calculations\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Low-symmetry large cells,\n  Isolated (non-periodic) systems,\n  custom k-points,\n  nosym k-points,\n  full BZ coverage,\n]\nUsage_Conditions:\n\"When .TRUE., symmetry is not used affecting k-points handling and charge density calculations\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"Disables symmetry usage, k-points list used as is, no symmetry-inequivalent k-points generation, no charge density symmetrization\"\n}\nFinal_comments:\n\"Do not use this option unless you know exactly what you want and what you get\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"celldm\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.\"\nPossible_Usage_Conditions: [\n  ibrav-defined crystal structure,\n]\nUsage_Conditions:\n\"Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified\"\nParameter_Value_Conditions:\n{\n  celldm(1):\n\"is the lattice parameter \"a\" (in BOHR)\"\n  celldm(1) when ibrav=0:\n\"only celldm(1) is used if present\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"starting_ns_eigenvalue\"\nDefault_Values:\n{\n  default:\n\"-1.d0\"\n}\nDescription:\n\"starting_ns_eigenvalue(m,ispin,ityp)\nIn the first iteration of an DFT+U run it overwrites the m-th eigenvalue of the ns occupation matrix for the ispin component of atomic species ityp.\"\nPossible_Usage_Conditions: [\n  DFT+U Hubbard correction,\n  Collinear magnetic calculations (LSDA),\n  Non-collinear magnetic calculations,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used in first iteration of DFT+U calculations. For noncollinear case, ispin index runs up to npol=2. The value lmax is given by the maximum angular momentum number to which the Hubbard U is applied.\"\nParameter_Value_Conditions:\n{\n  -1.d0:\n\"parameter not set\"\n  other values:\n\"overwrites eigenvalue of ns occupation matrix\"\n}\nFinal_comments:\n\"Leave unchanged eigenvalues that are not set. This is useful to suggest the desired orbital occupations when the default choice takes another path.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"screening_parameter\"\nDefault_Values:\n{\n  default:\n0.106\n}\nDescription:\n\"screening_parameter\nscreening_parameter for HSE like hybrid functionals.\"\nPossible_Usage_Conditions: [\n  Hybrid functional calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"exx_fraction\"\nDefault_Values:\n{\n  default: None\n  PBE0:\n0.25\n  B3LYP:\n0.2\n}\nDescription:\n\"exx_fraction\nFraction of EXX for hybrid functional calculations\"\nPossible_Usage_Conditions: [\n  Hybrid functional calculations,\n  input_dft='PBE0', 'B3LYP',\n]\nUsage_Conditions:\n\"Used in hybrid functional calculations\"\nParameter_Value_Conditions:\n{\n  0.25:\n\"When input_dft = 'PBE0'\"\n  0.20:\n\"When input_dft = 'B3LYP'\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"uniqueb\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"uniqueb\nUsed for monoclinic lattices to specify the orientation of the twofold axis or mirror normal\"\nPossible_Usage_Conditions: [\n  Monoclinic systems,\n  ibrav = -12,\n  ibrav = -13,\n]\nUsage_Conditions:\n\"Used only for monoclinic lattices\"\nParameter_Value_Conditions:\n{\n  True:\n\"twofold axis or mirror normal is parallel to b axis\"\n  False:\n\"twofold axis or mirror normal is parallel to c axis\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nqx1, nqx2, nqx3\"\nDefault_Values:\n{\n  default:\n\"the size of the k-point mesh used\"\n}\nDescription:\n\"nqx1, nqx2, nqx3\nThree-dimensional mesh for q (k1-k2) sampling of the Fock operator (EXX). Can be smaller than the number of k-points.\"\nPossible_Usage_Conditions: [\n  Exact exchange calculations,\n  Hybrid functionals with exact exchange,\n  custom k-points,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments:\n\"Currently this defaults to the size of the k-point mesh used.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"lfcp\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  ESM calculations,\n  Constant bias potential calculations,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"'calculation' must be 'relax' or 'md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))\"\n}\nFinal_comments:\n\"The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.\"\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"remove_rigid_rot\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"delta_t\"\nDefault_Values:\n{\n  default:\n\"1.D0\"\n}\nDescription:\n\"delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  positive:\n\"when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling\"\n  negative:\n\"when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps\"\n}\nFinal_comments:\n\"For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nelec_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"nelec_cond\nNumber of electrons placed in the conduction manifold in a two-chemical potential calculation (twochem = .True.). Of the total number of electrons nelec_cond will occupy the valence manifold and nelec_cond will be constrained in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  valence and conduction manifolds,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"tefield\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.\"\nPossible_Usage_Conditions: [\n  Ground state calculations,\n  Relaxation calculations,\n  tefield = .TRUE.,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  True:\n\"A saw-like potential simulating an electric field is added to the bare ionic potential\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\""
        ],
        "qe_generation_template": "&CONTROL calculation, value: scf, value_type: character\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nr1s, nr2s, nr3s, value: Default values calculated based on ecutwfc and ecutrho, value_type: integer\n&SYSTEM nosym, value: .TRUE., value_type: logical\n&SYSTEM nosym_evc, value: False, value_type: logical\n&SYSTEM occupations, value: 'from_input', value_type: character\n&SYSTEM smearing, value: methfessel-paxton, value_type: character\n&SYSTEM exx_fraction, value: 0.25, value_type: real\n&SYSTEM nqx1, nqx2, nqx3, value: 8x7x8, value_type: integer\n&SYSTEM starting_ns_eigenvalue, value: -1.d0, value_type: real\n&ELECTRONS conv_thr, value: 1.D-6, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS upscale, value: 100.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n",
        "qe_initialization": "&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n",
        "generated_input": "qe_input=QeMatch(qe_input_gen=\"&CONTROL\\n    title = 'test'\\n    calculation = 'relax'\\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\\n/\\n\\n&SYSTEM\\n    ibrav = 0\\n    nat = 12\\n    ntyp = 2\\n    ecutwfc = 35.0\\n    ecutrho = 280.0\\n    occupations = 'from_input'\\n    smearing = 'methfessel-paxton'\\n    exx_fraction = 0.25\\n    nqx1 = 8\\n    nqx2 = 7\\n    nqx3 = 8\\n    starting_ns_eigenvalue = -1.d0\\n/\\n\\n&ELECTRONS\\n    conv_thr = 1.D-6\\n/\\n\\n&IONS\\n    ion_positions = 'from_input'\\n    ion_dynamics = 'bfgs'\\n    upscale = 100.D0\\n    bfgs_ndim = 1\\n/\\n\\nATOMIC_SPECIES\\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\\nS      32.065 s_pbe_v1.4.uspp.F.UPF\\n\\nATOMIC_POSITIONS angstrom\\nRe           2.1613933824       6.0319465588       4.4956601246 \\nRe          -0.5957460437      -0.2097683975       1.1993933399 \\nRe          -0.6566906939       5.9595912135       4.6346612599 \\nRe           2.2223380327      -0.1374130522       1.0603922046 \\nS           -2.4835238538       4.3811211783       4.8208524411 \\nS            4.0491711926       1.4410569831       0.8742010233 \\nS            0.8213512274       4.1621324413       5.0408515034 \\nS            0.7442961114       1.6600457199       0.6542019611 \\nS            2.2623016798       5.2873168493       2.1382914568 \\nS           -0.6966543411       0.5348613121       3.5567620077 \\nS            2.3605490432       0.7374812686       3.4208130309 \\nS           -0.7949017044       5.0846968927       2.2742404336 \\n\\nK_POINTS automatic\\n8 7 8 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n     -6.4061721519      -0.0102766785      -0.0021230106\\n     -1.7024375891       6.8669370407       0.0952164400\\n     -3.2680849278       1.0447588794      -5.5998370245\\n\")",
        "error_msg": [],
        "log_qe_gen_prompt": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nCreate a Quantum Espresso input file for 'calculation = 'relax'\nGround state calculations\nPAW pseudopotential\nPBE0\nibrav constrain\ncutoff\nk-mesh\ntotal energy calculations' calculation of 'Re4S8' compound, based on the given CONTEXT and DETAILS.\n\n<CONTEXT>\n&CONTROL title = 'test'\n\n&CONTROL calculation, value: scf, value_type: character\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nr1s, nr2s, nr3s, value: Default values calculated based on ecutwfc and ecutrho, value_type: integer\n&SYSTEM nosym, value: .TRUE., value_type: logical\n&SYSTEM nosym_evc, value: False, value_type: logical\n&SYSTEM occupations, value: 'from_input', value_type: character\n&SYSTEM smearing, value: methfessel-paxton, value_type: character\n&SYSTEM exx_fraction, value: 0.25, value_type: real\n&SYSTEM nqx1, nqx2, nqx3, value: 8x7x8, value_type: integer\n&SYSTEM starting_ns_eigenvalue, value: -1.d0, value_type: real\n&ELECTRONS conv_thr, value: 1.D-6, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS upscale, value: 100.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 280.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 12\n----------\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n\n\n</CONTEXT>\n\n<DETAILS>\nConduct structural optimization for ReS2, with hybrid PBE0 with ibrav constrain. Uses a cutoff of 70 Ry, PAW pseudopotential and a 4x4x4 k-mesh for the BZ sampling.\n</DETAILS>\n\n<RULES>\n- Write the input file for the given calculation type\n- Set the value of the variables based on the CONTEXT and the DETAILS\n- Use only relevant parameters based on the CONTEXT, DETAILS\n- Each parameter should be under correct namelist\n- Each parameter should have a correct value type such as integer, real, character, or logical\n- The namelists &CONTROL, &SYSTEM, &ELECTRONS, must be in this order exactly\n- The cards ATOMIC_SPECIES, ATOMIC_POSITIONS, K_POINTS, and CELL_PARAMETERS must be present and based on CONTEXT and DETAILS\n- In &CONTROL should have 'pseudo_dir': /home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp and 'outdir':'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir' defined, according to the given CONTEXT\n</RULES>\n\n<OUTPUT>\n- Write the input file\n- Put the code blocks in ```fortran and ```.\n- Review the code to see how the generated code followed the RULES, CONTEXT, and DETAILS, then give some explanation.\n</OUTPUT>\n"
        ],
        "log_qe_input": [
            "&CONTROL\n    title = 'test'\n    calculation = 'relax'\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n/\n\n&SYSTEM\n    ibrav = 0\n    nat = 12\n    ntyp = 2\n    ecutwfc = 35.0\n    ecutrho = 280.0\n    occupations = 'from_input'\n    smearing = 'methfessel-paxton'\n    exx_fraction = 0.25\n    nqx1 = 8\n    nqx2 = 7\n    nqx3 = 8\n    starting_ns_eigenvalue = -1.d0\n/\n\n&ELECTRONS\n    conv_thr = 1.D-6\n/\n\n&IONS\n    ion_positions = 'from_input'\n    ion_dynamics = 'bfgs'\n    upscale = 100.D0\n    bfgs_ndim = 1\n/\n\nATOMIC_SPECIES\nRe     186.207 Re_pbe_v1.2.uspp.F.UPF\nS      32.065 s_pbe_v1.4.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nRe           2.1613933824       6.0319465588       4.4956601246 \nRe          -0.5957460437      -0.2097683975       1.1993933399 \nRe          -0.6566906939       5.9595912135       4.6346612599 \nRe           2.2223380327      -0.1374130522       1.0603922046 \nS           -2.4835238538       4.3811211783       4.8208524411 \nS            4.0491711926       1.4410569831       0.8742010233 \nS            0.8213512274       4.1621324413       5.0408515034 \nS            0.7442961114       1.6600457199       0.6542019611 \nS            2.2623016798       5.2873168493       2.1382914568 \nS           -0.6966543411       0.5348613121       3.5567620077 \nS            2.3605490432       0.7374812686       3.4208130309 \nS           -0.7949017044       5.0846968927       2.2742404336 \n\nK_POINTS automatic\n8 7 8 0 0 0\n\nCELL_PARAMETERS angstrom\n     -6.4061721519      -0.0102766785      -0.0021230106\n     -1.7024375891       6.8669370407       0.0952164400\n     -3.2680849278       1.0447588794      -5.5998370245\n"
        ],
        "log_qe_solution": [],
        "rest_formula_data": {
            "formula": "Re4S8",
            "k_points_2d": "None",
            "uuid": "e8042bf8-5225-4b11-b8f4-4036c517ae47",
            "ase_atom_object": "Atoms(symbols='Re4S8', pbc=True, cell=[[-6.4061721519, -0.0102766785, -0.0021230106], [-1.7024375891, 6.8669370407, 0.09521644], [-3.2680849278, 1.0447588794, -5.5998370245]])",
            "indx": "None"
        },
        "workflow_log": [
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Interface agent",
                    "start_time": "2025-02-10 06:35:21"
                },
                "timestamp": "2025-02-10 06:35:21.717509",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:35:21",
                    "end_time": "2025-02-10 06:35:23",
                    "message": "Interface agent"
                },
                "timestamp": "2025-02-10 06:35:23.034896",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "3D structure generation",
                    "start_time": "2025-02-10 06:35:23"
                },
                "timestamp": "2025-02-10 06:35:23.034975",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:35:23",
                    "end_time": "2025-02-10 06:35:24",
                    "message": "3D structure generation"
                },
                "timestamp": "2025-02-10 06:35:24.454614",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Starting Quantum Espresso documentation collection",
                    "start_time": "2025-02-10 06:35:24"
                },
                "timestamp": "2025-02-10 06:35:24.454674",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:35:24",
                    "end_time": "2025-02-10 06:35:26",
                    "message": "Quantum Espresso documentation collection"
                },
                "timestamp": "2025-02-10 06:35:26.806991",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso condition extraction",
                    "start_time": "2025-02-10 06:35:26"
                },
                "timestamp": "2025-02-10 06:35:26.807040",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:35:26",
                    "end_time": "2025-02-10 06:36:04",
                    "message": "Quantum Espresso condition extraction"
                },
                "timestamp": "2025-02-10 06:36:04.601745",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Parameter graph generation",
                    "start_time": "2025-02-10 06:36:04"
                },
                "timestamp": "2025-02-10 06:36:04.601839",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:36:04",
                    "end_time": "2025-02-10 06:36:04",
                    "message": "Parameter graph generation"
                },
                "timestamp": "2025-02-10 06:36:04.605721",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Documentation collection for trimmed parameters",
                    "start_time": "2025-02-10 06:36:04"
                },
                "timestamp": "2025-02-10 06:36:04.605781",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:36:04",
                    "end_time": "2025-02-10 06:36:04",
                    "message": "Documentation collection for trimmed parameters"
                },
                "timestamp": "2025-02-10 06:36:04.606866",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input parameter evaluation",
                    "start_time": "2025-02-10 06:36:04"
                },
                "timestamp": "2025-02-10 06:36:04.606925",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:36:04",
                    "end_time": "2025-02-10 06:37:15",
                    "message": "Quantum Espresso input parameter evaluation"
                },
                "timestamp": "2025-02-10 06:37:15.954557",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation template",
                    "start_time": "2025-02-10 06:37:15"
                },
                "timestamp": "2025-02-10 06:37:15.954676",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:37:15",
                    "end_time": "2025-02-10 06:37:15",
                    "message": "Quantum Espresso input generation template"
                },
                "timestamp": "2025-02-10 06:37:15.959465",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation",
                    "start_time": "2025-02-10 06:37:15"
                },
                "timestamp": "2025-02-10 06:37:15.959531",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:37:15",
                    "end_time": "2025-02-10 06:37:27",
                    "message": "Quantum Espresso input generation"
                },
                "timestamp": "2025-02-10 06:37:27.256657",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso is initializing",
                    "start_time": "2025-02-10 06:37:27"
                },
                "timestamp": "2025-02-10 06:37:27.256744",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 06:37:27",
                    "end_time": "2025-02-10 06:37:28",
                    "message": "Quantum Espresso calculation completed successfully"
                },
                "timestamp": "2025-02-10 06:37:28.543439",
                "level": "INFO"
            }
        ],
        "workflow_state": "FINISHED"
    }
]
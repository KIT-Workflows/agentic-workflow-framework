[
    {
        "project_signature": "test",
        "calculation_description": "Calculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
        "analysis_dict": {
            "description": "Calculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
            "formula": "Mo",
            "database": "mc3d"
        },
        "get_conditions_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCalculation_types\n- Berry phase calculations\n- Constant bias potential calculations\n- DOS calculations\n- Dynamical Mean Field Theory\n- Dynamics calculations\n- ESM calculations\n- FCP calculations\n- GC-SCF calculations\n- Ground state calculations\n- HP code calculations\n- LDA+U calculations\n- Linear-response calculations\n- Relaxation calculations\n- Two-chemical-potential calculations\n- calculation = 'bands'\n- calculation = 'md'\n- calculation = 'nscf'\n- calculation = 'relax'\n- calculation = 'scf'\n- calculation = 'vc-md'\n- calculation = 'vc-relax'\n- charge density calculations\n- dispersion correction calculations\n- stress calculations\n- total energy calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nFunctional_and_method_types\n- BEEF-type functionals\n- Conjugate gradient diagonalization\n- Davidson diagonalization\n- PPCG diagonalization\n- Paro diagonalization\n- RMM-DIIS diagonalization\n- DFT-D calculations\n- DFT-D2 calculations\n- DFT-D3 calculations\n- Exact exchange calculations\n- Exchange-correlation functional\n- Exchange-hole dipole-moment model\n- Gradient-corrected functionals\n- Hybrid functional calculations\n- Hybrid functionals with exact exchange\n- Many-body dispersion (MBD) corrections\n- Parrinello-Rahman MD\n- Scissor operator corrections\n- Tkatchenko-Scheffler dispersion corrections\n- Wentzcovitch MD\n- functional is NOT one of: B86bPBE, PW86PBE, PBE, BLYP\n- gammaDFT calculations\n- input_dft='PBE0', 'B3LYP'\n- ion_dynamics = 'bfgs'\n- ion_dynamics = 'fire'\n- ion_dynamics = 'verlet'\n- ion_dynamics = 'damp'\n- long-range interactions\n- Non-collinear calculations\n- spin-orbit calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCell_and_material_properties\n- 2D periodic systems in x-y plane\n- Anisotropic supercells\n- Bravais lattice structure (values 0 to 14)\n- Correlated orbitals\n- Cubic supercells\n- DOS of materials\n- Fixed cell calculations\n- Framework/porous systems\n- Hard FFT grid\n- High symmetry systems\n- Insulating systems\n- Low-symmetry large cells\n- Materials like graphite\n- Materials with long-range interaction\n- Metallic systems\n- Monoclinic systems\n- Non-periodic systems\n- Periodic systems\n- Quasi-cubic supercells\n- Rare Earth Elements\n- Semiconductor systems\n- Slab systems\n- Smooth FFT grid\n- Strongly correlated electrons\n- Transition Metals\n- Variable cell calculations\n- charged cells\n- homogeneous systems\n- ibrav = -12\n- ibrav = -13\n- ibrav-defined crystal structure\n- ibrav = 5\n- ibrav = 0\n- inhomogeneous systems\n- non-symmorphic symmetry operations\n- periodic cell with defined z-direction\n- rhombohedral space group\n- single atom/isolated systems\n- symmetry-defined crystal structure\n- variable cell calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nPseudopotential_types\n- PAW sets\n- Pseudopotentials with Hubbard occupation\n- Relativistic pseudopotentials\n- UPF pseudopotentials\n- Ultrasoft pseudopotentials\n- nonlocal pseudopotentials\n- norm-conserving pseudopotentials\n- pseudopotential tables\n- pseudopotentials with spin-orbit coupling\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nMagnetism_and_Spin_conditions\n- Collinear magnetic calculations (LSDA)\n- Collinear spin\n- Constrained magnetization\n- Initial magnetization\n- Magnetic systems\n- Non-collinear magnetic calculations\n- Spin-orbit coupling\n- Spin-polarized calculations\n- lspinorb = .True.\n- nspin = 1\n- nspin = 2\n- starting_magnetization=0.0\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nIsolated_systems_and_boundary_conditions\n- Dielectric environment\n- Isolated (non-periodic) systems\n- Laue boundary conditions\n- Laue-RISM calculations\n- Systems using Reference Interaction Site Model (RISM)\n- Systems with solvent regions\n- Systems with solvent-solute interactions\n- assume_isolated must be set to 'esm'\n- charged slabs\n- constant chemical potential conditions\n- electrode boundaries\n- laue_wall != 'none'\n- vacuum boundaries\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nk_point_settings\n- Automatic k-points\n- Monkhorst-Pack grid\n- Non-automatic k-points\n- Single k-point\n- Uniform k-point grid\n- custom k-points\n- full BZ coverage\n- nosym k-points\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nElectric_field_conditions\n- 0 < emaxpos < 1\n- Kubo terms\n- System with electric field\n- block = .TRUE.\n- dielectrically consistent RISM (DRISM)\n- dipfield = .TRUE.\n- gate = .TRUE.\n- lelfield = .TRUE.\n- lfcp = .TRUE.\n- optional electric field\n- tefield = .TRUE.\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nOccupation_types\n- Fixed occupations\n- Smearing method\n- Grand canonical ensemble\n- Linear tetrahedron method\n- Optimized tetrahedron method\n- DFT+U Hubbard correction\n- DFT+U+V Hubbard correction\n- DFT+U+J Hubbard correction\n- Systems with empty states\n- Tetrahedron method (Bloechl's version)\n- occupations = 'from_input'\n- occupations = 'smearing'\n- partial occupations\n- valence and conduction manifolds\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "condition_tables": "                                       Item  ...                                     Final_comments\n0                         Calculation_types  ...  The calculation involves relaxation of a singl...\n1               Functional_and_method_types  ...  The calculation description does not specify t...\n2              Cell_and_material_properties  ...  The calculation involves relaxation of a singl...\n3                     Pseudopotential_types  ...  The specific type of pseudopotential to be use...\n4             Magnetism_and_Spin_conditions  ...  The calculation description does not mention a...\n5  Isolated_systems_and_boundary_conditions  ...  The calculation involves a single atom in a BC...\n6                          k_point_settings  ...  The calculation description mentions the use o...\n7                 Electric_field_conditions  ...  The calculation description does not mention a...\n8                          Occupation_types  ...  The calculation description explicitly mention...\n\n[9 rows x 4 columns]",
        "relevant_conditions": [
            "ion_dynamics = 'bfgs'",
            "Pseudopotential",
            "Cubic supercells",
            "k-point grid",
            "Smearing method calculations",
            "ion_dynamics = 'fire'",
            "symmetry-defined crystal structure",
            "smearing",
            "nonlocal pseudopotentials",
            "calculation = 'scf'",
            "ibrav-defined crystal structure",
            "Ultrasoft pseudopotentials",
            "ion_dynamics = 'verlet'",
            "Relativistic pseudopotentials",
            "pseudopotentials with spin-orbit coupling",
            "mixing",
            "Uniform k-point grid",
            "Pseudopotential calculations",
            "plane-wave basis set",
            "norm-conserving pseudopotentials",
            "Ground state calculations",
            "vacuum boundaries",
            "Transition Metals",
            "Isolated_systems_and_boundary_conditions",
            "Relaxation calculations",
            "Mixing parameter calculations",
            "Brillouin zone sampling calculations",
            "Automatic k-points",
            "pseudopotential",
            "K-point grid calculations",
            "occupations = 'smearing'",
            "nspin = 2",
            "starting_magnetization=0.0",
            "Plane-wave basis set",
            "variable cell calculations",
            "UPF pseudopotentials",
            "Brillouin zone sampling",
            "Plane-wave basis set calculations",
            "SCF cycle",
            "nspin = 1",
            "ion_dynamics = 'damp'",
            "full BZ coverage",
            "Pseudopotentials with Hubbard occupation",
            "Periodic systems",
            "single atom/isolated systems",
            "Mixing parameter",
            "Smearing method",
            "Total energy calculations",
            "calculation = 'relax'",
            "Exchange-correlation functional",
            "Monkhorst-Pack grid"
        ],
        "parameter_evaluation_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"electron_maxstep\"\nDefault_Values:\n{\n  default:\n100\n}\nDescription:\n\"electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ecutsolv\"\nDefault_Values:\n{\n  default:\n\"4 * ecutwfc\"\n}\nDescription:\n\"ecutsolv\nKinetic energy cutoff (Ry) for solvent's correlation functions.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Framework/porous systems,\n  single atom/isolated systems,\n  Slab systems,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions:\n{\n  default:\n\"If a solute is an isolated system or slab\"\n  larger value:\n\"For a frameworked or porous solute (e.g. Zeolite, MOF)\"\n}\nFinal_comments:\n\"Solvents confined in a framework often have a high frequency.\"\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"remove_rigid_rot\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"exxdiv_treatment\"\nDefault_Values:\n{\n  default:\n\"gygi-baldereschi\"\n}\nDescription:\n\"exxdiv_treatment\nSpecific for EXX. It selects the kind of approach to be used for treating the Coulomb potential divergencies at small q vectors.\"\nPossible_Usage_Conditions: [\n  Exact exchange calculations,\n  Hybrid functionals with exact exchange,\n  Cubic supercells,\n  Quasi-cubic supercells,\n  Anisotropic supercells,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gygi-baldereschi:\n\"appropriate for cubic and quasi-cubic supercells\"\n  vcut_spherical:\n\"appropriate for cubic and quasi-cubic supercells\"\n  vcut_ws:\n\"appropriate for strongly anisotropic supercells\"\n  none:\n\"sets Coulomb potential at G,q=0 to 0.0 (required for GAU-PBE)\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"delta_t\"\nDefault_Values:\n{\n  default:\n\"1.D0\"\n}\nDescription:\n\"delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  positive:\n\"when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling\"\n  negative:\n\"when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps\"\n}\nFinal_comments:\n\"For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nCard_Name:\n\"CONSTRAINTS\"\nNamelist:\n\"Card: CONSTRAINTS\"\nDescription:\n\"Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\"\nFinal_comments: None\nPossible_Usage_Conditions: [\n  ion_dynamics = 'verlet',\n  ion_dynamics = 'damp',\n]\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"q2sigma\"\nDefault_Values:\n{\n  default:\n0.1\n}\nDescription:\n\"q2sigma\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). q2sigma is the width (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n]\nUsage_Conditions:\n\"Used in the kinetic energy calculation where G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"lorbm\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lorbm\nIf .TRUE. perform orbital magnetization calculation.\"\nPossible_Usage_Conditions: [\n  calculation = 'nscf',\n  norm-conserving pseudopotentials,\n  Uniform k-point grid,\n  Kubo terms,\n]\nUsage_Conditions:\n\"Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed.\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"relaxz\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"relaxz\nAllows the relaxation of the system towards the charged plate.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n  gate = .TRUE.,\n  dipfield = .TRUE.,\n]\nUsage_Conditions:\n\"used only if (gate = .TRUE.)\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tefield\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.\"\nPossible_Usage_Conditions: [\n  Ground state calculations,\n  Relaxation calculations,\n  tefield = .TRUE.,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  True:\n\"A saw-like potential simulating an electric field is added to the bare ionic potential\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"noncolin\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"noncolin\nif .true. the program will perform a noncollinear calculation.\"\nPossible_Usage_Conditions: [\n  Relativistic pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"forc_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.0D-3\"\n}\nDescription:\n\"forc_conv_thr\nConvergence threshold on forces (a.u) for ionic minimization: the convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"celldm\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.\"\nPossible_Usage_Conditions: [\n  ibrav-defined crystal structure,\n]\nUsage_Conditions:\n\"Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified\"\nParameter_Value_Conditions:\n{\n  celldm(1):\n\"is the lattice parameter \"a\" (in BOHR)\"\n  celldm(1) when ibrav=0:\n\"only celldm(1) is used if present\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"etot_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.0D-4\"\n}\nDescription:\n\"etot_conv_thr\nConvergence threshold on total energy (a.u) for ionic minimization: the convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps. Note that 'etot_conv_thr' is extensive, like the total energy.\"\nPossible_Usage_Conditions: [\n  total energy calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"efield_cart\"\nDefault_Values:\n{\n  default:\n\"(0.D0, 0.D0, 0.D0)\"\n}\nDescription:\n\"efield_cart(i), i=1,3\nFinite electric field (in Ry a.u.=36.3609*10^10 V/m) in cartesian axis.\"\nPossible_Usage_Conditions: [\n  Automatic k-points,\n  lelfield = .TRUE.,\n]\nUsage_Conditions:\n\"Used only if lelfield = .TRUE. and if k-points (K_POINTS card) are automatic.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"qcutz\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"qcutz\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). qcutz is the height (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'. In the kinetic energy, G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n  variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"startingwfc\"\nDefault_Values:\n{\n  default:\n\"atomic+random\"\n}\nDescription:\n\"startingwfc\nSpecifies how the initial wavefunctions are generated\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  High symmetry systems,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  atomic:\n\"Start from superposition of atomic orbitals. If not enough atomic orbitals are available, fill with random numbers the remaining wfcs. The scf typically starts better with this option, but in some high-symmetry cases one can \"loose\" valence states, ending up in the wrong ground state.\"\n  atomic+random:\n\"As above, plus a superimposed \"randomization\" of atomic orbitals. Prevents the \"loss\" of states mentioned above.\"\n  random:\n\"Start from random wfcs. Slower start of scf but safe. It may also reduce memory usage in conjunction with diagonalization='cg'.\"\n  file:\n\"Start from an existing wavefunction file in the directory specified by parameters 'prefix' and 'outdir'.\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tot_magnetization\"\nDefault_Values:\n{\n  default:\n-10000\n}\nDescription:\n\"tot_magnetization\nTotal majority spin charge - minority spin charge. Used to impose a specific total electronic magnetization.\"\nPossible_Usage_Conditions: [\n  nspin = 2,\n  Collinear spin,\n  Magnetic systems,\n]\nUsage_Conditions:\n\"If unspecified then tot_magnetization parameter is ignored and the amount of electronic magnetization is determined during the self-consistent (scf) cycle.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"lfcp\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  ESM calculations,\n  Constant bias potential calculations,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"'calculation' must be 'relax' or 'md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))\"\n}\nFinal_comments:\n\"The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.\"\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"origin_choice\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"origin_choice\nUsed only for space groups that in the ITA allow the use of two different origins. origin_choice=1, means the first origin, while origin_choice=2 is the second origin.\"\nPossible_Usage_Conditions: [\n  symmetry-defined crystal structure,\n]\nUsage_Conditions:\n\"Used only for space groups that in the ITA allow the use of two different origins\"\nParameter_Value_Conditions:\n{\n  1:\n\"first origin\"\n  2:\n\"second origin\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nspin\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nspin\nControls spin polarization type in calculations\"\nPossible_Usage_Conditions: [\n  nspin = 1,\n  nspin = 2,\n  Collinear magnetic calculations (LSDA),\n  Spin-polarized calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  1:\n\"non-polarized calculation\"\n  2:\n\"spin-polarized calculation, LSDA (magnetization along z axis)\"\n  4:\n\"spin-polarized calculation, noncollinear (magnetization in generic direction)\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"space_group\"\nDefault_Values:\n{\n  default:\n0\n}\nDescription:\n\"space_group\nThe number of the space group of the crystal, as given in the International Tables of Crystallography A (ITA). This allows to give in input only the inequivalent atomic positions. The positions of all the symmetry equivalent atoms are calculated by the code.\"\nPossible_Usage_Conditions: [\n  symmetry-defined crystal structure,\n]\nUsage_Conditions:\n\"Used only when the atomic positions are of type crystal_sg\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"conv_thr_init\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"conv_thr_init\nWhen adaptive_thr = .TRUE. this is the convergence threshold used for the first scf cycle.\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n]\nUsage_Conditions:\n\"Used when adaptive_thr is set to .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"Hubbard_occ\"\nDefault_Values:\n{\n  default:\n\"read from pseudopotentials\"\n}\nDescription:\n\"Hubbard_occ(ityp,i)\nHubbard occupations is the number of electrons in the Hubbard manifold. By default they are initialized by reading the occupations from pseudopotentials. If specified from the input, then the values read from the pseudopotentials will be overwritten.\"\nPossible_Usage_Conditions: [\n  DFT+U Hubbard correction,\n  LDA+U calculations,\n  Strongly correlated electrons,\n  Transition Metals,\n  Rare Earth Elements,\n  Pseudopotentials with Hubbard occupation,\n]\nUsage_Conditions:\n\"The second index of the Hubbard_occ array corresponds to the Hubbard manifold number. It is possible to specify up to three Hubbard manifolds per Hubbard atom. However, if you want to specify three manifolds then the second and the third manifolds will be considered as one effective manifold.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</Project>\n\n<Conditions>\nion_dynamics = 'bfgs'\nPseudopotential\nCubic supercells\nk-point grid\nSmearing method calculations\nion_dynamics = 'fire'\nsymmetry-defined crystal structure\nsmearing\nnonlocal pseudopotentials\ncalculation = 'scf'\nibrav-defined crystal structure\nUltrasoft pseudopotentials\nion_dynamics = 'verlet'\nRelativistic pseudopotentials\npseudopotentials with spin-orbit coupling\nmixing\nUniform k-point grid\nPseudopotential calculations\nplane-wave basis set\nnorm-conserving pseudopotentials\nGround state calculations\nvacuum boundaries\nTransition Metals\nIsolated_systems_and_boundary_conditions\nRelaxation calculations\nMixing parameter calculations\nBrillouin zone sampling calculations\nAutomatic k-points\npseudopotential\nK-point grid calculations\noccupations = 'smearing'\nnspin = 2\nstarting_magnetization=0.0\nPlane-wave basis set\nvariable cell calculations\nUPF pseudopotentials\nBrillouin zone sampling\nPlane-wave basis set calculations\nSCF cycle\nnspin = 1\nion_dynamics = 'damp'\nfull BZ coverage\nPseudopotentials with Hubbard occupation\nPeriodic systems\nsingle atom/isolated systems\nMixing parameter\nSmearing method\nTotal energy calculations\ncalculation = 'relax'\nExchange-correlation functional\nMonkhorst-Pack grid\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "parameters_collection": [
            {
                "calculation": "relax"
            },
            {
                "tprnfor": ".TRUE."
            },
            {
                "etot_conv_thr": "1.0D-4"
            },
            {
                "forc_conv_thr": "1.0D-3"
            },
            {
                "ntyp": "1"
            },
            {
                "nosym_evc": "False"
            },
            {
                "occupations": "smearing"
            },
            {
                "one_atom_occupations": "True"
            },
            {
                "degauss": "0.D0"
            },
            {
                "smearing": "gaussian"
            },
            {
                "nspin": "1"
            },
            {
                "Hubbard_occ": "read from pseudopotentials"
            },
            {
                "assume_isolated": "none"
            },
            {
                "relaxz": "False"
            },
            {
                "electron_maxstep": "100"
            },
            {
                "scf_must_converge": ".TRUE."
            },
            {
                "conv_thr": "1.D-6"
            },
            {
                "conv_thr_init": "1.D-3"
            },
            {
                "mixing_mode": "plain"
            },
            {
                "mixing_beta": "0.7D0"
            },
            {
                "startingwfc": "atomic+random"
            },
            {
                "ion_positions": "from_input"
            },
            {
                "wfc_extrapolation": "first_order or second_order"
            },
            {
                "upscale": "100.D0"
            },
            {
                "bfgs_ndim": "1"
            },
            {
                "trust_radius_max": "0.8D0"
            },
            {
                "trust_radius_min": "1.D-3"
            },
            {
                "trust_radius_ini": "0.5D0"
            },
            {
                "w_1": "0.01D0"
            },
            {
                "w_2": "0.5D0"
            },
            {
                "fire_alpha_init": "0.2D0"
            },
            {
                "fire_f_dec": "0.5D0"
            }
        ],
        "evaluated_parameters": [
            "Based on the provided project and the assigned tags, the parameter \"tprnfor\" is relevant to the project. The parameter \"tprnfor\" is used to calculate forces, and it is set to .TRUE. automatically if the calculation type is 'relax', 'md', or 'vc-md'. In the given project, the calculation type is not explicitly mentioned, but the tag \"Relaxation calculations\" suggests that the calculation type is 'relax'. Therefore, the parameter \"tprnfor\" is relevant to the project and should be set to .TRUE.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"tprnfor\": \".TRUE.\"}\n```",
            "The parameter \"electron_maxstep\" is relevant to the project as it is used in the Quantum ESPRESSO input file to specify the maximum number of iterations in a scf (self-consistent field) step. In this project, the calculation type is 'scf' as indicated by the tag \"calculation = 'scf'\". Therefore, the parameter \"electron_maxstep\" is relevant to this project.\n\nThe value of \"electron_maxstep\" can be set to the default value of 100, as indicated in the provided parameter information. However, the appropriate value for this parameter can depend on the specific system being studied and the desired level of convergence. In general, a larger value of \"electron_maxstep\" will allow the calculation to run for more iterations, potentially leading to better convergence, but at the cost of increased computational time.\n\nBased on the provided information, the appropriate value for the parameter \"electron_maxstep\" in this project is 100.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"electron_maxstep\": \"100\"}\n```",
            "Based on the provided project and tags, the parameter \"twochem\" is not relevant to the project. The project is a single atom/isolated system calculation with a single chemical potential, and there is no indication of a photoexcited system or a need to constrain a fraction of the electrons in the conduction manifold. Therefore, the parameter \"twochem\" should be set to None.\n\nHere is the python dictionary:\n```python\nparameter_value = {\"twochem\": None}\n```\n\nThe parameter \"twochem\" is used in Quantum ESPRESSO to perform a two chemical potential calculation for the simulation of photoexcited systems, constraining a fraction of the electrons in the conduction manifold. This is typically used in non-equilibrium Green's function (NEGF) calculations or in the study of photoexcited systems. However, in the provided project, there is no indication of such a system or the need for such a calculation. Therefore, the parameter \"twochem\" is not relevant to the project.",
            "The parameter \"refold_pos\" is relevant to the project as it is used in the case of molecular dynamics (MD) or damped dynamics calculations. However, in the provided project, the calculation type is 'scf' which is a single-step calculation and does not involve ion dynamics. Therefore, the parameter \"refold_pos\" is not applicable in this case.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {'refold_pos': None}\n```\n\nThis means that the parameter \"refold_pos\" is not relevant to the project and its value is not set.",
            "Based on the provided project and conditions, the parameter \"ion_temperature\" is not relevant to the project. The project is a single-step calculation of type 'scf' (self-consistent field), which is used to calculate the ground state electronic structure of a system. The \"ion_temperature\" parameter is relevant for multistep calculations such as 'relax', 'vc-relax', 'md', and 'vc-md', which involve the dynamics of ions and the control of their temperature. Since the project does not involve ion dynamics, the \"ion_temperature\" parameter is not applicable.\n\nTherefore, the value of the parameter \"ion_temperature\" for this project is:\n\n```python\nparameter_value = {\"ion_temperature\": None}\n```",
            "Based on the provided project and conditions, the parameter \"ecutsolv\" is not relevant to the project. The parameter \"ecutsolv\" is used in RISM calculations, which are used for solvent-solute interactions. However, the provided project does not involve any solvent-solute interactions or RISM calculations. Therefore, the parameter \"ecutsolv\" is not applicable in this case.\n\nHere is the python dictionary as per the instructions:\n\n```python\nparameter_value = {\"ecutsolv\": None}\n```",
            "The parameter \"trust_radius_max\" is relevant to the project as it is used in structural relaxation calculations, which is the type of calculation being performed in the provided project. The project uses the 'bfgs' ion dynamics, which is one of the conditions for the usage of this parameter.\n\nThe \"trust_radius_max\" parameter is used to set the maximum ionic displacement in the structural relaxation. It is an important parameter in relaxation calculations as it controls the step size in the relaxation process. A larger value allows for larger steps, which can speed up the convergence but may also lead to instabilities. A smaller value ensures a more stable relaxation process but may require more steps to converge.\n\nGiven that the project is a relaxation calculation with 'bfgs' ion dynamics, the \"trust_radius_max\" parameter is relevant. The default value of \"0.8D0\" can be used, but the optimal value may depend on the specific system and convergence criteria.\n\nHere is the Python dictionary with the parameter value:\n\n```python\nparameter_value = {\"trust_radius_max\": \"0.8D0\"}\n```",
            "The parameter \"remove_rigid_rot\" is relevant to the project as it is used in the simulation of the dynamics and/or the thermodynamics of an isolated system. This project involves a single atom of Molybdenum (Mo) in a cubic supercell, which can be considered an isolated system. The parameter is used to remove the spurious interaction with the periodic images, allowing for the use of smaller supercells.\n\nHowever, the project does not specify the type of calculation as 'relax', 'md', 'vc-relax', or 'vc-md', which are the conditions under which this parameter is relevant. The project only specifies 'calculation = 'scf'', which is a single-step calculation and does not involve dynamics or thermodynamics. Therefore, the parameter \"remove_rigid_rot\" is not relevant to this project.\n\n```python\nparameter_value = {'remove_rigid_rot': None}\n```",
            "The parameter \"nsolv\" is related to the RISM (Reference Interaction Site Model) calculations in Quantum ESPRESSO. RISM is a method used for modeling solvation effects in quantum chemistry calculations. However, in the provided project, there is no indication of RISM calculations being performed. The project is a single atom (Mo) calculation with no solvents mentioned. Therefore, the parameter \"nsolv\" is not relevant to this project.\n\nHere is the python dictionary as per the instructions:\n\n```python\nparameter_value = {\"nsolv\": None}\n```",
            "The parameter \"exxdiv_treatment\" is relevant to the project if the project involves exact exchange calculations or hybrid functionals with exact exchange. However, based on the provided project and tags, there is no indication that the project involves exact exchange calculations or hybrid functionals with exact exchange. Therefore, the parameter \"exxdiv_treatment\" is not relevant to the project.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"exxdiv_treatment\": None}\n```\n\nFor reference, if the project did involve exact exchange calculations or hybrid functionals with exact exchange, the appropriate value for the parameter \"exxdiv_treatment\" would depend on the type of supercell used in the project. For cubic and quasi-cubic supercells, the appropriate values would be \"gygi-baldereschi\" or \"vcut_spherical\". For strongly anisotropic supercells, the appropriate value would be \"vcut_ws\". The value \"none\" sets the Coulomb potential at G,q=0 to 0.0 and is required for GAU-PBE.",
            "Based on the provided project and conditions, the parameter \"fcp_nraise\" is not relevant to the project. The project is a single-step calculation, specifically a ground state calculation using Quantum ESPRESSO. The \"fcp_nraise\" parameter is only relevant for Fictitious Charge Particle (FCP) calculations, which are typically used in molecular dynamics simulations or relaxation calculations. Since the project does not involve FCP calculations, the \"fcp_nraise\" parameter is not applicable.\n\nTherefore, the value for the \"fcp_nraise\" parameter in the context of this project is None.\n\nHere is the Python dictionary as requested:\n\n```python\nparameter_value = {\"fcp_nraise\": None}\n```",
            "Based on the provided project and the assigned tags, the parameter \"calculation\" is relevant to the project. The project is a Quantum ESPRESSO input file for a single atom (Mo) calculation with a cubic supercell and a uniform k-point grid. The tags indicate that the calculation involves pseudopotentials, a plane-wave basis set, and a smearing method for occupations. The ion dynamics is set to 'bfgs', which is a method for structural relaxation.\n\nThe parameter \"calculation\" determines the type of calculation to be performed. In this case, the project involves a structural relaxation calculation, as indicated by the ion dynamics setting and the absence of any molecular dynamics (MD) or variable-cell (vc) settings. Therefore, the appropriate value for the parameter \"calculation\" is 'relax'.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"calculation\": \"relax\"}\n```\n\nThis value is consistent with the rules provided, as the calculation type is relevant to the project and the tags, and it is a single-step calculation type.",
            "Based on the provided project and conditions, the parameter \"fcp_mu\" is not relevant to the project. The project is a single atom calculation using Quantum ESPRESSO with a norm-conserving pseudopotential and a plane-wave basis set. The calculation type is 'scf', which is a single-step calculation for finding the ground state energy of the system. The parameter \"fcp_mu\" is only relevant for FCP calculations under constant chemical potential conditions, which is not the case for this project. Therefore, the appropriate value for the parameter \"fcp_mu\" is None.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"fcp_mu\": None}\n```\n\nIt is important to note that the parameter \"fcp_mu\" is used in FCP calculations, which are not relevant to this project. FCP calculations are used to simulate systems under constant chemical potential conditions, which is not the case for this project. The project is a single atom calculation using Quantum ESPRESSO with a norm-conserving pseudopotential and a plane-wave basis set. The calculation type is 'scf', which is a single-step calculation for finding the ground state energy of the system. Therefore, the parameter \"fcp_mu\" is not relevant to this project.",
            "Based on the provided project and conditions, the parameter \"degauss_cond\" is not relevant to the project. The project does not indicate a two-chemical potential calculation, which is the condition under which the \"degauss_cond\" parameter is used. Therefore, the value of \"degauss_cond\" should be set to None.\n\n```python\nparameter_value = {'degauss_cond': None}\n```\n\nThe \"degauss_cond\" parameter is used in Quantum ESPRESSO to set the value of the gaussian spreading for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation. This parameter is only relevant when the \"twochem\" input variable is set to \".True.\" in the &SYSTEM namelist. In the provided project, there is no indication of a two-chemical potential calculation, so the \"degauss_cond\" parameter is not relevant.",
            "The parameter \"fcp_delta_t\" is related to the Fictitious Charge Particle (FCP) temperature control in Quantum ESPRESSO. It is used for controlling the temperature during relax and md calculations when lfcp = .TRUE..\n\nIn the provided project, the calculation type is not explicitly mentioned. However, based on the given conditions, we can infer that the calculation type is 'scf' since the tag \"calculation = 'scf'\" is present. Therefore, the parameter \"fcp_delta_t\" is not relevant to this project as it is only applicable for 'relax' and 'md' calculations.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"fcp_delta_t\": None}\n```",
            "Based on the provided project and conditions, the parameter \"delta_t\" is not directly relevant to the project. The project is a single-step calculation, specifically a 'scf' calculation, which does not involve molecular dynamics simulations or temperature modifications. Therefore, the parameter \"delta_t\" is not applicable in this context.\n\nHowever, if the project were to involve a multistep calculation such as 'relax', 'vc-relax', 'md', or 'vc-md', then the parameter \"delta_t\" would be relevant. It controls the temperature modification in molecular dynamics simulations depending on the ion_temperature setting.\n\nGiven that the parameter is not relevant to the project, the appropriate value for the parameter is None.\n\nHere is the python dictionary as requested:\n\n```python\nparameter_value = {\"delta_t\": None}\n```",
            "The parameter in question is \"CONSTRAINTS\", which is used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\n\nIn the provided project, there is no indication of a molecular dynamics simulation or a constrained optimization process. The calculation type is 'scf', which stands for self-consistent field, a type of calculation used to find the ground state electronic structure of a system. This is a single-step calculation, not a multistep one like 'relax' or 'md' where the CONSTRAINTS parameter would be relevant.\n\nTherefore, the CONSTRAINTS parameter is not relevant to this project.\n\nHere is the Python dictionary as per the instructions:\n\n```python\nparameter_value = {'CONSTRAINTS': None}\n```",
            "Based on the provided project and conditions, the parameter \"q2sigma\" is not relevant to the project. The project is a single atom calculation using Quantum ESPRESSO with a plane-wave basis set and norm-conserving pseudopotentials. The parameter \"q2sigma\" is used in variable-cell molecular dynamics (vc-md) or stress calculations, which are not present in the given project. Therefore, the value of the parameter \"q2sigma\" should be set to None.\n\nHere is the python dictionary:\n```python\nparameter_value = {\"q2sigma\": None}\n```",
            "The parameter \"nosym_evc\" is relevant to the project as it pertains to the symmetry of the k-points used in the calculation. The project uses a Monkhorst-Pack grid for the k-points, which is one of the possible usage conditions for the \"nosym_evc\" parameter.\n\nThe \"nosym_evc\" parameter, when set to True, forces the k-points to have the full symmetry of the Bravais lattice, even if the original grid does not have this property. This can be useful for ensuring that the k-points cover the entire Brillouin zone, which is one of the usage conditions for this parameter.\n\nHowever, in the provided project, there is no indication that the symmetry of the k-points needs to be modified. The Monkhorst-Pack grid is already specified, and there is no mention of needing to cover the full Brillouin zone. Therefore, the default value of False for the \"nosym_evc\" parameter is appropriate for this project.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"nosym_evc\": \"False\"}\n```",
            "The parameter \"smearing\" is relevant to the project as it controls the type of smearing method to be used in the Quantum ESPRESSO calculation. Smearing is a technique used to improve the convergence of electronic structure calculations, especially for metallic systems and systems with partial occupations.\n\nIn the provided project, there are no explicit tags indicating the type of system being studied. However, the presence of a single Mo atom in the supercell suggests that this could be a metallic system, as Molybdenum is a transition metal. Therefore, the use of a smearing method would be appropriate.\n\nGiven the possible usage conditions and the parameter value conditions, and considering the default value is \"gaussian\", we can select the appropriate value for the smearing parameter. However, without specific information about the system or the desired level of precision, it's difficult to choose between the different smearing methods. Therefore, we will stick with the default value, \"gaussian\".\n\nHere is the Python dictionary with the parameter value:\n\n```python\nparameter_value = {\"smearing\": \"gaussian\"}\n```",
            "The parameter \"ion_dynamics\" is relevant to the project as it specifies the type of ionic dynamics used in the calculation. In the provided project, the calculation type is not explicitly mentioned, but it can be inferred that it is a single-step calculation since the tags include \"Pseudopotential calculations\", \"plane-wave basis set\", \"Ground state calculations\", \"SCF cycle\", and \"Total energy calculations\". However, the parameter \"ion_dynamics\" is only relevant for multistep calculations such as 'relax', 'vc-relax', 'md', and 'vc-md'. Therefore, in this case, the parameter \"ion_dynamics\" is not relevant to the project.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"ion_dynamics\": None}\n```",
            "The parameter \"ntyp\" is relevant to the project as it represents the number of types of atoms in the unit cell. In the provided project, there is only one type of atom, Mo, which means the value of \"ntyp\" should be 1.\n\nHere is the python dictionary with the parameter's name as the key and the value as the value of the parameter:\n\n```python\nparameter_value = {\"ntyp\": \"1\"}\n```",
            "The parameter \"wfc_extrapolation\" is relevant to the project as it is used to extrapolate the wavefunctions from preceding ionic steps in Quantum ESPRESSO calculations. This parameter is particularly relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md', which are multistep calculations involving ionic dynamics.\n\nIn the provided project, the calculation type is not explicitly stated, but based on the given conditions, it can be inferred that the calculation type is 'relax' or 'vc-relax' due to the presence of the 'ion_dynamics' tag with the value 'bfgs'. This indicates that the calculation involves ionic dynamics and structural relaxation.\n\nTherefore, the parameter \"wfc_extrapolation\" is relevant to the project. Given the options for the parameter value, the most appropriate value for this project would be \"first_order\" or \"second_order\" to extrapolate the wave-functions with a first-order or second-order formula, respectively. However, without additional information, it is not possible to definitively choose between these two options.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"wfc_extrapolation\": \"first_order or second_order\"}\n```\n\nPlease note that the final choice between \"first_order\" and \"second_order\" should be made based on further information or specific requirements of the project.",
            "Based on the provided project and the assigned tags, the parameter \"lorbm\" is not relevant to the project. The project is a single atom calculation using a norm-conserving pseudopotential with a single spin channel (nspin = 1) and a single step calculation (calculation = 'scf'). The \"lorbm\" parameter is used for orbital magnetization calculations, which require a non-collinear calculation (nspin = 2) and a non-self-consistent field calculation (calculation = 'nscf'). Therefore, the \"lorbm\" parameter is not applicable to this project.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"lorbm\": None}\n```\n\nFor reference, the \"lorbm\" parameter is used to perform orbital magnetization calculations in Quantum ESPRESSO. This parameter is only applicable for non-self-consistent field calculations (calculation = 'nscf') and requires a uniform grid of k points. The calculation must also use norm-conserving pseudopotentials. If the \"lelfield\" parameter is set to true, only Kubo terms are computed. This parameter is not relevant for the provided project as it is a single atom calculation with a single spin channel and a self-consistent field calculation.",
            "Based on the provided project and conditions, the parameter \"relaxz\" is relevant to the project. The project is a Quantum ESPRESSO input file for a single atom (Mo) calculation with a cubic supercell and a uniform k-point grid. The conditions indicate that the calculation type is 'relax', which means that the system will be relaxed towards its ground state. The \"relaxz\" parameter allows the relaxation of the system towards a charged plate, which is not relevant in this case as there is no charged plate or dipole correction mentioned in the project. However, since the calculation type is 'relax', the \"relaxz\" parameter is still relevant.\n\nAccording to the Quantum ESPRESSO documentation, the \"relaxz\" parameter is used only if the \"gate\" parameter is set to .TRUE. or if the \"dipfield\" parameter is set to .TRUE. In this case, neither of these parameters are mentioned in the project or conditions. Therefore, the default value of \"relaxz\" should be used, which is False.\n\nHere is the python dictionary with the parameter value:\n\n```python\nparameter_value = {\"relaxz\": \"False\"}\n```",
            "The parameter \"conv_thr\" is relevant to the project as it is used in self-consistent calculations ('scf') for convergence threshold. The project is a Quantum ESPRESSO input file for a single atom (Mo) calculation using a plane-wave basis set and norm-conserving pseudopotentials. The calculation type is 'scf', which means it is a self-consistent field calculation.\n\nThe \"conv_thr\" parameter is used to set the convergence threshold for self-consistency, estimated energy error < conv_thr. It is an extensive parameter, like the total energy. The default value for \"conv_thr\" is \"1.D-6\".\n\nSince the project is a self-consistent calculation, the \"conv_thr\" parameter is relevant and the default value of \"1.D-6\" can be used.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"conv_thr\": \"1.D-6\"}\n```",
            "The parameter \"tefield\" in Quantum ESPRESSO is used to add a saw-like potential simulating an electric field to the bare ionic potential. This parameter is relevant for ground state calculations and relaxation calculations, as indicated by the Possible_Usage_Conditions.\n\nIn the provided project, the calculation type is 'scf', which stands for self-consistent field calculation. This is a type of ground state calculation. However, there is no indication in the project or the tags that an electric field needs to be simulated. Therefore, the parameter \"tefield\" is not relevant to this project.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"tefield\": None}\n```\n\nThis means that the parameter \"tefield\" is not used in this project and its value is set to None.",
            "Based on the provided project and conditions, the parameter \"noncolin\" is not relevant to the project. The project is a single atom calculation using a norm-conserving pseudopotential with a plane-wave basis set and a cubic supercell. The calculation type is 'scf', which is a single-step calculation for finding the ground state energy of the system. The parameter \"noncolin\" is used for non-collinear magnetic calculations, which are not relevant to this project as there is no mention of magnetic calculations or spin-orbit coupling.\n\nTherefore, the appropriate value for the parameter \"noncolin\" is None.\n\nHere is the python dictionary:\n```python\nparameter_value = {\"noncolin\": None}\n```",
            "The parameter \"forc_conv_thr\" is relevant to the project as it is used in relaxation calculations, which is indicated by the tag \"Relaxation calculations\". This parameter sets the convergence threshold on forces for ionic minimization. In the context of this project, it would determine when the relaxation of the Mo atom in the cubic supercell has converged.\n\nThe value of \"forc_conv_thr\" should be chosen based on the desired level of precision and the computational resources available. A smaller value will result in a more precise calculation, but will also require more computational time. The default value of \"1.0D-3\" is a reasonable starting point for many calculations.\n\nGiven the information provided and the rules, the value of \"forc_conv_thr\" should be set to the default value of \"1.0D-3\".\n\nHere is the Python dictionary:\n\n```python\nparameter_value = {\"forc_conv_thr\": \"1.0D-3\"}\n```",
            "The parameter \"upscale\" is relevant to the project as it is used in structural optimization calculations, specifically when the ion_dynamics is set to 'bfgs'. In the provided project, the ion_dynamics is set to 'bfgs', and the calculation type is not explicitly mentioned, but it can be inferred that it is a structural optimization calculation since the ion_dynamics is specified.\n\nThe \"upscale\" parameter is used to set the maximum reduction factor for 'conv_thr' during structural optimization. 'conv_thr' is the convergence threshold for the total energy during a self-consistent field (SCF) calculation. The 'upscale' parameter allows for a larger convergence threshold during the initial stages of the structural optimization, which can help to speed up the calculation. As the optimization progresses, the convergence threshold is gradually reduced to its original value.\n\nSince the parameter is relevant to the project, we can select the appropriate value from the given options. The default value for 'upscale' is \"100.D0\". However, the specific value to use depends on the desired balance between computational speed and accuracy. A larger value for 'upscale' will result in faster calculations but may lead to less accurate results, while a smaller value will result in more accurate results but slower calculations.\n\nBased on the provided information, the appropriate value for the 'upscale' parameter is \"100.D0\".\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"upscale\": \"100.D0\"}\n```",
            "Based on the provided project and conditions, the parameter \"celldm\" is relevant to the project. The parameter \"celldm\" is used to specify the crystallographic constants of the system, and it is related to the \"ibrav\" parameter. In this case, the \"ibrav\" parameter is set to 0, which means that the system is a cubic supercell with only one lattice parameter \"a\". Therefore, only celldm(1) is used, and it represents the lattice parameter \"a\" in Bohr.\n\nHowever, the project does not provide the value for celldm(1), and it is not possible to determine the value from the given conditions. Therefore, the value for celldm(1) cannot be selected from the provided list.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"celldm(1)\": None}\n```\n\nIt is important to note that the value of celldm(1) should be determined based on the actual lattice parameter of the system, which can be obtained from experimental data or theoretical calculations. The value of celldm(1) can significantly affect the results of the quantum chemistry calculations, so it is crucial to use an accurate value.",
            "The parameter \"w_1\" is relevant to the project as it is used in line search based on the Wolfe conditions during relaxation calculations, and the project involves a relaxation calculation as indicated by the \"calculation = 'scf'\" tag. The \"ion_dynamics = 'bfgs'\" tag also indicates that the Broyden-Fletcher-Goldfarb-Shanno (BFGS) algorithm is used for ionic relaxation, which is a type of optimization algorithm that uses the Wolfe conditions.\n\nThe value of \"w_1\" is used to control the step size during the line search in the BFGS algorithm. The Wolfe conditions are used to ensure that the step size is not too large or too small, which can lead to instability or slow convergence, respectively. The value of \"w_1\" is typically set to a small positive value, such as 0.01, to ensure that the step size is not too large.\n\nTherefore, the appropriate value for the parameter \"w_1\" in this project is \"0.01D0\".\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"w_1\": \"0.01D0\"}\n```",
            "The parameter \"trust_radius_min\" is relevant to the project as the project involves a structural relaxation calculation, which is indicated by the \"calculation = 'scf'\" tag. The \"trust_radius_min\" parameter is used to set the minimum ionic displacement in the structural relaxation, and it is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' and the ion dynamics is set to 'bfgs'. In this case, the ion dynamics is set to 'bfgs', which means that the \"trust_radius_min\" parameter is relevant to the project.\n\nBased on the provided information, the appropriate value for the \"trust_radius_min\" parameter is \"1.D-3\". This value is the default value for the parameter and is used when no other value is specified.\n\nTherefore, the appropriate value for the \"trust_radius_min\" parameter is:\n\n```python\nparameter_value = {\"trust_radius_min\": \"1.D-3\"}\n```\n\nIt is important to note that the value of the \"trust_radius_min\" parameter can affect the convergence of the structural relaxation calculation. A smaller value for the \"trust_radius_min\" parameter can result in a more accurate calculation, but it can also increase the computational cost. On the other hand, a larger value for the \"trust_radius_min\" parameter can result in a faster calculation, but it can also decrease the accuracy of the calculation. Therefore, it is important to choose an appropriate value for the \"trust_radius_min\" parameter based on the specific requirements of the project.\n\nIn summary, the \"trust_radius_min\" parameter is relevant to the project and the appropriate value for the parameter is \"1.D-3\". This value is the default value for the parameter and is used when no other value is specified. The value of the \"trust_radius_min\" parameter can affect the convergence of the structural relaxation calculation, and it is important to choose an appropriate value based on the specific requirements of the project.",
            "Based on the provided project and conditions, the parameter \"one_atom_occupations\" is relevant to the project. This parameter is used for isolated atoms (nat=1) together with occupations='from_input'. In this case, the project involves a single atom (Mo) and the occupations are not explicitly defined in the input file, which means they are likely set to the default value. Therefore, the \"one_atom_occupations\" parameter could be used to order the wavefunctions as atomic starting wavefunctions, independently from their eigenvalue.\n\nHowever, it's important to note that the use of this parameter is not explicitly mentioned in the provided conditions. The conditions only mention the use of nonlocal pseudopotentials, a plane-wave basis set, and a uniform k-point grid, among other things. The parameter \"one_atom_occupations\" is not directly related to these conditions.\n\nGiven the conditions and the project, the appropriate value for the \"one_atom_occupations\" parameter is not explicitly determined. However, since the project involves a single atom and the occupations are not explicitly defined, it might be beneficial to set this parameter to True to order the wavefunctions as atomic starting wavefunctions.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"one_atom_occupations\": \"True\"}\n```\n\nThis dictionary indicates that the value of the \"one_atom_occupations\" parameter is set to True. However, this is a recommendation based on the provided project and conditions, and the actual value of this parameter should be determined based on the specific requirements and goals of the calculation.",
            "The parameter \"etot_conv_thr\" is relevant to the project as it is used in total energy calculations and relaxation calculations. In this project, the type of calculation is 'scf' (single-step calculation), which is a ground state calculation. The parameter \"etot_conv_thr\" is used to set the convergence threshold on total energy (a.u) for ionic minimization. The convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps.\n\nGiven the provided project and tags, the appropriate value for the parameter \"etot_conv_thr\" is \"1.0D-4\".\n\nHere is the python dictionary:\n```python\nparameter_value = {\"etot_conv_thr\": \"1.0D-4\"}\n```",
            "The parameter \"efield_cart\" is used to specify a finite electric field in cartesian axis in Quantum ESPRESSO calculations. However, it is only used if the \"lelfield\" parameter is set to .TRUE. and if the k-points are automatic.\n\nIn the provided project, there is no indication that a finite electric field is required for the calculation. The project is a single atom calculation of Mo with a cubic supercell and a uniform k-point grid. The calculation type is not explicitly stated, but it can be inferred from the input that it is a ground state calculation (\"calculation = 'scf'\").\n\nTherefore, the parameter \"efield_cart\" is not relevant to this project and its value should be set to None.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"efield_cart\": None}\n```",
            "The parameter \"mixing_mode\" is relevant to the project as it controls the type of charge density mixing method used in the Quantum ESPRESSO calculation. The charge density mixing method is used to accelerate the convergence of the self-consistent field (SCF) cycle in the calculation.\n\nIn this project, the calculation type is 'scf', which is a single-step calculation. The 'scf' calculation is used to calculate the ground state electronic structure of the system. The charge density mixing method is important in this calculation to ensure that the SCF cycle converges quickly and accurately.\n\nBased on the possible usage conditions for the \"mixing_mode\" parameter, the appropriate value for this project is \"plain\". This value corresponds to the charge density Broyden mixing method, which is a commonly used mixing method for SCF calculations. The \"plain\" value is suitable for both homogeneous and inhomogeneous systems, and it does not require any additional information beyond the provided project and tags.\n\nTherefore, the appropriate value for the \"mixing_mode\" parameter for this project is \"plain\".\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"mixing_mode\": \"plain\"}\n```",
            "The parameter \"fire_f_dec\" is relevant to the project as it is used in the Quantum ESPRESSO input file when the ion_dynamics is set to 'fire'. This parameter is a factor for decreasing the time step 'dt' during the relaxation or molecular dynamics calculations.\n\nIn the provided project, the ion_dynamics is not explicitly set, but the possible usage conditions for the \"fire_f_dec\" parameter include ion_dynamics = 'fire'. Therefore, if the ion_dynamics is set to 'fire' in the project, the \"fire_f_dec\" parameter would be relevant. However, since the ion_dynamics is not explicitly set in the project, we cannot definitively say that the \"fire_f_dec\" parameter is relevant.\n\nGiven the conditions, the appropriate value for the \"fire_f_dec\" parameter would be \"0.5D0\" if it is relevant to the project.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"fire_f_dec\": \"0.5D0\"}\n```\n\nHowever, since the ion_dynamics is not explicitly set in the project, the \"fire_f_dec\" parameter might not be relevant. Therefore, the value of the \"fire_f_dec\" parameter should be set to None.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"fire_f_dec\": None}\n```",
            "Based on the provided project and conditions, the parameter \"qcutz\" is not relevant to the project. The project is a single atom calculation using Quantum ESPRESSO with a norm-conserving pseudopotential for Molybdenum (Mo) and a plane-wave basis set. The calculation type is 'scf' (self-consistent field), which is a single-step calculation used to find the ground state electronic structure of the system. The parameter \"qcutz\" is only relevant for variable-cell molecular dynamics (vc-md) calculations or stress calculations, which are not being performed in this project. Therefore, the value of \"qcutz\" is not needed for this project.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"qcutz\": None}\n```",
            "The parameter \"scf_must_converge\" is relevant to the project as it is a part of the &ELECTRONS namelist in Quantum ESPRESSO and the project involves a Quantum ESPRESSO input file. This parameter determines whether the molecular dynamics or ionic relaxation should stop when 'electron_maxstep' is reached.\n\nIn the context of this project, the calculation type is 'scf' as indicated by the line \"calculation = 'scf'\" in the project. This means that the project involves a single-step calculation, specifically a self-consistent field (SCF) calculation. The 'scf_must_converge' parameter is relevant to this type of calculation as it determines whether the SCF cycle should stop if it does not converge within the specified number of steps ('electron_maxstep').\n\nGiven that the project involves a single-atom isolated system and the calculation type is 'scf', it is important to ensure that the SCF cycle converges to obtain accurate results. Therefore, the recommended value for the 'scf_must_converge' parameter is \".TRUE.\".\n\nHere is the Python dictionary with the parameter name as the key and the recommended value as the value:\n\n```python\nparameter_value = {\"scf_must_converge\": \".TRUE.\"}\n```",
            "The parameter \"mixing_beta\" is relevant to the project as it is used in self-consistent field (SCF) calculations, which is the type of calculation specified in the project (calculation = 'scf'). The parameter controls the mixing factor for the self-consistency cycle, which is a crucial aspect of SCF calculations.\n\nThe mixing factor determines how much of the new charge density is mixed with the old charge density in each iteration of the SCF cycle. A value of 0.7D0, as given in the default values, is a common choice for the mixing factor. However, the optimal value can depend on the specific system and calculation parameters.\n\nGiven that the project involves a SCF calculation and the parameter \"mixing_beta\" is relevant to SCF calculations, the appropriate value for the parameter is the default value of \"0.7D0\".\n\nHere is the Python dictionary:\n\n```python\nparameter_value = {\"mixing_beta\": \"0.7D0\"}\n```",
            "Based on the provided project and conditions, the parameter \"occupations\" is relevant to the project. The \"occupations\" parameter controls how electronic occupations are determined in Quantum ESPRESSO calculations. In this case, the project involves a single atom of Molybdenum (Mo) in a cubic supercell with a uniform k-point grid, which suggests that the system is metallic. Therefore, the appropriate value for the \"occupations\" parameter would be \"smearing\".\n\nSmearing is a method used to handle the occupation of electronic states in metallic systems, where the Fermi level lies within a band. It introduces a small amount of smearing or broadening to the energy levels, which helps to improve the convergence of the self-consistent field (SCF) calculations. The smearing method requires additional parameters, such as \"smearing\" and \"degauss\", which are not explicitly provided in the project or conditions. However, these parameters can be set to reasonable default values if not provided.\n\nTherefore, the appropriate value for the \"occupations\" parameter in this project is \"smearing\".\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"occupations\": \"smearing\"}\n```",
            "The parameter \"startingwfc\" is relevant to the project as it specifies how the initial wavefunctions are generated for the calculation. The project is a Quantum ESPRESSO calculation with a single atom of Molybdenum (Mo) in a cubic supercell, using a plane-wave basis set and norm-conserving pseudopotentials. The calculation type is 'scf', which is a single-step calculation for finding the self-consistent field.\n\nGiven the project and the possible usage conditions for the \"startingwfc\" parameter, the appropriate value for this parameter would be \"atomic+random\". This value starts from a superposition of atomic orbitals and adds a superimposed \"randomization\" of atomic orbitals, which prevents the \"loss\" of states mentioned in the description. This option is suitable for high-symmetry systems and provides a good starting point for the scf calculation.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"startingwfc\": \"atomic+random\"}\n```",
            "The parameter \"tot_magnetization\" is relevant to the project if the system is magnetic and the spin polarization is considered in the calculation. In this case, the system contains a single Mo atom, which is a transition metal and can exhibit magnetic properties. However, the provided project does not specify any magnetic properties or spin polarization. The calculation type is 'scf', which is a single-step calculation for ground state properties. The project also does not include any tags related to magnetic systems or spin polarization. Therefore, the \"tot_magnetization\" parameter is not relevant to this project.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"tot_magnetization\": None}\n```",
            "The parameter \"lfcp\" is relevant to the project if the calculation type is 'relax' or 'md' and the system is an isolated (non-periodic) system with ESM method. However, in the provided project, the calculation type is 'scf' which is a singlestep calculation and not relevant to the \"lfcp\" parameter. Therefore, the \"lfcp\" parameter is not relevant to the project.\n\n```python\nparameter_value = {'lfcp': None}\n```",
            "Based on the provided project and conditions, the parameter \"origin_choice\" is not relevant to the project. This parameter is used only for symmetry-defined crystal structures that in the International Tables for Crystallography (ITA) allow the use of two different origins. However, the project provided does not specify a symmetry-defined crystal structure, but rather uses a cubic supercell with a specific set of CELL_PARAMETERS. Therefore, the parameter \"origin_choice\" is not applicable in this case.\n\nHere is the Python dictionary as requested:\n\n```python\nparameter_value = {\"origin_choice\": None}\n```",
            "Based on the provided project and conditions, the parameter \"assume_isolated\" is relevant to the project. The project involves a single atom of Molybdenum (Mo) in a 3D supercell, which is an isolated system. The \"assume_isolated\" parameter is used to perform calculations assuming the system to be isolated, such as a molecule or a cluster in a 3D supercell.\n\nHowever, the project does not provide any information about the type of calculation being performed. The type of calculation is important in determining the appropriate value for the \"assume_isolated\" parameter. If the calculation type is 'vc-relax' or 'relax', then the \"assume_isolated\" parameter would be relevant.\n\nGiven the information provided, it is not possible to determine the exact value for the \"assume_isolated\" parameter. However, based on the conditions, the most appropriate value would be \"none\" for a regular periodic calculation without any correction.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"assume_isolated\": \"none\"}\n```\n\nThis assumes that the calculation type is 'vc-relax' or 'relax'. If the calculation type is different, the relevance and value of the \"assume_isolated\" parameter may change.",
            "The parameter \"bfgs_ndim\" is relevant to the project as it is used in the BFGS algorithm for ionic relaxation, which is a type of multistep calculation. The BFGS algorithm is a quasi-Newton method used to minimize the total energy of a system by adjusting the atomic positions. The \"bfgs_ndim\" parameter determines the number of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm.\n\nIn the provided project, the calculation type is not explicitly stated, but it can be inferred from the presence of the \"ibrav\" tag, which is used to define the crystal structure, and the \"ATOMIC_POSITIONS\" tag, which is used to specify the atomic positions. These tags are typically used in relaxation calculations, which are a type of multistep calculation. Furthermore, the \"ion_dynamics\" tag is set to \"bfgs\", which indicates that the BFGS algorithm is being used for ionic relaxation.\n\nTherefore, the \"bfgs_ndim\" parameter is relevant to the project. The default value for \"bfgs_ndim\" is 1, which corresponds to the standard quasi-Newton BFGS method.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"bfgs_ndim\": \"1\"}\n```",
            "The parameter \"trust_radius_ini\" is relevant to the project as it is used in the structural relaxation calculations, which is indicated by the \"calculation = 'scf'\" tag in the project. This parameter determines the initial ionic displacement in the structural relaxation, which is important for the convergence and accuracy of the relaxation calculations.\n\nThe \"ion_dynamics = 'bfgs'\" tag in the project also indicates that the Broyden-Fletcher-Goldfarb-Shanno (BFGS) algorithm is used for the ionic relaxation, which is a quasi-Newton method that uses the gradient of the energy with respect to the ionic positions to determine the direction of the ionic displacement. The \"trust_radius_ini\" parameter is used in conjunction with the BFGS algorithm to control the size of the ionic displacement in each iteration of the relaxation.\n\nBased on the provided information, the appropriate value for the \"trust_radius_ini\" parameter is \"0.5D0\", which is the default value. This value is a good starting point for most relaxation calculations and can be adjusted as needed to improve convergence and accuracy.\n\nTherefore, the appropriate value for the \"trust_radius_ini\" parameter is:\n\n```python\nparameter_value = {\"trust_radius_ini\": \"0.5D0\"}\n```",
            "The parameter \"nr1s, nr2s, nr3s\" is related to the three-dimensional mesh for wavefunction FFT and for the smooth part of charge density in Quantum ESPRESSO calculations. This parameter is relevant when using Ultrasoft pseudopotentials or PAW sets, and it is used to define the smooth FFT grid.\n\nIn the provided project, the pseudopotential used is a norm-conserving pseudopotential (Mo_ONCV_PBE-1.0.oncvpsp.upf), not an Ultrasoft pseudopotential or PAW set. Therefore, the parameter \"nr1s, nr2s, nr3s\" is not relevant to this project.\n\nSince the parameter is not relevant, the appropriate value is None.\n\nHere is the Python dictionary:\n\n```python\nparameter_value = {\"nr1s, nr2s, nr3s\": None}\n```",
            "The parameter \"fcp_temperature\" is related to the Fictitious Charge Particle (FCP) temperature control in Quantum ESPRESSO. This parameter is relevant only when the calculation type is 'relax' or 'md' and the lfcp flag is set to .TRUE.\n\nIn the provided project, the calculation type is 'scf', which stands for self-consistent field calculation. This is a single-step calculation used to find the ground state electronic density of a system. Since the calculation type is 'scf', the parameter \"fcp_temperature\" is not relevant to this project.\n\nTherefore, the value of the parameter \"fcp_temperature\" for this project is None.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"fcp_temperature\": None}\n```",
            "The parameter \"fire_f_inc\" is relevant to the project as it is used in the FIRE (Fast Inertial Relaxation Engine) algorithm for ionic dynamics, which is a type of molecular dynamics algorithm. This algorithm is used for structural relaxation and molecular dynamics simulations. In the provided project, the ion_dynamics is set to 'bfgs', which is a different algorithm. However, if the ion_dynamics was set to 'fire', then the \"fire_f_inc\" parameter would be relevant.\n\nThe \"fire_f_inc\" parameter is a factor for increasing the time step 'dt' in the FIRE algorithm. It is used to control the convergence of the algorithm. A larger value of \"fire_f_inc\" will increase the time step more aggressively, which can lead to faster convergence but also potentially less stability. A smaller value of \"fire_f_inc\" will increase the time step more conservatively, which can lead to slower convergence but potentially more stability.\n\nHowever, since the ion_dynamics is set to 'bfgs' in the provided project, the \"fire_f_inc\" parameter is not relevant. Therefore, the value of the \"fire_f_inc\" parameter should be set to None.\n\n```python\nparameter_value = {\"fire_f_inc\": None}\n```",
            "The parameter \"degauss\" is relevant to the project as it is used for Brillouin-zone integration in metallic systems, and the project involves a single atom of Molybdenum (Mo), which is a transition metal and can be considered a metallic system. The parameter \"degauss\" controls the Gaussian spreading for Brillouin-zone integration in metals, which is important for obtaining accurate results in quantum chemistry calculations.\n\nIn this case, since the project involves a metallic system and the calculation type is 'scf' (single-step calculation), the parameter \"degauss\" is relevant. However, the project does not provide any specific value for this parameter, and the default value is \"0.D0\".\n\nTherefore, the appropriate value for the parameter \"degauss\" in this project is the default value \"0.D0\".\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"degauss\": \"0.D0\"}\n```",
            "The parameter \"nspin\" is relevant to the project as it controls the spin polarization type in calculations. In this project, we are dealing with a single Mo atom, which is a transition metal and can exhibit magnetic properties. However, the project does not explicitly mention any magnetic calculations or spin-polarized calculations. Therefore, based on the provided information, we can assume that a non-polarized calculation is appropriate.\n\nThe value of \"nspin\" is 1 for non-polarized calculations, 2 for spin-polarized calculations (LSDA, magnetization along z axis), and 4 for spin-polarized calculations (noncollinear, magnetization in generic direction). Since the project does not indicate any spin-polarized calculations, we can set \"nspin\" to 1.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"nspin\": \"1\"}\n```",
            "Based on the provided project and conditions, the parameter \"space_group\" is not relevant to the project. The project does not specify a symmetry-defined crystal structure, which is a requirement for using the \"space_group\" parameter. Instead, the project uses a user-defined crystal structure with the \"ibrav\" parameter set to 0, indicating a custom structure. Therefore, the \"space_group\" parameter is not applicable in this case.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"space_group\": None}\n```",
            "The parameter \"conv_thr_init\" is relevant to the project as it is used in the &ELECTRONS namelist for Quantum ESPRESSO calculations. This parameter sets the convergence threshold for the first SCF cycle when adaptive_thr is set to .TRUE. In the provided project, the calculation type is 'scf', which means that the parameter is indeed relevant.\n\nHowever, the provided project does not specify the value for adaptive_thr, which is necessary to determine the appropriate value for conv_thr_init. If adaptive_thr is set to .TRUE., then the default value for conv_thr_init is 1.D-3. If adaptive_thr is not set or is set to .FALSE., then conv_thr_init is not used.\n\nGiven the information provided, we cannot definitively determine the appropriate value for conv_thr_init. However, assuming that adaptive_thr is set to .TRUE., the appropriate value for conv_thr_init would be 1.D-3.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"conv_thr_init\": \"1.D-3\"}\n```\n\nPlease note that this value should be used with caution, as it is based on the assumption that adaptive_thr is set to .TRUE. If this is not the case, then conv_thr_init should not be used.\n\nSources:\n- Quantum ESPRESSO documentation: <http://www.quantum-espresso.org/Doc/INPUT_PW.html>\n- Quantum ESPRESSO tutorial: <http://www.quantum-espresso.org/wp-content/uploads/QE-Tutorials/QE-Tutorials-2019-03-18.pdf>",
            "The parameter \"w_2\" is relevant to the project as it is used in line search based on the Wolfe conditions during relaxation calculations, and the project involves a relaxation calculation as indicated by the \"calculation = 'scf'\" tag. The \"ion_dynamics = 'bfgs'\" tag also indicates that the Broyden-Fletcher-Goldfarb-Shanno (BFGS) algorithm is used for ionic relaxation, which is consistent with the usage conditions for the \"w_2\" parameter.\n\nThe \"w_2\" parameter is a factor used in the Wolfe conditions for line search during relaxation calculations. The Wolfe conditions are used to determine the step size in the line search, which is a crucial part of the BFGS algorithm. The \"w_2\" parameter controls the sufficient decrease condition, which ensures that the step size is not too large and that the energy decreases sufficiently.\n\nGiven the relevance of the \"w_2\" parameter to the project, the appropriate value for the parameter is the default value of \"0.5D0\".\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"w_2\": \"0.5D0\"}\n```",
            "The parameter \"fire_alpha_init\" is relevant to the project as it is used in the FIRE minimization scheme for relaxation calculations. In the provided project, the calculation type is not explicitly mentioned, but based on the given conditions, it can be inferred that the calculation type is either 'relax' or 'vc-relax' since the ion_dynamics is set to 'fire'.\n\nThe FIRE minimization scheme is a damped dynamics method for energy minimization, and the \"fire_alpha_init\" parameter is the initial value of the alpha mixing factor in this scheme. The recommended values for this parameter are between 0.1 and 0.3.\n\nGiven that the project involves a single atom of Molybdenum (Mo) in a cubic supercell with a plane-wave basis set and norm-conserving pseudopotentials, and the ion_dynamics is set to 'fire', the \"fire_alpha_init\" parameter is indeed relevant.\n\nTherefore, the appropriate value for the \"fire_alpha_init\" parameter, based on the recommended values, is:\n\n```python\nparameter_value = {\"fire_alpha_init\": \"0.2D0\"}\n```\n\nThis value is within the recommended range and should provide a good starting point for the FIRE minimization scheme in the relaxation calculation.",
            "The parameter \"fire_nmin\" is relevant to the project when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' and the ion_dynamics is set to 'fire'. In this project, the calculation type is not explicitly mentioned, but the ion_dynamics is set to 'bfgs'. Therefore, the parameter \"fire_nmin\" is not relevant to this project.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"fire_nmin\": None}\n```",
            "The parameter \"fire_falpha\" is relevant to the project as it is used in the Quantum ESPRESSO input file when the ion_dynamics is set to 'fire'. This parameter is used for scaling the alpha mixing parameter for steps with P > 0 in the FIRE (Fast Inertial Relaxation Engine) algorithm, which is a damped dynamics method used for structural relaxation and molecular dynamics simulations.\n\nIn the provided project, the ion_dynamics is not explicitly set, but the possible usage conditions for the \"fire_falpha\" parameter include 'relax', 'md', 'vc-relax', and 'vc-md'. Since the project does not specify any of these calculation types, the \"fire_falpha\" parameter is not directly relevant to the project.\n\nHowever, if the project were to be modified to include one of these calculation types and the ion_dynamics were set to 'fire', the \"fire_falpha\" parameter would become relevant. In such a case, the default value of \"0.99D0\" could be used.\n\nGiven the current state of the project, the \"fire_falpha\" parameter is not relevant. Therefore, the value for the parameter should be set to None.\n\n```python\nparameter_value = {\"fire_falpha\": None}\n```",
            "The parameter \"ion_positions\" is relevant to the project as it controls how atomic positions are determined. In this project, we are dealing with a single Mo atom in a cubic supercell, and the atomic position is provided in the \"ATOMIC_POSITIONS\" section of the project.\n\nThe parameter \"ion_positions\" is not explicitly mentioned in the project, but it is implicitly set to \"from_input\" as the atomic positions are provided in the standard input. This parameter is relevant to the project because it determines how the atomic positions are used in the calculation.\n\nSince the project does not involve a restart calculation, the default value of \"ion_positions\" is not applicable. Therefore, the appropriate value for this parameter is \"from_input\".\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"ion_positions\": \"from_input\"}\n```\n\nThis means that the atomic positions will be read from the standard input, which is consistent with the provided project.",
            "Based on the provided project and conditions, the parameter \"Hubbard_occ\" is relevant to the project. The project involves a Quantum ESPRESSO calculation for a Mo (Molybdenum) atom, which is a transition metal. The Hubbard correction is often used in DFT+U calculations for transition metals and rare earth elements to better describe the electronic structure of strongly correlated systems.\n\nHowever, the provided project does not explicitly specify the use of the Hubbard correction. The calculation type is 'scf', which is a single-step calculation for self-consistent field. The pseudopotential used is a norm-conserving pseudopotential (ONCV_PBE-1.0.oncvpsp.upf), which does not explicitly indicate the use of Hubbard correction.\n\nGiven the conditions and the project, the appropriate value for the \"Hubbard_occ\" parameter would be \"read from pseudopotentials\". This means that the Hubbard occupations will be initialized by reading the occupations from the pseudopotentials.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"Hubbard_occ\": \"read from pseudopotentials\"}\n```",
            "The parameter \"laue_starting_left\" is not relevant to the provided project. This parameter is used in RISM (Reference Interaction Site Model) calculations, which are a type of implicit solvent model used in quantum chemistry to account for the effects of a solvent on a solute. However, the provided project does not involve any solvent-solute interactions or RISM calculations. Therefore, this parameter is not applicable to this project.\n\n```python\nparameter_value = {\"laue_starting_left\": None}\n```",
            "The parameter \"fcp_dynamics\" is relevant for Fictitious Charge Particle (FCP) calculations in Quantum ESPRESSO. However, the provided project does not include any FCP calculations, as indicated by the absence of the \"lfcp = .TRUE.\" tag. Therefore, the \"fcp_dynamics\" parameter is not relevant to the given project.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"fcp_dynamics\": None}\n```\n\nThis dictionary indicates that the \"fcp_dynamics\" parameter is not relevant to the provided project."
        ],
        "evaluated_parameters_graph": {
            "directed": true,
            "multigraph": false,
            "graph": {},
            "nodes": [
                {
                    "Parameter_Name": "calculation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "scf"
                    },
                    "Description": "calculation\nA string describing the task to be performed",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'",
                        "calculation = 'bands'",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Fixed cell calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "scf": "standard calculation",
                        "nscf": null,
                        "bands": null,
                        "relax": "only the atomic positions are allowed to vary",
                        "md": "ab-initio molecular dynamics (MD) simulations",
                        "vc-relax": "allows to vary both the atomic positions and lattice constants",
                        "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "calculation"
                },
                {
                    "Parameter_Name": "tprnfor",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "tprnfor\ncalculate forces",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-md'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "when calculation = 'relax','md','vc-md'"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "tprnfor"
                },
                {
                    "Parameter_Name": "etot_conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.0D-4"
                    },
                    "Description": "etot_conv_thr\nConvergence threshold on total energy (a.u) for ionic minimization: the convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps. Note that 'etot_conv_thr' is extensive, like the total energy.",
                    "Possible_Usage_Conditions": [
                        "total energy calculations",
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "etot_conv_thr"
                },
                {
                    "Parameter_Name": "forc_conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.0D-3"
                    },
                    "Description": "forc_conv_thr\nConvergence threshold on forces (a.u) for ionic minimization: the convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.",
                    "Possible_Usage_Conditions": [
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "forc_conv_thr"
                },
                {
                    "Parameter_Name": "ntyp",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ntyp\nnumber of types of atoms in the unit cell",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ntyp"
                },
                {
                    "Parameter_Name": "nosym_evc",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                    "Possible_Usage_Conditions": [
                        "Monkhorst-Pack grid",
                        "custom k-points",
                        "full BZ coverage"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                    },
                    "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                    "Namelist": "&SYSTEM",
                    "id": "nosym_evc"
                },
                {
                    "Parameter_Name": "occupations",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "occupations\nControls how electronic occupations are determined",
                    "Possible_Usage_Conditions": [
                        "DOS calculations",
                        "stress calculations",
                        "Relaxation calculations",
                        "Dynamics calculations",
                        "Metallic systems",
                        "Insulating systems",
                        "Uniform k-point grid",
                        "Single k-point",
                        "occupations = 'smearing'",
                        "Tetrahedron method (Bloechl's version)",
                        "Linear tetrahedron method",
                        "Optimized tetrahedron method",
                        "Fixed occupations",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": null,
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "smearing": "for metals, requires parameters smearing and degauss",
                        "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                        "tetrahedra_lin": "original linear tetrahedron method, reference only",
                        "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                        "fixed": "for insulators with a gap",
                        "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "occupations"
                },
                {
                    "Parameter_Name": "one_atom_occupations",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.",
                    "Possible_Usage_Conditions": [
                        "single atom/isolated systems",
                        "UPF pseudopotentials",
                        "Non-collinear magnetic calculations",
                        "Spin-orbit coupling",
                        "starting_magnetization=0.0",
                        "Isolated (non-periodic) systems",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used only for isolated atoms (nat=1) and when occupations='from_input'",
                    "Parameter_Value_Conditions": {
                        "TRUE": "When ordering of wavefunctions as atomic starting wavefunctions is needed"
                    },
                    "Final_comments": "The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).",
                    "Namelist": "&SYSTEM",
                    "id": "one_atom_occupations"
                },
                {
                    "Parameter_Name": "degauss",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.D0"
                    },
                    "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'bands'",
                        "Metallic systems",
                        "partial occupations",
                        "occupations = 'smearing'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "degauss"
                },
                {
                    "Parameter_Name": "smearing",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "gaussian"
                    },
                    "Description": "smearing\nControls the type of smearing method to be used",
                    "Possible_Usage_Conditions": [
                        "Metallic systems",
                        "Semiconductor systems",
                        "partial occupations",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "gaussian/gauss": "ordinary Gaussian spreading",
                        "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                        "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                        "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "smearing"
                },
                {
                    "Parameter_Name": "nspin",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nspin\nControls spin polarization type in calculations",
                    "Possible_Usage_Conditions": [
                        "nspin = 1",
                        "nspin = 2",
                        "Collinear magnetic calculations (LSDA)",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "1": "non-polarized calculation",
                        "2": "spin-polarized calculation, LSDA (magnetization along z axis)",
                        "4": "spin-polarized calculation, noncollinear (magnetization in generic direction)"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nspin"
                },
                {
                    "Parameter_Name": "Hubbard_occ",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "read from pseudopotentials"
                    },
                    "Description": "Hubbard_occ(ityp,i)\nHubbard occupations is the number of electrons in the Hubbard manifold. By default they are initialized by reading the occupations from pseudopotentials. If specified from the input, then the values read from the pseudopotentials will be overwritten.",
                    "Possible_Usage_Conditions": [
                        "DFT+U Hubbard correction",
                        "LDA+U calculations",
                        "Strongly correlated electrons",
                        "Transition Metals",
                        "Rare Earth Elements",
                        "Pseudopotentials with Hubbard occupation"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "The second index of the Hubbard_occ array corresponds to the Hubbard manifold number. It is possible to specify up to three Hubbard manifolds per Hubbard atom. However, if you want to specify three manifolds then the second and the third manifolds will be considered as one effective manifold.",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "Hubbard_occ"
                },
                {
                    "Parameter_Name": "assume_isolated",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'vc-relax'",
                        "Cubic supercells",
                        "2D periodic systems in x-y plane",
                        "Isolated (non-periodic) systems",
                        "charged slabs",
                        "vacuum boundaries",
                        "electrode boundaries",
                        "optional electric field"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "regular periodic calculation w/o any correction",
                        "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                        "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                        "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                    },
                    "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                    "Namelist": "&SYSTEM",
                    "id": "assume_isolated"
                },
                {
                    "Parameter_Name": "relaxz",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "relaxz\nAllows the relaxation of the system towards the charged plate.",
                    "Possible_Usage_Conditions": [
                        "Relaxation calculations",
                        "gate = .TRUE.",
                        "dipfield = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "used only if (gate = .TRUE.)",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": "Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.",
                    "Namelist": "&SYSTEM",
                    "id": "relaxz"
                },
                {
                    "Parameter_Name": "electron_maxstep",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 100
                    },
                    "Description": "electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "electron_maxstep"
                },
                {
                    "Parameter_Name": "scf_must_converge",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": ".TRUE."
                    },
                    "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                    },
                    "Final_comments": "Use with care.",
                    "Namelist": "&ELECTRONS",
                    "id": "scf_must_converge"
                },
                {
                    "Parameter_Name": "conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-6"
                    },
                    "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "conv_thr"
                },
                {
                    "Parameter_Name": "conv_thr_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-3"
                    },
                    "Description": "conv_thr_init\nWhen adaptive_thr = .TRUE. this is the convergence threshold used for the first scf cycle.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when adaptive_thr is set to .TRUE.",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "conv_thr_init"
                },
                {
                    "Parameter_Name": "mixing_mode",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "plain"
                    },
                    "Description": "mixing_mode\nControls the type of charge density mixing method",
                    "Possible_Usage_Conditions": [
                        "homogeneous systems",
                        "inhomogeneous systems",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "plain": "charge density Broyden mixing",
                        "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                        "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                    },
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_mode"
                },
                {
                    "Parameter_Name": "mixing_beta",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.7D0"
                    },
                    "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                    "Possible_Usage_Conditions": [
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_beta"
                },
                {
                    "Parameter_Name": "startingwfc",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "atomic+random"
                    },
                    "Description": "startingwfc\nSpecifies how the initial wavefunctions are generated",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'",
                        "High symmetry systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "atomic": "Start from superposition of atomic orbitals. If not enough atomic orbitals are available, fill with random numbers the remaining wfcs. The scf typically starts better with this option, but in some high-symmetry cases one can \"loose\" valence states, ending up in the wrong ground state.",
                        "atomic+random": "As above, plus a superimposed \"randomization\" of atomic orbitals. Prevents the \"loss\" of states mentioned above.",
                        "random": "Start from random wfcs. Slower start of scf but safe. It may also reduce memory usage in conjunction with diagonalization='cg'.",
                        "file": "Start from an existing wavefunction file in the directory specified by parameters 'prefix' and 'outdir'."
                    },
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "startingwfc"
                },
                {
                    "Parameter_Name": "ion_positions",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "default"
                    },
                    "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "",
                    "Parameter_Value_Conditions": {
                        "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                        "from_input": "read atomic positions from standard input, even if restarting"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_positions"
                },
                {
                    "Parameter_Name": "wfc_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "first_order": "extrapolate the wave-functions with first-order formula",
                        "second_order": "extrapolate the wave-functions with second order formula"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "wfc_extrapolation"
                },
                {
                    "Parameter_Name": "upscale",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "upscale"
                },
                {
                    "Parameter_Name": "bfgs_ndim",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "1": "standard quasi-Newton BFGS method is used"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "bfgs_ndim"
                },
                {
                    "Parameter_Name": "trust_radius_max",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.8D0"
                    },
                    "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_max"
                },
                {
                    "Parameter_Name": "trust_radius_min",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-3"
                    },
                    "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "trust_radius < trust_radius_min": "BFGS is reset"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_min"
                },
                {
                    "Parameter_Name": "trust_radius_ini",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_ini"
                },
                {
                    "Parameter_Name": "w_1",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.01D0"
                    },
                    "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_1"
                },
                {
                    "Parameter_Name": "w_2",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_2"
                },
                {
                    "Parameter_Name": "fire_alpha_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.2D0"
                    },
                    "Description": "fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                    "Parameter_Value_Conditions": {
                        "0.1-0.3": "recommended values"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "fire_alpha_init"
                },
                {
                    "Parameter_Name": "fire_f_dec",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "fire_f_dec\nFactor for decreasing 'dt'",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'fire'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "fire_f_dec"
                },
                {
                    "Parameter_Name": "noinv",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "noinv\nif (.TRUE.) disable the usage of k => -k symmetry (time reversal) in k-point generation",
                    "Possible_Usage_Conditions": [
                        "Non-collinear magnetic calculations",
                        "custom k-points"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "noinv"
                },
                {
                    "Card_Name": "K_POINTS",
                    "Namelist": "Card: K_POINTS",
                    "Required/Optional": null,
                    "Card_Options": [
                        "tpiba",
                        "tpiba_b",
                        "tpiba_c",
                        "crystal",
                        "crystal_b",
                        "crystal_c",
                        "gamma",
                        "automatic"
                    ],
                    "Default_Option": "tpiba",
                    "Description": null,
                    "Card_Use_Conditions": null,
                    "Card_Option_Given_Conditions": {
                        "gamma": "wavefunctions can be chosen as real, and specialized subroutines optimized for calculations at the gamma point are used",
                        "automatic": "generates uniform grid of k-points with specified grid and offset parameters"
                    },
                    "Syntax_Given_Option": {
                        "tpiba": "K_POINTS tpiba\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal": "K_POINTS crystal\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_b": "K_POINTS tpiba_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_b": "K_POINTS crystal_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_c": "K_POINTS tpiba_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_c": "K_POINTS crystal_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "automatic": "K_POINTS automatic\nnk1 nk2 nk3 sk1 sk2 sk3",
                        "gamma": "K_POINTS gamma"
                    },
                    "Item_Description": {
                        "nks": "Number of supplied special k-points",
                        "xk_x, xk_y, xk_z": "Special k-points in the irreducible Brillouin Zone (IBZ) of the lattice (with all symmetries)",
                        "wk": "weights",
                        "nk1, nk2, nk3": "These parameters specify the k-point grid (nk1 x nk2 x nk3) as in Monkhorst-Pack grids",
                        "sk1, sk2, sk3": "The grid offsets"
                    },
                    "Item_Conditions": {
                        "sk1, sk2, sk3": "must be 0 (no offset) or 1 (grid displaced by half a grid step in the corresponding direction)",
                        "nks": "must be 3 for tpiba_c and crystal_c options"
                    },
                    "General_Syntax": null,
                    "Final_comments": "Only grids having the full symmetry of the crystal work with tetrahedra. Some grids with offset may not work.",
                    "Possible_Usage_Conditions": [],
                    "id": "K_POINTS"
                },
                {
                    "Card_Name": "OCCUPATIONS",
                    "Namelist": "Card: OCCUPATIONS",
                    "Required/Optional": "optional",
                    "Card_Options": null,
                    "Default_Option": null,
                    "Description": null,
                    "Card_Use_Conditions": {
                        "occupations": "from_input"
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": null,
                    "Item_Description": {
                        "f_inp1": "Occupations of individual states (MAX 10 PER ROW). For spin-polarized calculations, these are majority spin states.",
                        "f_inp2": "Occupations of minority spin states (MAX 10 PER ROW)"
                    },
                    "Item_Conditions": {
                        "f_inp2": "To be specified only for spin-polarized calculations"
                    },
                    "General_Syntax": "OCCUPATIONS\nf_inp1(1) f_inp1(2) . . . f_inp1(nbnd)\n[ f_inp2(1) f_inp2(2) . . . f_inp2(nbnd) ]",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "occupations = 'from_input'"
                    ],
                    "id": "OCCUPATIONS"
                },
                {
                    "Parameter_Name": "nbnd",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "insulator": "number of valence bands (number_of_electrons/2)",
                        "metal": "(number of valence bands)*1.2"
                    },
                    "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                    "Possible_Usage_Conditions": [
                        "Insulating systems",
                        "Metallic systems",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nbnd"
                },
                {
                    "Parameter_Name": "tot_charge",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": 0.0
                    },
                    "Description": "tot_charge\nTotal charge of the system. Useful for simulations with charged cells.",
                    "Possible_Usage_Conditions": [
                        "charged cells"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when simulating systems with non-neutral charge states. In periodic calculations, a compensating jellium background is inserted for non-neutral cells.",
                    "Parameter_Value_Conditions": {
                        "0": "neutral cell",
                        "+1": "one electron missing from the system",
                        "-1": "one additional electron"
                    },
                    "Final_comments": "In a periodic calculation a compensating jellium background is inserted to remove divergences if the cell is not neutral.",
                    "Namelist": "&SYSTEM",
                    "id": "tot_charge"
                },
                {
                    "Parameter_Name": "nat",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "nat\nnumber of atoms in the unit cell (ALL atoms, except if space_group is set, in which case, INEQUIVALENT atoms)",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nat"
                },
                {
                    "Parameter_Name": "starting_magnetization",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": 0
                    },
                    "Description": "starting_magnetization(i), i=1,ntyp\nStarting spin polarization on atomic type i in a spin polarized (LSDA or noncollinear/spin-orbit) calculation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'nscf'",
                        "noncollinear calculations",
                        "spin-orbit calculations",
                        "Magnetic systems",
                        "Spin-orbit coupling",
                        "Collinear magnetic calculations (LSDA)",
                        "Non-collinear magnetic calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Must be specified if nonzero magnetization is expected in ground state, unless magnetization is constrained using tot_magnetization or constrained_magnetization parameters",
                    "Parameter_Value_Conditions": {
                        "-1 to 1": "For non-constrained calculations, representing all spins down to all spins up for valence electrons"
                    },
                    "Final_comments": "NOTE 1: starting_magnetization is ignored in most BUT NOT ALL cases in non-scf calculations (nscf)\nNOTE 2: If you fix the magnetization with tot_magnetization, do not specify starting_magnetization\nNOTE 3: In the noncollinear/spin-orbit case, starting with zero starting_magnetization on all atoms imposes time reversal symmetry",
                    "Namelist": "&SYSTEM",
                    "id": "starting_magnetization"
                },
                {
                    "Parameter_Name": "starting_spin_angle",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "starting_spin_angle\nControls the initialization of starting wavefunctions in spin-orbit case when domag = .TRUE. When set to .TRUE., initial wavefunctions are radial functions multiplied by spin-angle functions.",
                    "Possible_Usage_Conditions": [
                        "lspinorb = .True.",
                        "Magnetic systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used in spin-orbit cases. When lspinorb = .FALSE., this flag is not used. When domag = .FALSE., initial wavefunctions are always radial functions multiplied by spin-angle functions regardless of this flag.",
                    "Parameter_Value_Conditions": {
                        "True": "Initial wavefunctions are radial functions multiplied by spin-angle functions when domag = .TRUE.",
                        "False": "Initial wavefunctions are initialized as in scalar relativistic noncollinear case without spin-orbit when domag = .TRUE."
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "starting_spin_angle"
                },
                {
                    "Parameter_Name": "constrained_magnetization",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "constrained_magnetization\nUsed to perform constrained calculations in magnetic systems.",
                    "Possible_Usage_Conditions": [
                        "Magnetic systems",
                        "Non-collinear magnetic calculations",
                        "Collinear magnetic calculations (LSDA)"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "no constraint",
                        "total": "total magnetization is constrained by adding a penalty term to total energy, noncolinear case only",
                        "atomic": "atomic magnetization are constrained to defined starting magnetization",
                        "total direction": "angle theta of total magnetization with z axis is constrained",
                        "atomic direction": "only cosine of angle1 of atomic magnetic moment is constrained"
                    },
                    "Final_comments": "Note: symmetrization may prevent to reach the desired orientation of the magnetization. Try not to start with very highly symmetric configurations or use the nosym flag (only as a last remedy)",
                    "Namelist": "&SYSTEM",
                    "id": "constrained_magnetization"
                },
                {
                    "Parameter_Name": "noncolin",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "noncolin\nif .true. the program will perform a noncollinear calculation.",
                    "Possible_Usage_Conditions": [
                        "Relativistic pseudopotentials",
                        "Non-collinear magnetic calculations",
                        "Spin-orbit coupling"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "noncolin"
                },
                {
                    "Parameter_Name": "tot_magnetization",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": -10000
                    },
                    "Description": "tot_magnetization\nTotal majority spin charge - minority spin charge. Used to impose a specific total electronic magnetization.",
                    "Possible_Usage_Conditions": [
                        "nspin = 2",
                        "Collinear spin",
                        "Magnetic systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "If unspecified then tot_magnetization parameter is ignored and the amount of electronic magnetization is determined during the self-consistent (scf) cycle.",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "tot_magnetization"
                },
                {
                    "Parameter_Name": "esm_bc",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "pbc"
                    },
                    "Description": "esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "Slab systems",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = 'esm'",
                    "Parameter_Value_Conditions": {
                        "pbc": "regular periodic calculation (no ESM)",
                        "bc1": "Vacuum-slab-vacuum (open boundary conditions)",
                        "bc2": "Metal-slab-metal (dual electrode configuration)",
                        "bc3": "Vacuum-slab-metal"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_bc"
                },
                {
                    "Parameter_Name": "esm_efield",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.d0"
                    },
                    "Description": "esm_efield\ngives the magnitude of the electric field [Ry/a.u.] to be applied between semi-infinite ESM electrodes",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\" and esm_bc = \"bc2\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_efield"
                },
                {
                    "Parameter_Name": "esm_w",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.d0"
                    },
                    "Description": "esm_w\ndetermines the position offset [in a.u.] of the start of the effective screening region, measured relative to the cell edge. (ESM region begins at z = +/- [L_z/2 + esm_w] )",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "periodic cell with defined z-direction",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_w"
                },
                {
                    "Parameter_Name": "esm_nfit",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 4
                    },
                    "Description": "esm_nfit\ngives the number of z-grid points for the polynomial fit along the cell edge",
                    "Possible_Usage_Conditions": [
                        "assume_isolated must be set to 'esm'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_nfit"
                },
                {
                    "Parameter_Name": "cell_dofree",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "all"
                    },
                    "Description": "cell_dofree\nSelect which of the cell parameters should be moved",
                    "Possible_Usage_Conditions": [
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in vc-relax or vc-md calculation",
                    "Parameter_Value_Conditions": {
                        "all": "all axis and angles are moved",
                        "ibrav": "all axis and angles are moved, but the lattice remains consistent with the initial ibrav choice",
                        "a": "the x component of axis 1 (v1_x) is fixed",
                        "b": "the y component of axis 2 (v2_y) is fixed",
                        "c": "the z component of axis 3 (v3_z) is fixed",
                        "fixa": "axis 1 (v1_x,v1_y,v1_z) is fixed",
                        "fixb": "axis 2 (v2_x,v2_y,v2_z) is fixed",
                        "fixc": "axis 3 (v3_x,v3_y,v3_z) is fixed",
                        "x": "only the x component of axis 1 (v1_x) is moved",
                        "y": "only the y component of axis 2 (v2_y) is moved",
                        "z": "only the z component of axis 3 (v3_z) is moved",
                        "xy": "only v1_x and v2_y are moved",
                        "xz": "only v1_x and v3_z are moved",
                        "yz": "only v2_y and v3_z are moved",
                        "xyz": "only v1_x, v2_y, v3_z are moved",
                        "shape": "all axis and angles, keeping the volume fixed",
                        "volume": "the volume changes, keeping all angles fixed (i.e. only celldm(1) changes)",
                        "2Dxy": "only x and y components are allowed to change",
                        "2Dshape": "as above, keeping the area in xy plane fixed",
                        "epitaxial_ab": "fix axis 1 and 2 while allowing axis 3 to move",
                        "epitaxial_ac": "fix axis 1 and 3 while allowing axis 2 to move",
                        "epitaxial_bc": "fix axis 2 and 3 while allowing axis 1 to move"
                    },
                    "Final_comments": "Note: if axis are not orthogonal, some of these options do not work (symmetry is broken).",
                    "Namelist": "&CELL",
                    "id": "cell_dofree"
                },
                {
                    "Parameter_Name": "block",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "block\nAdds a potential barrier to the total potential seen by the electrons to mimic a dielectric in field effect configuration and/or to avoid electrons spilling into the vacuum region for electron doping. Potential barrier is from 'block_1' to 'block_2' and has a height of 'block_height'.",
                    "Possible_Usage_Conditions": [
                        "gate = .TRUE.",
                        "dipfield = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "used only if (gate = .TRUE.)",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "block"
                },
                {
                    "Parameter_Name": "dipfield",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "dipfield\nIf .TRUE. and tefield = .TRUE. a dipole correction is also added to the bare ionic potential.",
                    "Possible_Usage_Conditions": [
                        "Slab systems",
                        "Laue boundary conditions",
                        "tefield = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Must be used ONLY in a slab geometry, for surface calculations, with the discontinuity FALLING IN THE EMPTY SPACE.",
                    "Parameter_Value_Conditions": {
                        "True": "tefield must be True"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "dipfield"
                },
                {
                    "Parameter_Name": "diago_thr_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null,
                        "scf_atomic_orbitals": "1.D-2",
                        "scf_charge_density": "1.D-5",
                        "non_scf": "(conv_thr/N elec)/10"
                    },
                    "Description": "diago_thr_init\nConvergence threshold (ethr) for iterative diagonalization (the check is on eigenvalue convergence)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "During self consistency (scf) the threshold is automatically reduced (but never below 1.D-13) when approaching convergence",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "diago_thr_init"
                },
                {
                    "Parameter_Name": "adaptive_thr",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "adaptive_thr\nIf .TRUE. this turns on the use of an adaptive 'conv_thr' for the inner scf loops when using EXX.",
                    "Possible_Usage_Conditions": [
                        "Exact exchange calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used for inner scf loops when using EXX",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "turns on adaptive conv_thr for inner scf loops with EXX"
                    },
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "adaptive_thr"
                },
                {
                    "Parameter_Name": "diagonalization",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "david"
                    },
                    "Description": "diagonalization\nSpecifies the type of diagonalization method to be used",
                    "Possible_Usage_Conditions": [
                        "calculation = 'bands'",
                        "Conjugate gradient diagonalization",
                        "Davidson diagonalization",
                        "PPCG diagonalization",
                        "Paro diagonalization",
                        "RMM-DIIS diagonalization"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "david": "Davidson iterative diagonalization with overlap matrix. Fast, may in some rare cases fail.",
                        "cg": "Conjugate-gradient-like band-by-band diagonalization. MUCH slower than david but uses less memory and is (a little bit) more robust.",
                        "ppcg": "PPCG iterative diagonalization",
                        "paro": "ParO iterative diagonalization",
                        "ParO": "ParO iterative diagonalization",
                        "rmm-davidson": "RMM-DIIS iterative diagonalization. To stabilize the SCF loop RMM-DIIS is alternated with calls to Davidson solver",
                        "rmm-paro": "RMM-DIIS iterative diagonalization. To stabilize the SCF loop RMM-DIIS is alternated with calls to ParO solver"
                    },
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "diagonalization"
                },
                {
                    "Parameter_Name": "prefix",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "pwscf"
                    },
                    "Description": "prefix\nprepended to input/output filenames: prefix.wfc, prefix.rho, etc.",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "prefix"
                },
                {
                    "Parameter_Name": "outdir",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "value of ESPRESSO_TMPDIR if set",
                        "if ESPRESSO_TMPDIR not set": "./"
                    },
                    "Description": "outdir\ninput, temporary, output files are found in this directory",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "outdir"
                },
                {
                    "Parameter_Name": "ion_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "calculation=relax": "bfgs",
                        "calculation=md": "verlet",
                        "calculation=vc-relax": "bfgs",
                        "calculation=vc-md": "beeman"
                    },
                    "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                        "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                        "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                        "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                        "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                        "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                        "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_dynamics"
                }
            ],
            "edges": [
                {
                    "condition": "parameter is automatically set",
                    "source_node": "tprnfor",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "tprnfor",
                    "source": "tprnfor",
                    "target": "calculation"
                },
                {
                    "condition": "both criteria must be satisfie",
                    "source_node": "etot_conv_thr",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "etot_conv_thr",
                    "source": "etot_conv_thr",
                    "target": "forc_conv_thr"
                },
                {
                    "condition": "both criteria must be satisfie",
                    "source_node": "forc_conv_thr",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "forc_conv_thr",
                    "source": "forc_conv_thr",
                    "target": "etot_conv_thr"
                },
                {
                    "condition": "when noinv=.true., time revers",
                    "source_node": "nosym_evc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nosym_evc",
                    "source": "nosym_evc",
                    "target": "noinv"
                },
                {
                    "condition": "requires smearing and degauss ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "smearing"
                },
                {
                    "condition": "tetrahedra method requires uni",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "K_POINTS"
                },
                {
                    "condition": "from_input option requires occ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "OCCUPATIONS"
                },
                {
                    "condition": "from_input option requires nbn",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "nbnd"
                },
                {
                    "condition": "from_input occupations should ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "tot_charge"
                },
                {
                    "condition": "Must be set to 'from_input'",
                    "source_node": "one_atom_occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "one_atom_occupations",
                    "source": "one_atom_occupations",
                    "target": "occupations"
                },
                {
                    "condition": "Must be 1",
                    "source_node": "one_atom_occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "one_atom_occupations",
                    "source": "one_atom_occupations",
                    "target": "nat"
                },
                {
                    "condition": "Equal to 0.0 for spin-orbit wi",
                    "source_node": "one_atom_occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "one_atom_occupations",
                    "source": "one_atom_occupations",
                    "target": "starting_magnetization"
                },
                {
                    "condition": "Can be set to TRUE in magnetic",
                    "source_node": "one_atom_occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "one_atom_occupations",
                    "source": "one_atom_occupations",
                    "target": "starting_spin_angle"
                },
                {
                    "condition": "gaussian smearing for metals o",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "occupations"
                },
                {
                    "condition": "used in Gaussian smearing",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "degauss"
                },
                {
                    "condition": "for spin-polarized calculation",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "nspin"
                },
                {
                    "condition": "for magnetic calculations",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "constrained_magnetization"
                },
                {
                    "condition": "When nspin=4, do not specify n",
                    "source_node": "nspin",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nspin",
                    "source": "nspin",
                    "target": "noncolin"
                },
                {
                    "condition": "When nspin=2, specify tot_magn",
                    "source_node": "nspin",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nspin",
                    "source": "nspin",
                    "target": "tot_magnetization"
                },
                {
                    "condition": "Used with esm to choose bounda",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_bc"
                },
                {
                    "condition": "Used with esm for optional ele",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_efield"
                },
                {
                    "condition": "Related to esm",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_w"
                },
                {
                    "condition": "Related to esm",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_nfit"
                },
                {
                    "condition": "Should be set to \"2Dxy\" when u",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "cell_dofree"
                },
                {
                    "condition": "Use with block=.TRUE. to creat",
                    "source_node": "relaxz",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "relaxz",
                    "source": "relaxz",
                    "target": "block"
                },
                {
                    "condition": "Use with dipfield=.TRUE. to av",
                    "source_node": "relaxz",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "relaxz",
                    "source": "relaxz",
                    "target": "dipfield"
                },
                {
                    "condition": "referenced when scf_must_conve",
                    "source_node": "scf_must_converge",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "scf_must_converge",
                    "source": "scf_must_converge",
                    "target": "electron_maxstep"
                },
                {
                    "condition": "In nscf calculations, conv_thr",
                    "source_node": "conv_thr",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "conv_thr",
                    "source": "conv_thr",
                    "target": "diago_thr_init"
                },
                {
                    "condition": "Parameter is used when adaptiv",
                    "source_node": "conv_thr_init",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "conv_thr_init",
                    "source": "conv_thr_init",
                    "target": "adaptive_thr"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "calculation"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "mixing_beta"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "smearing"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "mixing_mode"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "smearing"
                },
                {
                    "condition": "When startingwfc='random', it ",
                    "source_node": "startingwfc",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "startingwfc",
                    "source": "startingwfc",
                    "target": "diagonalization"
                },
                {
                    "condition": "When startingwfc='file', uses ",
                    "source_node": "startingwfc",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "startingwfc",
                    "source": "startingwfc",
                    "target": "prefix"
                },
                {
                    "condition": "When startingwfc='file', uses ",
                    "source_node": "startingwfc",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "startingwfc",
                    "source": "startingwfc",
                    "target": "outdir"
                },
                {
                    "condition": "'first_order' and 'second-orde",
                    "source_node": "wfc_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "wfc_extrapolation",
                    "source": "wfc_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "'conv_thr' is automatically re",
                    "source_node": "upscale",
                    "source_type": "&IONS",
                    "relationship_defined_by": "upscale",
                    "source": "upscale",
                    "target": "conv_thr"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be bfgs",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: relax, md, vc-",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "calculation"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_1",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_1",
                    "source": "w_1",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "w_2",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_2",
                    "source": "w_2",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_2",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_2",
                    "source": "w_2",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "fire_alpha_init",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_alpha_init",
                    "source": "fire_alpha_init",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'fire'",
                    "source_node": "fire_alpha_init",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_alpha_init",
                    "source": "fire_alpha_init",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be 'fire'",
                    "source_node": "fire_f_dec",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_f_dec",
                    "source": "fire_f_dec",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "fire_f_dec",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_f_dec",
                    "source": "fire_f_dec",
                    "target": "calculation"
                }
            ]
        },
        "trimmed_documentation": [
            {
                "Parameter_Name": "calculation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "scf"
                },
                "Description": "calculation\nA string describing the task to be performed",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'",
                    "calculation = 'bands'",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Fixed cell calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "scf": "standard calculation",
                    "nscf": null,
                    "bands": null,
                    "relax": "only the atomic positions are allowed to vary",
                    "md": "ab-initio molecular dynamics (MD) simulations",
                    "vc-relax": "allows to vary both the atomic positions and lattice constants",
                    "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tprnfor",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": null
                },
                "Description": "tprnfor\ncalculate forces",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-md'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when calculation = 'relax','md','vc-md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "parameter is automatically set to .TRUE. when calculation is 'relax','md','vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "etot_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.0D-4"
                },
                "Description": "etot_conv_thr\nConvergence threshold on total energy (a.u) for ionic minimization: the convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps. Note that 'etot_conv_thr' is extensive, like the total energy.",
                "Possible_Usage_Conditions": [
                    "total energy calculations",
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "forc_conv_thr": "both criteria must be satisfied"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "forc_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.0D-3"
                },
                "Description": "forc_conv_thr\nConvergence threshold on forces (a.u) for ionic minimization: the convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.",
                "Possible_Usage_Conditions": [
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "etot_conv_thr": "both criteria must be satisfied"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tefield",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.",
                "Possible_Usage_Conditions": [
                    "Ground state calculations",
                    "Relaxation calculations",
                    "tefield = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "True": "A saw-like potential simulating an electric field is added to the bare ionic potential"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "edir": "Used to define form and size of added potential",
                    "eamp": "Used to define form and size of added potential",
                    "emaxpos": "Used to define form and size of added potential",
                    "eopreg": "Used to define form and size of added potential"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "lorbm",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "lorbm\nIf .TRUE. perform orbital magnetization calculation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'nscf'",
                    "norm-conserving pseudopotentials",
                    "Uniform k-point grid",
                    "Kubo terms"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.",
                "Parameter_Value_Conditions": {
                    "TRUE": "Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed."
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lelfield": "If lelfield=.true., only Kubo terms are computed"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "twochem",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when performing two chemical potential calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "must be set to smearing",
                    "nelec_cond": "related parameter",
                    "nbnd_cond": "related parameter",
                    "degauss_cond": "related parameter"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "lfcp",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "ESM calculations",
                    "Constant bias potential calculations",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "'calculation' must be 'relax' or 'md'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "&FCP": "must be set when lfcp is .TRUE.",
                    "assume_isolated": "must be 'esm'",
                    "esm_bc": "must be 'bc2' or 'bc3', or 'bc1' with trism=.TRUE.",
                    "ignore_wolfe": "is always .TRUE., for BFGS"
                },
                "Final_comments": "The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.",
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "celldm",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.",
                "Possible_Usage_Conditions": [
                    "ibrav-defined crystal structure"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified",
                "Parameter_Value_Conditions": {
                    "celldm(1)": "is the lattice parameter \"a\" (in BOHR)",
                    "celldm(1) when ibrav=0": "only celldm(1) is used if present"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ibrav": "depends on ibrav value",
                    "CELL_PARAMETERS": "cell vectors are read from card CELL_PARAMETERS when ibrav=0",
                    "A, B, C, cosAB, cosAC, cosBC": "mutually exclusive with celldm"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "ntyp",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "ntyp\nnumber of types of atoms in the unit cell",
                "Possible_Usage_Conditions": [],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "tot_magnetization",
                "Value_Type": "real",
                "Default_Values": {
                    "default": -10000
                },
                "Description": "tot_magnetization\nTotal majority spin charge - minority spin charge. Used to impose a specific total electronic magnetization.",
                "Possible_Usage_Conditions": [
                    "nspin = 2",
                    "Collinear spin",
                    "Magnetic systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "If unspecified then tot_magnetization parameter is ignored and the amount of electronic magnetization is determined during the self-consistent (scf) cycle.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nr1s, nr2s, nr3s",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )",
                "Possible_Usage_Conditions": [
                    "Smooth FFT grid",
                    "Ultrasoft pseudopotentials",
                    "PAW sets"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "all three dimensions should be set, to use this parameter",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "nr1, nr2, nr3": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutrho": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutwfc": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym_evc",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                "Possible_Usage_Conditions": [
                    "Monkhorst-Pack grid",
                    "custom k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "when noinv=.true., time reversal symmetry is not assumed"
                },
                "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "occupations",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null
                },
                "Description": "occupations\nControls how electronic occupations are determined",
                "Possible_Usage_Conditions": [
                    "DOS calculations",
                    "stress calculations",
                    "Relaxation calculations",
                    "Dynamics calculations",
                    "Metallic systems",
                    "Insulating systems",
                    "Uniform k-point grid",
                    "Single k-point",
                    "occupations = 'smearing'",
                    "Tetrahedron method (Bloechl's version)",
                    "Linear tetrahedron method",
                    "Optimized tetrahedron method",
                    "Fixed occupations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": null,
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "smearing": "for metals, requires parameters smearing and degauss",
                    "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                    "tetrahedra_lin": "original linear tetrahedron method, reference only",
                    "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                    "fixed": "for insulators with a gap",
                    "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "smearing": "requires smearing and degauss parameters",
                    "K_POINTS": "tetrahedra method requires uniform grid of k-points",
                    "OCCUPATIONS": "from_input option requires occupations to be read from OCCUPATIONS card",
                    "nbnd": "from_input option requires nbnd parameter to be set",
                    "tot_charge": "from_input occupations should be consistent with tot_charge"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "one_atom_occupations",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.",
                "Possible_Usage_Conditions": [
                    "single atom/isolated systems",
                    "UPF pseudopotentials",
                    "Non-collinear magnetic calculations",
                    "Spin-orbit coupling",
                    "starting_magnetization=0.0",
                    "Isolated (non-periodic) systems",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only for isolated atoms (nat=1) and when occupations='from_input'",
                "Parameter_Value_Conditions": {
                    "TRUE": "When ordering of wavefunctions as atomic starting wavefunctions is needed"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "Must be set to 'from_input'",
                    "nat": "Must be 1",
                    "starting_magnetization": "Equal to 0.0 for spin-orbit with time-reversal case",
                    "starting_spin_angle": "Can be set to TRUE in magnetic case with spin-orbit"
                },
                "Final_comments": "The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss_cond",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0 Ry"
                },
                "Description": "degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)",
                "Possible_Usage_Conditions": [
                    "Two-chemical-potential calculations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in two-chemical potential calculations when twochem = .True.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "twochem": "Parameter is used when twochem = .True."
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                "Possible_Usage_Conditions": [
                    "calculation = 'bands'",
                    "Metallic systems",
                    "partial occupations",
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "smearing",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "gaussian"
                },
                "Description": "smearing\nControls the type of smearing method to be used",
                "Possible_Usage_Conditions": [
                    "Metallic systems",
                    "Semiconductor systems",
                    "partial occupations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "gaussian/gauss": "ordinary Gaussian spreading",
                    "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                    "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                    "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "gaussian smearing for metals occupations='smearing'",
                    "degauss": "used in Gaussian smearing",
                    "nspin": "for spin-polarized calculations",
                    "constrained_magnetization": "for magnetic calculations"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nspin",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "nspin\nControls spin polarization type in calculations",
                "Possible_Usage_Conditions": [
                    "nspin = 1",
                    "nspin = 2",
                    "Collinear magnetic calculations (LSDA)",
                    "Spin-polarized calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "1": "non-polarized calculation",
                    "2": "spin-polarized calculation, LSDA (magnetization along z axis)",
                    "4": "spin-polarized calculation, noncollinear (magnetization in generic direction)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noncolin": "When nspin=4, do not specify nspin; use noncolin=.TRUE. instead",
                    "tot_magnetization": "When nspin=2, specify tot_magnetization"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "noncolin",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "noncolin\nif .true. the program will perform a noncollinear calculation.",
                "Possible_Usage_Conditions": [
                    "Relativistic pseudopotentials",
                    "Non-collinear magnetic calculations",
                    "Spin-orbit coupling"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "nspin": "when nspin=4, do not specify nspin; use noncolin=.TRUE. instead",
                    "constrained_magnetization": "Used for constraining magnetization in noncollinear/spin-orbit calculations"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "qcutz",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.0
                },
                "Description": "qcutz\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). qcutz is the height (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'. In the kinetic energy, G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-md'",
                    "stress calculations",
                    "Exchange-correlation functional",
                    "variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ecfixed": "used together in energy step calculation",
                    "q2sigma": "used together in kinetic energy calculation"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "q2sigma",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.1
                },
                "Description": "q2sigma\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). q2sigma is the width (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-md'",
                    "stress calculations",
                    "Exchange-correlation functional"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in the kinetic energy calculation where G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ecfixed": "q2sigma defines width of energy step for reciprocal vectors with square modulus > ecfixed",
                    "qcutz": "Used together in kinetic energy calculation"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "exxdiv_treatment",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "gygi-baldereschi"
                },
                "Description": "exxdiv_treatment\nSpecific for EXX. It selects the kind of approach to be used for treating the Coulomb potential divergencies at small q vectors.",
                "Possible_Usage_Conditions": [
                    "Exact exchange calculations",
                    "Hybrid functionals with exact exchange",
                    "Cubic supercells",
                    "Quasi-cubic supercells",
                    "Anisotropic supercells"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "gygi-baldereschi": "appropriate for cubic and quasi-cubic supercells",
                    "vcut_spherical": "appropriate for cubic and quasi-cubic supercells",
                    "vcut_ws": "appropriate for strongly anisotropic supercells",
                    "none": "sets Coulomb potential at G,q=0 to 0.0 (required for GAU-PBE)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ecutvcut": "related when using vcut_ws"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "Hubbard_occ",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "read from pseudopotentials"
                },
                "Description": "Hubbard_occ(ityp,i)\nHubbard occupations is the number of electrons in the Hubbard manifold. By default they are initialized by reading the occupations from pseudopotentials. If specified from the input, then the values read from the pseudopotentials will be overwritten.",
                "Possible_Usage_Conditions": [
                    "DFT+U Hubbard correction",
                    "LDA+U calculations",
                    "Strongly correlated electrons",
                    "Transition Metals",
                    "Rare Earth Elements",
                    "Pseudopotentials with Hubbard occupation"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "The second index of the Hubbard_occ array corresponds to the Hubbard manifold number. It is possible to specify up to three Hubbard manifolds per Hubbard atom. However, if you want to specify three manifolds then the second and the third manifolds will be considered as one effective manifold.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "assume_isolated",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-relax'",
                    "Cubic supercells",
                    "2D periodic systems in x-y plane",
                    "Isolated (non-periodic) systems",
                    "charged slabs",
                    "vacuum boundaries",
                    "electrode boundaries",
                    "optional electric field"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "none": "regular periodic calculation w/o any correction",
                    "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                    "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                    "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "esm_bc": "Used with esm to choose boundary conditions",
                    "esm_efield": "Used with esm for optional electric field",
                    "esm_w": "Related to esm",
                    "esm_nfit": "Related to esm",
                    "cell_dofree": "Should be set to \"2Dxy\" when using 2D option in vc-relax calculations"
                },
                "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "space_group",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 0
                },
                "Description": "space_group\nThe number of the space group of the crystal, as given in the International Tables of Crystallography A (ITA). This allows to give in input only the inequivalent atomic positions. The positions of all the symmetry equivalent atoms are calculated by the code.",
                "Possible_Usage_Conditions": [
                    "symmetry-defined crystal structure"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only when the atomic positions are of type crystal_sg",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "uniqueb": null,
                    "origin_choice": null,
                    "rhombohedral": null
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "origin_choice",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "origin_choice\nUsed only for space groups that in the ITA allow the use of two different origins. origin_choice=1, means the first origin, while origin_choice=2 is the second origin.",
                "Possible_Usage_Conditions": [
                    "symmetry-defined crystal structure"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only for space groups that in the ITA allow the use of two different origins",
                "Parameter_Value_Conditions": {
                    "1": "first origin",
                    "2": "second origin"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "relaxz",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "relaxz\nAllows the relaxation of the system towards the charged plate.",
                "Possible_Usage_Conditions": [
                    "Relaxation calculations",
                    "gate = .TRUE.",
                    "dipfield = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "used only if (gate = .TRUE.)",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "block": "Use with block=.TRUE. to create potential barrier to avoid atoms moving to plate position",
                    "dipfield": "Use with dipfield=.TRUE. to avoid atoms moving to dipole correction position"
                },
                "Final_comments": "Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "electron_maxstep",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 100
                },
                "Description": "electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "scf_must_converge",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": ".TRUE."
                },
                "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "electron_maxstep": "referenced when scf_must_converge is .false."
                },
                "Final_comments": "Use with care.",
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-6"
                },
                "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "diago_thr_init": "In nscf calculations, conv_thr is used to set the default value of the threshold (ethr) for iterative diagonalization"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "conv_thr_init",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-3"
                },
                "Description": "conv_thr_init\nWhen adaptive_thr = .TRUE. this is the convergence threshold used for the first scf cycle.",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used when adaptive_thr is set to .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "adaptive_thr": "Parameter is used when adaptive_thr = .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_mode",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "plain"
                },
                "Description": "mixing_mode\nControls the type of charge density mixing method",
                "Possible_Usage_Conditions": [
                    "homogeneous systems",
                    "inhomogeneous systems",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "plain": "charge density Broyden mixing",
                    "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                    "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "Used in SCF calculations",
                    "mixing_beta": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_beta",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.7D0"
                },
                "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                "Possible_Usage_Conditions": [
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "mixing_mode": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "efield_cart",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "(0.D0, 0.D0, 0.D0)"
                },
                "Description": "efield_cart(i), i=1,3\nFinite electric field (in Ry a.u.=36.3609*10^10 V/m) in cartesian axis.",
                "Possible_Usage_Conditions": [
                    "Automatic k-points",
                    "lelfield = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only if lelfield = .TRUE. and if k-points (K_POINTS card) are automatic.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "K_POINTS": "must be automatic",
                    "lelfield": "must be TRUE"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "startingwfc",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "atomic+random"
                },
                "Description": "startingwfc\nSpecifies how the initial wavefunctions are generated",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'",
                    "High symmetry systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "atomic": "Start from superposition of atomic orbitals. If not enough atomic orbitals are available, fill with random numbers the remaining wfcs. The scf typically starts better with this option, but in some high-symmetry cases one can \"loose\" valence states, ending up in the wrong ground state.",
                    "atomic+random": "As above, plus a superimposed \"randomization\" of atomic orbitals. Prevents the \"loss\" of states mentioned above.",
                    "random": "Start from random wfcs. Slower start of scf but safe. It may also reduce memory usage in conjunction with diagonalization='cg'.",
                    "file": "Start from an existing wavefunction file in the directory specified by parameters 'prefix' and 'outdir'."
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "diagonalization": "When startingwfc='random', it may reduce memory usage with diagonalization='cg'",
                    "prefix": "When startingwfc='file', uses directory specified by prefix",
                    "outdir": "When startingwfc='file', uses directory specified by outdir"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "ion_positions",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "default"
                },
                "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "",
                "Parameter_Value_Conditions": {
                    "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                    "from_input": "read atomic positions from standard input, even if restarting"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation=relax": "bfgs",
                    "calculation=md": "verlet",
                    "calculation=vc-relax": "bfgs",
                    "calculation=vc-md": "beeman"
                },
                "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                    "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                    "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                    "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                    "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                    "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                    "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "CONSTRAINTS": "can be used with 'damp' and 'fire' for constrained optimization, and with 'verlet' for constrained dynamics",
                    "cell_dynamics": "for vc-relax with 'bfgs', requires cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "wfc_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "first_order": "extrapolate the wave-functions with first-order formula",
                    "second_order": "extrapolate the wave-functions with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "remove_rigid_rot",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": "Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "ion_temperature\nControls the ionic temperature using different methods",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                    "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                    "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                    "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                    "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                    "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                    "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                    "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                    "not_controlled": "(default) ionic temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tempw": "used with most temperature control methods",
                    "nraise": "used with most temperature control methods",
                    "tolp": "used with rescaling method",
                    "delta_t": "used with rescale-T and reduce-T methods"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "delta_t",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D0"
                },
                "Description": "delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "positive": "when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling",
                    "negative": "when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_temperature": "must be either 'rescale-T' or 'reduce-T'",
                    "nraise": "used when ion_temperature = 'reduce-T'"
                },
                "Final_comments": "For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "refold_pos",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                "Possible_Usage_Conditions": [
                    "calculation = 'md'",
                    "calculation = 'relax'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'damp'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be 'md' or ion_dynamics must be 'damp'",
                    "ion_dynamics": "can be 'damp'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "upscale",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "conv_thr": "'conv_thr' is automatically reduced when the relaxation approaches convergence so that forces are still accurate, but 'conv_thr' will not be reduced to less that conv_thr / upscale"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "bfgs_ndim",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "1": "standard quasi-Newton BFGS method is used"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_max",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.8D0"
                },
                "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_min",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-3"
                },
                "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "trust_radius < trust_radius_min": "BFGS is reset"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be bfgs",
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_ini",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_1",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.01D0"
                },
                "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_2",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_alpha_init",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.2D0"
                },
                "Description": "fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": {
                    "0.1-0.3": "recommended values"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_falpha",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.99D0"
                },
                "Description": "fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_nmin",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 5
                },
                "Description": "fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_inc",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.1D0"
                },
                "Description": "fire_f_inc\nFactor for increasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_dec",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "fire_f_dec\nFactor for decreasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fcp_mu",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "constant chemical potential conditions"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if lfcp = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation = relax": "bfgs",
                    "calculation = md": "velocity-verlet"
                },
                "Description": "fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "calculation = 'relax'",
                    "newton": "calculation = 'relax'",
                    "damp": "calculation = 'relax'",
                    "lm": "calculation = 'relax'",
                    "velocity-verlet": "calculation = 'md'",
                    "verlet": "calculation = 'md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": {
                        "bfgs": "must be bfgs",
                        "newton": "must be damp",
                        "damp": "must be damp",
                        "lm": "must be damp",
                        "velocity-verlet": "must be verlet",
                        "verlet": "must be verlet"
                    }
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'",
                    "rescale-v": "control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "rescale-T": "control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'",
                    "reduce-T": "reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'",
                    "berendsen": "control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "andersen": "control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "initial": "initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on",
                    "not_controlled": "(default) FCP's temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_tempw": [
                        "rescaling",
                        "rescale-v",
                        "berendsen",
                        "andersen",
                        "initial"
                    ],
                    "fcp_tolp": [
                        "rescaling"
                    ],
                    "fcp_nraise": [
                        "rescale-v",
                        "reduce-T",
                        "berendsen",
                        "andersen"
                    ],
                    "fcp_delta_t": [
                        "rescale-T",
                        "reduce-T"
                    ]
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_delta_t",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from &IONS -> delta_t"
                },
                "Description": "fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_delta_t < 0": "For cooling/heating rate calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "&IONS": "reads default value from delta_t",
                    "fcp_nraise": "Used in reduce-T mode for step counting",
                    "fcp_temperature": "Determines mode of operation"
                },
                "Final_comments": "The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.",
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": "reads from nraise"
                },
                "Description": "fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_temperature = reduce-T": "every fcp_nraise steps temperature reduced by -fcp_delta_t",
                    "fcp_temperature = rescale-v": "every fcp_nraise steps average temperature rescaled to fcp_tempw",
                    "fcp_temperature = berendsen": "tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise",
                    "fcp_temperature = andersen": "nu*dt = 1/fcp_nraise"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_temperature": "determines how fcp_nraise is used",
                    "fcp_delta_t": "used when fcp_temperature = reduce-T",
                    "fcp_tempw": "used when fcp_temperature = rescale-v"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "nsolv",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nsolv\nThe number of solvents (i.e. molecular species) in the unit cell",
                "Possible_Usage_Conditions": [
                    "RISM calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if trism = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Parameter_Name": "ecutsolv",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "4 * ecutwfc"
                },
                "Description": "ecutsolv\nKinetic energy cutoff (Ry) for solvent's correlation functions.",
                "Possible_Usage_Conditions": [
                    "RISM calculations",
                    "Framework/porous systems",
                    "single atom/isolated systems",
                    "Slab systems",
                    "Systems with solvent-solute interactions"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if trism = .TRUE.",
                "Parameter_Value_Conditions": {
                    "default": "If a solute is an isolated system or slab",
                    "larger value": "For a frameworked or porous solute (e.g. Zeolite, MOF)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ecutwfc": "default value is 4 * ecutwfc"
                },
                "Final_comments": "Solvents confined in a framework often have a high frequency.",
                "Namelist": "&RISM"
            },
            {
                "Parameter_Name": "laue_starting_left",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.0
                },
                "Description": "laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.",
                "Possible_Usage_Conditions": [
                    "RISM calculations",
                    "Periodic systems",
                    "Laue boundary conditions",
                    "Systems with solvent-solute interactions"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if trism = .TRUE. and for Laue-RISM",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE.",
                    "laue_expand_left": "used in solvent region definition"
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Card_Name": "CONSTRAINTS",
                "Namelist": "Card: CONSTRAINTS",
                "Required/Optional": "optional",
                "Card_Options": [
                    "type_coord",
                    "atom_coord",
                    "distance",
                    "planar_angle",
                    "torsional_angle",
                    "bennett_proj",
                    "potential_wall"
                ],
                "Default_Option": null,
                "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                "Card_Use_Conditions": {
                    "calculation": [
                        "calculation = 'relax'",
                        "calculation = 'md'"
                    ],
                    "ion_dynamics": [
                        "damp",
                        "verlet"
                    ],
                    "not_compatible": [
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ]
                },
                "Card_Option_Given_Conditions": null,
                "Syntax_Given_Option": {
                    "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                    "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                    "distance": "constr_type distance constr(1) constr(2) constr_target",
                    "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                    "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                    "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                    "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                },
                "Item_Description": {
                    "nconstr": "The total number of constraints to be applied",
                    "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                    "constr_type": "Type of constraint"
                },
                "Item_Conditions": null,
                "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be set to 'damp' or 'verlet'"
                },
                "Final_comments": null,
                "Possible_Usage_Conditions": [
                    "ion_dynamics = 'verlet'",
                    "ion_dynamics = 'damp'"
                ]
            }
        ],
        "trimmed_documentation_string": [
            "Parameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"electron_maxstep\"\nDefault_Values:\n{\n  default:\n100\n}\nDescription:\n\"electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ecutsolv\"\nDefault_Values:\n{\n  default:\n\"4 * ecutwfc\"\n}\nDescription:\n\"ecutsolv\nKinetic energy cutoff (Ry) for solvent's correlation functions.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Framework/porous systems,\n  single atom/isolated systems,\n  Slab systems,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions:\n{\n  default:\n\"If a solute is an isolated system or slab\"\n  larger value:\n\"For a frameworked or porous solute (e.g. Zeolite, MOF)\"\n}\nFinal_comments:\n\"Solvents confined in a framework often have a high frequency.\"\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"remove_rigid_rot\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"exxdiv_treatment\"\nDefault_Values:\n{\n  default:\n\"gygi-baldereschi\"\n}\nDescription:\n\"exxdiv_treatment\nSpecific for EXX. It selects the kind of approach to be used for treating the Coulomb potential divergencies at small q vectors.\"\nPossible_Usage_Conditions: [\n  Exact exchange calculations,\n  Hybrid functionals with exact exchange,\n  Cubic supercells,\n  Quasi-cubic supercells,\n  Anisotropic supercells,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gygi-baldereschi:\n\"appropriate for cubic and quasi-cubic supercells\"\n  vcut_spherical:\n\"appropriate for cubic and quasi-cubic supercells\"\n  vcut_ws:\n\"appropriate for strongly anisotropic supercells\"\n  none:\n\"sets Coulomb potential at G,q=0 to 0.0 (required for GAU-PBE)\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"delta_t\"\nDefault_Values:\n{\n  default:\n\"1.D0\"\n}\nDescription:\n\"delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  positive:\n\"when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling\"\n  negative:\n\"when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps\"\n}\nFinal_comments:\n\"For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&IONS\"",
            "Card_Name:\n\"CONSTRAINTS\"\nNamelist:\n\"Card: CONSTRAINTS\"\nDescription:\n\"Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\"\nFinal_comments: None\nPossible_Usage_Conditions: [\n  ion_dynamics = 'verlet',\n  ion_dynamics = 'damp',\n]",
            "Parameter_Name:\n\"q2sigma\"\nDefault_Values:\n{\n  default:\n0.1\n}\nDescription:\n\"q2sigma\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). q2sigma is the width (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n]\nUsage_Conditions:\n\"Used in the kinetic energy calculation where G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"lorbm\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lorbm\nIf .TRUE. perform orbital magnetization calculation.\"\nPossible_Usage_Conditions: [\n  calculation = 'nscf',\n  norm-conserving pseudopotentials,\n  Uniform k-point grid,\n  Kubo terms,\n]\nUsage_Conditions:\n\"Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed.\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"relaxz\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"relaxz\nAllows the relaxation of the system towards the charged plate.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n  gate = .TRUE.,\n  dipfield = .TRUE.,\n]\nUsage_Conditions:\n\"used only if (gate = .TRUE.)\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"tefield\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.\"\nPossible_Usage_Conditions: [\n  Ground state calculations,\n  Relaxation calculations,\n  tefield = .TRUE.,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  True:\n\"A saw-like potential simulating an electric field is added to the bare ionic potential\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"noncolin\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"noncolin\nif .true. the program will perform a noncollinear calculation.\"\nPossible_Usage_Conditions: [\n  Relativistic pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"forc_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.0D-3\"\n}\nDescription:\n\"forc_conv_thr\nConvergence threshold on forces (a.u) for ionic minimization: the convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"celldm\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.\"\nPossible_Usage_Conditions: [\n  ibrav-defined crystal structure,\n]\nUsage_Conditions:\n\"Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified\"\nParameter_Value_Conditions:\n{\n  celldm(1):\n\"is the lattice parameter \"a\" (in BOHR)\"\n  celldm(1) when ibrav=0:\n\"only celldm(1) is used if present\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"etot_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.0D-4\"\n}\nDescription:\n\"etot_conv_thr\nConvergence threshold on total energy (a.u) for ionic minimization: the convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps. Note that 'etot_conv_thr' is extensive, like the total energy.\"\nPossible_Usage_Conditions: [\n  total energy calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"efield_cart\"\nDefault_Values:\n{\n  default:\n\"(0.D0, 0.D0, 0.D0)\"\n}\nDescription:\n\"efield_cart(i), i=1,3\nFinite electric field (in Ry a.u.=36.3609*10^10 V/m) in cartesian axis.\"\nPossible_Usage_Conditions: [\n  Automatic k-points,\n  lelfield = .TRUE.,\n]\nUsage_Conditions:\n\"Used only if lelfield = .TRUE. and if k-points (K_POINTS card) are automatic.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"qcutz\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"qcutz\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). qcutz is the height (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'. In the kinetic energy, G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n  variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"startingwfc\"\nDefault_Values:\n{\n  default:\n\"atomic+random\"\n}\nDescription:\n\"startingwfc\nSpecifies how the initial wavefunctions are generated\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  High symmetry systems,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  atomic:\n\"Start from superposition of atomic orbitals. If not enough atomic orbitals are available, fill with random numbers the remaining wfcs. The scf typically starts better with this option, but in some high-symmetry cases one can \"loose\" valence states, ending up in the wrong ground state.\"\n  atomic+random:\n\"As above, plus a superimposed \"randomization\" of atomic orbitals. Prevents the \"loss\" of states mentioned above.\"\n  random:\n\"Start from random wfcs. Slower start of scf but safe. It may also reduce memory usage in conjunction with diagonalization='cg'.\"\n  file:\n\"Start from an existing wavefunction file in the directory specified by parameters 'prefix' and 'outdir'.\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"tot_magnetization\"\nDefault_Values:\n{\n  default:\n-10000\n}\nDescription:\n\"tot_magnetization\nTotal majority spin charge - minority spin charge. Used to impose a specific total electronic magnetization.\"\nPossible_Usage_Conditions: [\n  nspin = 2,\n  Collinear spin,\n  Magnetic systems,\n]\nUsage_Conditions:\n\"If unspecified then tot_magnetization parameter is ignored and the amount of electronic magnetization is determined during the self-consistent (scf) cycle.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"lfcp\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  ESM calculations,\n  Constant bias potential calculations,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"'calculation' must be 'relax' or 'md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))\"\n}\nFinal_comments:\n\"The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.\"\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"origin_choice\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"origin_choice\nUsed only for space groups that in the ITA allow the use of two different origins. origin_choice=1, means the first origin, while origin_choice=2 is the second origin.\"\nPossible_Usage_Conditions: [\n  symmetry-defined crystal structure,\n]\nUsage_Conditions:\n\"Used only for space groups that in the ITA allow the use of two different origins\"\nParameter_Value_Conditions:\n{\n  1:\n\"first origin\"\n  2:\n\"second origin\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nspin\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nspin\nControls spin polarization type in calculations\"\nPossible_Usage_Conditions: [\n  nspin = 1,\n  nspin = 2,\n  Collinear magnetic calculations (LSDA),\n  Spin-polarized calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  1:\n\"non-polarized calculation\"\n  2:\n\"spin-polarized calculation, LSDA (magnetization along z axis)\"\n  4:\n\"spin-polarized calculation, noncollinear (magnetization in generic direction)\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"space_group\"\nDefault_Values:\n{\n  default:\n0\n}\nDescription:\n\"space_group\nThe number of the space group of the crystal, as given in the International Tables of Crystallography A (ITA). This allows to give in input only the inequivalent atomic positions. The positions of all the symmetry equivalent atoms are calculated by the code.\"\nPossible_Usage_Conditions: [\n  symmetry-defined crystal structure,\n]\nUsage_Conditions:\n\"Used only when the atomic positions are of type crystal_sg\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"conv_thr_init\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"conv_thr_init\nWhen adaptive_thr = .TRUE. this is the convergence threshold used for the first scf cycle.\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n]\nUsage_Conditions:\n\"Used when adaptive_thr is set to .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"Hubbard_occ\"\nDefault_Values:\n{\n  default:\n\"read from pseudopotentials\"\n}\nDescription:\n\"Hubbard_occ(ityp,i)\nHubbard occupations is the number of electrons in the Hubbard manifold. By default they are initialized by reading the occupations from pseudopotentials. If specified from the input, then the values read from the pseudopotentials will be overwritten.\"\nPossible_Usage_Conditions: [\n  DFT+U Hubbard correction,\n  LDA+U calculations,\n  Strongly correlated electrons,\n  Transition Metals,\n  Rare Earth Elements,\n  Pseudopotentials with Hubbard occupation,\n]\nUsage_Conditions:\n\"The second index of the Hubbard_occ array corresponds to the Hubbard manifold number. It is possible to specify up to three Hubbard manifolds per Hubbard atom. However, if you want to specify three manifolds then the second and the third manifolds will be considered as one effective manifold.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\""
        ],
        "qe_generation_template": "&CONTROL calculation, value: relax, value_type: character\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&CONTROL etot_conv_thr, value: 1.0D-4, value_type: real\n&CONTROL forc_conv_thr, value: 1.0D-3, value_type: real\n&SYSTEM ntyp, value: 1, value_type: integer\n&SYSTEM nosym_evc, value: False, value_type: logical\n&SYSTEM occupations, value: smearing, value_type: character\n&SYSTEM one_atom_occupations, value: True, value_type: logical\n&SYSTEM degauss, value: 0.D0, value_type: real\n&SYSTEM smearing, value: gaussian, value_type: character\n&SYSTEM nspin, value: 1, value_type: integer\n&SYSTEM Hubbard_occ, value: read from pseudopotentials, value_type: real\n&SYSTEM assume_isolated, value: none, value_type: character\n&SYSTEM relaxz, value: False, value_type: logical\n&ELECTRONS electron_maxstep, value: 100, value_type: integer\n&ELECTRONS scf_must_converge, value: .TRUE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-6, value_type: real\n&ELECTRONS conv_thr_init, value: 1.D-3, value_type: real\n&ELECTRONS mixing_mode, value: plain, value_type: character\n&ELECTRONS mixing_beta, value: 0.7D0, value_type: real\n&ELECTRONS startingwfc, value: atomic+random, value_type: character\n&IONS ion_positions, value: from_input, value_type: character\n&IONS wfc_extrapolation, value: first_order or second_order, value_type: character\n&IONS upscale, value: 100.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 0.8D0, value_type: real\n&IONS trust_radius_min, value: 1.D-3, value_type: real\n&IONS trust_radius_ini, value: 0.5D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS w_2, value: 0.5D0, value_type: real\n&IONS fire_alpha_init, value: 0.2D0, value_type: real\n&IONS fire_f_dec, value: 0.5D0, value_type: real\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n",
        "qe_initialization": "&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n",
        "generated_input": "qe_input=QeMatch(qe_input_gen=\"&CONTROL\\n    title = 'test'\\n    calculation = 'relax'\\n    tprnfor = .TRUE.\\n    etot_conv_thr = 1.0D-4\\n    forc_conv_thr = 1.0D-3\\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\\n/\\n\\n&SYSTEM\\n    ntyp = 1\\n    nosym_evc = False\\n    occupations = 'smearing'\\n    one_atom_occupations = True\\n    degauss = 0.001D0\\n    smearing = 'gaussian'\\n    nspin = 1\\n    ecutwfc = 35.0\\n    ecutrho = 140.0\\n    ibrav = 0\\n    nat = 1\\n/\\n\\n&ELECTRONS\\n    electron_maxstep = 100\\n    scf_must_converge = .TRUE.\\n    conv_thr = 1.D-6\\n    conv_thr_init = 1.D-3\\n    mixing_mode = 'plain'\\n    mixing_beta = 0.7D0\\n    startingwfc = 'atomic+random'\\n/\\n\\n&IONS\\n    ion_positions = 'from_input'\\n    wfc_extrapolation = 'first_order'\\n    upscale = 100.D0\\n    bfgs_ndim = 1\\n    trust_radius_max = 0.8D0\\n    trust_radius_min = 1.D-3\\n    trust_radius_ini = 0.5D0\\n    w_1 = 0.01D0\\n    w_2 = 0.5D0\\n    fire_alpha_init = 0.2D0\\n    fire_f_dec = 0.5D0\\n/\\n\\nATOMIC_SPECIES\\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\\n\\nATOMIC_POSITIONS angstrom\\nMo           0.0000000000       0.0000000000       0.0000000000 \\n\\nK_POINTS automatic\\n19 19 19 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n     -1.5796165621       1.5796165621       1.5796165621\\n      1.5796165621      -1.5796165621       1.5796165621\\n      1.5796165621       1.5796165621      -1.5796165621\\n\") error_msg=CrashErr(error_msg='smearing requires a value for gaussian broadening (degauss)\\ngaussian broadening, degauss\\nThe error message indicates that the smearing calculation in Quantum ESPRESSO requires a value for gaussian broadening, which is specified by the variable \"degauss\". It seems that this variable has not been set or has been set to an invalid value, causing the error.') solution_prompt='You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\\nThe USER created a Quantum Espresso input file:\\n<INPUT_FILE>\\n&CONTROL\\n    title = \\'test\\'\\n    calculation = \\'relax\\'\\n    tprnfor = .TRUE.\\n    etot_conv_thr = 1.0D-4\\n    forc_conv_thr = 1.0D-3\\n    pseudo_dir = \\'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp\\'\\n    outdir = \\'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir\\'\\n/\\n\\n&SYSTEM\\n    ntyp = 1\\n    nosym_evc = False\\n    occupations = \\'smearing\\'\\n    one_atom_occupations = True\\n    degauss = 0.D0\\n    smearing = \\'gaussian\\'\\n    nspin = 1\\n    ecutwfc = 35.0\\n    ecutrho = 140.0\\n    ibrav = 0\\n    nat = 1\\n/\\n\\n&ELECTRONS\\n    electron_maxstep = 100\\n    scf_must_converge = .TRUE.\\n    conv_thr = 1.D-6\\n    conv_thr_init = 1.D-3\\n    mixing_mode = \\'plain\\'\\n    mixing_beta = 0.7D0\\n    startingwfc = \\'atomic+random\\'\\n/\\n\\n&IONS\\n    ion_positions = \\'from_input\\'\\n    wfc_extrapolation = \\'first_order\\'\\n    upscale = 100.D0\\n    bfgs_ndim = 1\\n    trust_radius_max = 0.8D0\\n    trust_radius_min = 1.D-3\\n    trust_radius_ini = 0.5D0\\n    w_1 = 0.01D0\\n    w_2 = 0.5D0\\n    fire_alpha_init = 0.2D0\\n    fire_f_dec = 0.5D0\\n/\\n\\nATOMIC_SPECIES\\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\\n\\nATOMIC_POSITIONS angstrom\\nMo           0.0000000000       0.0000000000       0.0000000000 \\n\\nK_POINTS automatic\\n19 19 19 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n     -1.5796165621       1.5796165621       1.5796165621\\n      1.5796165621      -1.5796165621       1.5796165621\\n      1.5796165621       1.5796165621      -1.5796165621\\n\\n</INPUT_FILE>\\n\\nHowever, the USER received the following error message after running the Quantum Espresso calculations:\\n\\n<ERROR_MESSAGE>\\nsmearing requires a value for gaussian broadening (degauss)\\ngaussian broadening, degauss\\nThe error message indicates that the smearing calculation in Quantum ESPRESSO requires a value for gaussian broadening, which is specified by the variable \"degauss\". It seems that this variable has not been set or has been set to an invalid value, causing the error. \\n</ERROR_MESSAGE>\\n\\nThe USER provided the following documentation for modifying the Quantum Espresso input file:\\n<DOCUMENTATION>\\nParameter_Name:\\n\"degauss_cond\"\\nDescription:\\n\"degauss_cond\\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\\nPossible_Usage_Conditions: [\\n  Two-chemical-potential calculations,\\n  Smearing method,\\n]\\nUsage_Conditions:\\n\"Used in two-chemical potential calculations when twochem = .True.\"\\nParameter_Value_Conditions: None\\nRelationships_Conditions_to_Other_Parameters_Cards:\\n{\\n  twochem:\\n\"Parameter is used when twochem = .True.\"\\n}\\nFinal_comments: None\\nParameter_Name:\\n\"degauss\"\\nDescription:\\n\"degauss\\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\\nPossible_Usage_Conditions: [\\n  calculation = \\'bands\\',\\n  Metallic systems,\\n  partial occupations,\\n  occupations = \\'smearing\\',\\n]\\nUsage_Conditions: None\\nParameter_Value_Conditions: None\\nRelationships_Conditions_to_Other_Parameters_Cards:\\n{\\n\\n}\\nFinal_comments: None\\nParameter_Name:\\n\"smearing\"\\nDescription:\\n\"smearing\\nControls the type of smearing method to be used\"\\nPossible_Usage_Conditions: [\\n  Metallic systems,\\n  Semiconductor systems,\\n  partial occupations,\\n  Smearing method,\\n]\\nUsage_Conditions: None\\nParameter_Value_Conditions:\\n{\\n  gaussian/gauss:\\n\"ordinary Gaussian spreading\"\\n  methfessel-paxton/m-p/mp:\\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\\n  marzari-vanderbilt/cold/m-v/mv:\\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\\n  fermi-dirac/f-d/fd:\\n\"smearing with Fermi-Dirac function, f-d, fd\"\\n}\\nRelationships_Conditions_to_Other_Parameters_Cards:\\n{\\n  occupations:\\n\"gaussian smearing for metals occupations=\\'smearing\\'\"\\n  degauss:\\n\"used in Gaussian smearing\"\\n  nspin:\\n\"for spin-polarized calculations\"\\n  constrained_magnetization:\\n\"for magnetic calculations\"\\n}\\nFinal_comments: None\\n</DOCUMENTATION>\\n\\n<RULES>\\n- Not all documentation paths are relevant to the query.\\n- Select the most relevant documentation to the error message.\\n- You are allowed to remove or add a parameter if necessary.\\n- The namelists &CONTROL, &SYSTEM, &ELECTRONS, must be in this order exactly\\n- Do not changed or modified these namelists: ibrav, K_POINTS, CELL_PARAMETERS, ATOMIC_SPECIES, ATOMIC_POSITIONS.\\n</RULES>\\n\\n<TASK>\\n- Explain the error message and the corrections that are necessary to fix the error message, based on INPUT_FILE and documentation and ERROR_MESSAGE \\n- Is there any unnecessary variable in the input file that is not requested or needed or contradicting with existing parameter? If yes, remove it.\\n- Make sure that each variable is in the correct namelist, and the values are correct.\\n- Apply the corrections that are necessary to fix the error message, by adding, removing, or displacing the variables, as necessary.\\n- Review the code to see how the generated code followed the given instructions.\\n</TASK>\\n\\n<OUTPUT>\\n- Put the fixed code blocks in ```fortran and ```.\\n</OUTPUT>\\n' solution=SOLUTION(solution='The error message indicates that the smearing calculation in Quantum ESPRESSO requires a value for gaussian broadening, which is specified by the variable \"degauss\". However, this variable is not set in the input file provided by the user.\\n\\nAccording to the documentation, the \"degauss\" parameter is used in Gaussian smearing and is required for metallic systems, semiconductor systems, and partial occupations when the \"smearing\" method is used. In the input file, the \"smearing\" method is set to \"gaussian\", so the \"degauss\" parameter is necessary.\\n\\nTo fix the error, we need to add the \"degauss\" parameter to the input file. Based on the documentation, we can set the value of \"degauss\" to a small positive number, such as 0.001 Ry. Here is the corrected input file:\\n\\n```fortran\\n&CONTROL\\n    title = \\'test\\'\\n    calculation = \\'relax\\'\\n    tprnfor = .TRUE.\\n    etot_conv_thr = 1.0D-4\\n    forc_conv_thr = 1.0D-3\\n    pseudo_dir = \\'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp\\'\\n    outdir = \\'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir\\'\\n/\\n\\n&SYSTEM\\n    ntyp = 1\\n    nosym_evc = False\\n    occupations = \\'smearing\\'\\n    one_atom_occupations = True\\n    degauss = 0.001D0\\n    smearing = \\'gaussian\\'\\n    nspin = 1\\n    ecutwfc = 35.0\\n    ecutrho = 140.0\\n    ibrav = 0\\n    nat = 1\\n/\\n\\n&ELECTRONS\\n    electron_maxstep = 100\\n    scf_must_converge = .TRUE.\\n    conv_thr = 1.D-6\\n    conv_thr_init = 1.D-3\\n    mixing_mode = \\'plain\\'\\n    mixing_beta = 0.7D0\\n    startingwfc = \\'atomic+random\\'\\n/\\n\\n&IONS\\n    ion_positions = \\'from_input\\'\\n    wfc_extrapolation = \\'first_order\\'\\n    upscale = 100.D0\\n    bfgs_ndim = 1\\n    trust_radius_max = 0.8D0\\n    trust_radius_min = 1.D-3\\n    trust_radius_ini = 0.5D0\\n    w_1 = 0.01D0\\n    w_2 = 0.5D0\\n    fire_alpha_init = 0.2D0\\n    fire_f_dec = 0.5D0\\n/\\n\\nATOMIC_SPECIES\\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\\n\\nATOMIC_POSITIONS angstrom\\nMo           0.0000000000       0.0000000000       0.0000000000 \\n\\nK_POINTS automatic\\n19 19 19 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n     -1.5796165621       1.5796165621       1.5796165621\\n      1.5796165621      -1.5796165621       1.5796165621\\n      1.5796165621       1.5796165621      -1.5796165621\\n```\\n\\nIn this corrected input file, the \"degauss\" parameter is added to the &SYSTEM namelist with a value of 0.001 Ry. This should fix the error message and allow the Quantum ESPRESSO calculation to proceed.')",
        "error_msg": [
            "smearing requires a vaklue for gaussian broadening (degauss)"
        ],
        "log_qe_gen_prompt": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nCreate a Quantum Espresso input file for 'Relaxation calculations\ncalculation = 'relax'\nGround state calculations\ncalculation = 'scf'\nPseudopotential calculations\nPlane-wave basis set calculations\nSmearing method calculations\nMixing parameter calculations\nK-point grid calculations\nBrillouin zone sampling calculations\nTotal energy calculations' calculation of 'Mo' compound, based on the given CONTEXT and DETAILS.\n\n<CONTEXT>\n&CONTROL title = 'test'\n\n&CONTROL calculation, value: relax, value_type: character\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&CONTROL etot_conv_thr, value: 1.0D-4, value_type: real\n&CONTROL forc_conv_thr, value: 1.0D-3, value_type: real\n&SYSTEM ntyp, value: 1, value_type: integer\n&SYSTEM nosym_evc, value: False, value_type: logical\n&SYSTEM occupations, value: smearing, value_type: character\n&SYSTEM one_atom_occupations, value: True, value_type: logical\n&SYSTEM degauss, value: 0.D0, value_type: real\n&SYSTEM smearing, value: gaussian, value_type: character\n&SYSTEM nspin, value: 1, value_type: integer\n&SYSTEM Hubbard_occ, value: read from pseudopotentials, value_type: real\n&SYSTEM assume_isolated, value: none, value_type: character\n&SYSTEM relaxz, value: False, value_type: logical\n&ELECTRONS electron_maxstep, value: 100, value_type: integer\n&ELECTRONS scf_must_converge, value: .TRUE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-6, value_type: real\n&ELECTRONS conv_thr_init, value: 1.D-3, value_type: real\n&ELECTRONS mixing_mode, value: plain, value_type: character\n&ELECTRONS mixing_beta, value: 0.7D0, value_type: real\n&ELECTRONS startingwfc, value: atomic+random, value_type: character\n&IONS ion_positions, value: from_input, value_type: character\n&IONS wfc_extrapolation, value: first_order or second_order, value_type: character\n&IONS upscale, value: 100.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 0.8D0, value_type: real\n&IONS trust_radius_min, value: 1.D-3, value_type: real\n&IONS trust_radius_ini, value: 0.5D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS w_2, value: 0.5D0, value_type: real\n&IONS fire_alpha_init, value: 0.2D0, value_type: real\n&IONS fire_f_dec, value: 0.5D0, value_type: real\n&SYSTEM ecutwfc = 35.0\n&SYSTEM ecutrho = 140.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 1\n----------\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n\n\n</CONTEXT>\n\n<DETAILS>\nCalculate relaxation of the structure based on relax calculation for a single molybdenium atom in a body-centered cubic (BCC) lattice, using\na pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</DETAILS>\n\n<RULES>\n- Write the input file for the given calculation type\n- Set the value of the variables based on the CONTEXT and the DETAILS\n- Use only relevant parameters based on the CONTEXT, DETAILS\n- Each parameter should be under correct namelist\n- Each parameter should have a correct value type such as integer, real, character, or logical\n- The namelists &CONTROL, &SYSTEM, &ELECTRONS, must be in this order exactly\n- The cards ATOMIC_SPECIES, ATOMIC_POSITIONS, K_POINTS, and CELL_PARAMETERS must be present and based on CONTEXT and DETAILS\n- In &CONTROL should have 'pseudo_dir': /home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp and 'outdir':'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir' defined, according to the given CONTEXT\n</RULES>\n\n<OUTPUT>\n- Write the input file\n- Put the code blocks in ```fortran and ```.\n- Review the code to see how the generated code followed the RULES, CONTEXT, and DETAILS, then give some explanation.\n</OUTPUT>\n"
        ],
        "log_qe_input": [
            "&CONTROL\n    title = 'test'\n    calculation = 'relax'\n    tprnfor = .TRUE.\n    etot_conv_thr = 1.0D-4\n    forc_conv_thr = 1.0D-3\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n/\n\n&SYSTEM\n    ntyp = 1\n    nosym_evc = False\n    occupations = 'smearing'\n    one_atom_occupations = True\n    degauss = 0.D0\n    smearing = 'gaussian'\n    nspin = 1\n    ecutwfc = 35.0\n    ecutrho = 140.0\n    ibrav = 0\n    nat = 1\n/\n\n&ELECTRONS\n    electron_maxstep = 100\n    scf_must_converge = .TRUE.\n    conv_thr = 1.D-6\n    conv_thr_init = 1.D-3\n    mixing_mode = 'plain'\n    mixing_beta = 0.7D0\n    startingwfc = 'atomic+random'\n/\n\n&IONS\n    ion_positions = 'from_input'\n    wfc_extrapolation = 'first_order'\n    upscale = 100.D0\n    bfgs_ndim = 1\n    trust_radius_max = 0.8D0\n    trust_radius_min = 1.D-3\n    trust_radius_ini = 0.5D0\n    w_1 = 0.01D0\n    w_2 = 0.5D0\n    fire_alpha_init = 0.2D0\n    fire_f_dec = 0.5D0\n/\n\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n",
            "&CONTROL\n    title = 'test'\n    calculation = 'relax'\n    tprnfor = .TRUE.\n    etot_conv_thr = 1.0D-4\n    forc_conv_thr = 1.0D-3\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n/\n\n&SYSTEM\n    ntyp = 1\n    nosym_evc = False\n    occupations = 'smearing'\n    one_atom_occupations = True\n    degauss = 0.001D0\n    smearing = 'gaussian'\n    nspin = 1\n    ecutwfc = 35.0\n    ecutrho = 140.0\n    ibrav = 0\n    nat = 1\n/\n\n&ELECTRONS\n    electron_maxstep = 100\n    scf_must_converge = .TRUE.\n    conv_thr = 1.D-6\n    conv_thr_init = 1.D-3\n    mixing_mode = 'plain'\n    mixing_beta = 0.7D0\n    startingwfc = 'atomic+random'\n/\n\n&IONS\n    ion_positions = 'from_input'\n    wfc_extrapolation = 'first_order'\n    upscale = 100.D0\n    bfgs_ndim = 1\n    trust_radius_max = 0.8D0\n    trust_radius_min = 1.D-3\n    trust_radius_ini = 0.5D0\n    w_1 = 0.01D0\n    w_2 = 0.5D0\n    fire_alpha_init = 0.2D0\n    fire_f_dec = 0.5D0\n/\n\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n"
        ],
        "log_qe_solution": [
            "The error message indicates that the smearing calculation in Quantum ESPRESSO requires a value for gaussian broadening, which is specified by the variable \"degauss\". However, this variable is not set in the input file provided by the user.\n\nAccording to the documentation, the \"degauss\" parameter is used in Gaussian smearing and is required for metallic systems, semiconductor systems, and partial occupations when the \"smearing\" method is used. In the input file, the \"smearing\" method is set to \"gaussian\", so the \"degauss\" parameter is necessary.\n\nTo fix the error, we need to add the \"degauss\" parameter to the input file. Based on the documentation, we can set the value of \"degauss\" to a small positive number, such as 0.001 Ry. Here is the corrected input file:\n\n```fortran\n&CONTROL\n    title = 'test'\n    calculation = 'relax'\n    tprnfor = .TRUE.\n    etot_conv_thr = 1.0D-4\n    forc_conv_thr = 1.0D-3\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n/\n\n&SYSTEM\n    ntyp = 1\n    nosym_evc = False\n    occupations = 'smearing'\n    one_atom_occupations = True\n    degauss = 0.001D0\n    smearing = 'gaussian'\n    nspin = 1\n    ecutwfc = 35.0\n    ecutrho = 140.0\n    ibrav = 0\n    nat = 1\n/\n\n&ELECTRONS\n    electron_maxstep = 100\n    scf_must_converge = .TRUE.\n    conv_thr = 1.D-6\n    conv_thr_init = 1.D-3\n    mixing_mode = 'plain'\n    mixing_beta = 0.7D0\n    startingwfc = 'atomic+random'\n/\n\n&IONS\n    ion_positions = 'from_input'\n    wfc_extrapolation = 'first_order'\n    upscale = 100.D0\n    bfgs_ndim = 1\n    trust_radius_max = 0.8D0\n    trust_radius_min = 1.D-3\n    trust_radius_ini = 0.5D0\n    w_1 = 0.01D0\n    w_2 = 0.5D0\n    fire_alpha_init = 0.2D0\n    fire_f_dec = 0.5D0\n/\n\nATOMIC_SPECIES\nMo     95.96 Mo_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nMo           0.0000000000       0.0000000000       0.0000000000 \n\nK_POINTS automatic\n19 19 19 0 0 0\n\nCELL_PARAMETERS angstrom\n     -1.5796165621       1.5796165621       1.5796165621\n      1.5796165621      -1.5796165621       1.5796165621\n      1.5796165621       1.5796165621      -1.5796165621\n```\n\nIn this corrected input file, the \"degauss\" parameter is added to the &SYSTEM namelist with a value of 0.001 Ry. This should fix the error message and allow the Quantum ESPRESSO calculation to proceed."
        ],
        "rest_formula_data": {
            "formula": "Mo",
            "k_points_2d": "None",
            "uuid": "8b28a1fa-c158-4154-a921-06867fea585c",
            "ase_atom_object": "Atoms(symbols='Mo', pbc=True, cell=[[-1.5796165621, 1.5796165621, 1.5796165621], [1.5796165621, -1.5796165621, 1.5796165621], [1.5796165621, 1.5796165621, -1.5796165621]])",
            "indx": "None"
        },
        "workflow_log": [
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Interface agent",
                    "start_time": "2025-02-10 17:06:27"
                },
                "timestamp": "2025-02-10 17:06:27.003056",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:06:27",
                    "end_time": "2025-02-10 17:06:28",
                    "message": "Interface agent"
                },
                "timestamp": "2025-02-10 17:06:28.718360",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "3D structure generation",
                    "start_time": "2025-02-10 17:06:28"
                },
                "timestamp": "2025-02-10 17:06:28.718441",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:06:28",
                    "end_time": "2025-02-10 17:06:30",
                    "message": "3D structure generation"
                },
                "timestamp": "2025-02-10 17:06:30.445879",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Starting Quantum Espresso documentation collection",
                    "start_time": "2025-02-10 17:06:30"
                },
                "timestamp": "2025-02-10 17:06:30.445950",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:06:30",
                    "end_time": "2025-02-10 17:06:33",
                    "message": "Quantum Espresso documentation collection"
                },
                "timestamp": "2025-02-10 17:06:33.184168",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso condition extraction",
                    "start_time": "2025-02-10 17:06:33"
                },
                "timestamp": "2025-02-10 17:06:33.184226",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:06:33",
                    "end_time": "2025-02-10 17:07:12",
                    "message": "Quantum Espresso condition extraction"
                },
                "timestamp": "2025-02-10 17:07:12.585098",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Parameter graph generation",
                    "start_time": "2025-02-10 17:07:12"
                },
                "timestamp": "2025-02-10 17:07:12.585279",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:07:12",
                    "end_time": "2025-02-10 17:07:12",
                    "message": "Parameter graph generation"
                },
                "timestamp": "2025-02-10 17:07:12.591516",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Documentation collection for trimmed parameters",
                    "start_time": "2025-02-10 17:07:12"
                },
                "timestamp": "2025-02-10 17:07:12.591576",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:07:12",
                    "end_time": "2025-02-10 17:07:12",
                    "message": "Documentation collection for trimmed parameters"
                },
                "timestamp": "2025-02-10 17:07:12.593253",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input parameter evaluation",
                    "start_time": "2025-02-10 17:07:12"
                },
                "timestamp": "2025-02-10 17:07:12.593303",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:07:12",
                    "end_time": "2025-02-10 17:09:37",
                    "message": "Quantum Espresso input parameter evaluation"
                },
                "timestamp": "2025-02-10 17:09:37.167282",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation template",
                    "start_time": "2025-02-10 17:09:37"
                },
                "timestamp": "2025-02-10 17:09:37.167419",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:09:37",
                    "end_time": "2025-02-10 17:09:37",
                    "message": "Quantum Espresso input generation template"
                },
                "timestamp": "2025-02-10 17:09:37.176704",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation",
                    "start_time": "2025-02-10 17:09:37"
                },
                "timestamp": "2025-02-10 17:09:37.176766",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:09:37",
                    "end_time": "2025-02-10 17:09:47",
                    "message": "Quantum Espresso input generation"
                },
                "timestamp": "2025-02-10 17:09:47.572886",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso is initializing",
                    "start_time": "2025-02-10 17:09:47"
                },
                "timestamp": "2025-02-10 17:09:47.572963",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.ERROR",
                    "start_time": "2025-02-10 17:09:47",
                    "end_time": "2025-02-10 17:09:48",
                    "message": "Quantum Espresso calculation failed: "
                },
                "timestamp": "2025-02-10 17:09:48.970691",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.RETRY",
                    "start_time": "2025-02-10 17:09:48",
                    "message": "Retrying with current model"
                },
                "timestamp": "2025-02-10 17:09:48.970886",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Finding a solution for the QE crash",
                    "start_time": "2025-02-10 17:09:48"
                },
                "timestamp": "2025-02-10 17:09:48.970949",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:09:48",
                    "end_time": "2025-02-10 17:10:01",
                    "message": "Found a solution for the QE crash"
                },
                "timestamp": "2025-02-10 17:10:01.082736",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso is initializing",
                    "start_time": "2025-02-10 17:10:01"
                },
                "timestamp": "2025-02-10 17:10:01.082913",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 17:10:01",
                    "end_time": "2025-02-10 17:11:01",
                    "message": "Quantum Espresso calculation completed successfully"
                },
                "timestamp": "2025-02-10 17:11:01.216978",
                "level": "INFO"
            }
        ],
        "workflow_state": "FINISHED"
    }
]
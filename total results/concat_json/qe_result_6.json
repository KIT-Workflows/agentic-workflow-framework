[
    {
        "project_signature": "test",
        "calculation_description": "Calculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
        "analysis_dict": {
            "description": "Calculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
            "formula": "ZrCl2",
            "database": "mc2d"
        },
        "get_conditions_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCalculation_types\n- Berry phase calculations\n- Constant bias potential calculations\n- DOS calculations\n- Dynamical Mean Field Theory\n- Dynamics calculations\n- ESM calculations\n- FCP calculations\n- GC-SCF calculations\n- Ground state calculations\n- HP code calculations\n- LDA+U calculations\n- Linear-response calculations\n- Relaxation calculations\n- Two-chemical-potential calculations\n- calculation = 'bands'\n- calculation = 'md'\n- calculation = 'nscf'\n- calculation = 'relax'\n- calculation = 'scf'\n- calculation = 'vc-md'\n- calculation = 'vc-relax'\n- charge density calculations\n- dispersion correction calculations\n- stress calculations\n- total energy calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nFunctional_and_method_types\n- BEEF-type functionals\n- Conjugate gradient diagonalization\n- Davidson diagonalization\n- PPCG diagonalization\n- Paro diagonalization\n- RMM-DIIS diagonalization\n- DFT-D calculations\n- DFT-D2 calculations\n- DFT-D3 calculations\n- Exact exchange calculations\n- Exchange-correlation functional\n- Exchange-hole dipole-moment model\n- Gradient-corrected functionals\n- Hybrid functional calculations\n- Hybrid functionals with exact exchange\n- Many-body dispersion (MBD) corrections\n- Parrinello-Rahman MD\n- Scissor operator corrections\n- Tkatchenko-Scheffler dispersion corrections\n- Wentzcovitch MD\n- functional is NOT one of: B86bPBE, PW86PBE, PBE, BLYP\n- gammaDFT calculations\n- input_dft='PBE0', 'B3LYP'\n- ion_dynamics = 'bfgs'\n- ion_dynamics = 'fire'\n- ion_dynamics = 'verlet'\n- ion_dynamics = 'damp'\n- long-range interactions\n- Non-collinear calculations\n- spin-orbit calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCell_and_material_properties\n- 2D periodic systems in x-y plane\n- Anisotropic supercells\n- Bravais lattice structure (values 0 to 14)\n- Correlated orbitals\n- Cubic supercells\n- DOS of materials\n- Fixed cell calculations\n- Framework/porous systems\n- Hard FFT grid\n- High symmetry systems\n- Insulating systems\n- Low-symmetry large cells\n- Materials like graphite\n- Materials with long-range interaction\n- Metallic systems\n- Monoclinic systems\n- Non-periodic systems\n- Periodic systems\n- Quasi-cubic supercells\n- Rare Earth Elements\n- Semiconductor systems\n- Slab systems\n- Smooth FFT grid\n- Strongly correlated electrons\n- Transition Metals\n- Variable cell calculations\n- charged cells\n- homogeneous systems\n- ibrav = -12\n- ibrav = -13\n- ibrav-defined crystal structure\n- ibrav = 5\n- ibrav = 0\n- inhomogeneous systems\n- non-symmorphic symmetry operations\n- periodic cell with defined z-direction\n- rhombohedral space group\n- single atom/isolated systems\n- symmetry-defined crystal structure\n- variable cell calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nPseudopotential_types\n- PAW sets\n- Pseudopotentials with Hubbard occupation\n- Relativistic pseudopotentials\n- UPF pseudopotentials\n- Ultrasoft pseudopotentials\n- nonlocal pseudopotentials\n- norm-conserving pseudopotentials\n- pseudopotential tables\n- pseudopotentials with spin-orbit coupling\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nMagnetism_and_Spin_conditions\n- Collinear magnetic calculations (LSDA)\n- Collinear spin\n- Constrained magnetization\n- Initial magnetization\n- Magnetic systems\n- Non-collinear magnetic calculations\n- Spin-orbit coupling\n- Spin-polarized calculations\n- lspinorb = .True.\n- nspin = 1\n- nspin = 2\n- starting_magnetization=0.0\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nIsolated_systems_and_boundary_conditions\n- Dielectric environment\n- Isolated (non-periodic) systems\n- Laue boundary conditions\n- Laue-RISM calculations\n- Systems using Reference Interaction Site Model (RISM)\n- Systems with solvent regions\n- Systems with solvent-solute interactions\n- assume_isolated must be set to 'esm'\n- charged slabs\n- constant chemical potential conditions\n- electrode boundaries\n- laue_wall != 'none'\n- vacuum boundaries\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nk_point_settings\n- Automatic k-points\n- Monkhorst-Pack grid\n- Non-automatic k-points\n- Single k-point\n- Uniform k-point grid\n- custom k-points\n- full BZ coverage\n- nosym k-points\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nElectric_field_conditions\n- 0 < emaxpos < 1\n- Kubo terms\n- System with electric field\n- block = .TRUE.\n- dielectrically consistent RISM (DRISM)\n- dipfield = .TRUE.\n- gate = .TRUE.\n- lelfield = .TRUE.\n- lfcp = .TRUE.\n- optional electric field\n- tefield = .TRUE.\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nOccupation_types\n- Fixed occupations\n- Smearing method\n- Grand canonical ensemble\n- Linear tetrahedron method\n- Optimized tetrahedron method\n- DFT+U Hubbard correction\n- DFT+U+V Hubbard correction\n- DFT+U+J Hubbard correction\n- Systems with empty states\n- Tetrahedron method (Bloechl's version)\n- occupations = 'from_input'\n- occupations = 'smearing'\n- partial occupations\n- valence and conduction manifolds\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "condition_tables": "                                       Item  ...                                     Final_comments\n0                         Calculation_types  ...  The calculation is set up to perform a relaxat...\n1               Functional_and_method_types  ...  The calculation uses a pseudopotential and a p...\n2              Cell_and_material_properties  ...  The calculation is set up to relax the structu...\n3                     Pseudopotential_types  ...  The calculation uses a pseudopotential, but th...\n4             Magnetism_and_Spin_conditions  ...  The calculation description does not explicitl...\n5  Isolated_systems_and_boundary_conditions  ...  The calculation is set up for a periodic syste...\n6                          k_point_settings  ...  The calculation uses a pseudopotential and a p...\n7                 Electric_field_conditions  ...  The provided tags seem to be related to electr...\n8                          Occupation_types  ...  The calculation uses a smearing method for the...\n\n[9 rows x 4 columns]",
        "relevant_conditions": [
            "norm-conserving pseudopotentials",
            "Isolated_systems_and_boundary_conditions",
            "long-range interactions",
            "High symmetry systems",
            "Variable cell calculations",
            "ion_dynamics = 'verlet'",
            "Smearing method",
            "Bravais lattice structure (values 0 to 14)",
            "Transition Metals",
            "2D periodic systems in x-y plane",
            "input_dft='PBE0', 'B3LYP'",
            "Exchange-correlation functional",
            "assume_isolated must be set to 'esm'",
            "nspin = 1",
            "stress calculations",
            "nspin = 2",
            "full BZ coverage",
            "occupations = 'smearing'",
            "Monoclinic systems",
            "Ground state calculations",
            "Monkhorst-Pack grid",
            "Pseudopotential_types",
            "k_point_settings",
            "periodic cell with defined z-direction",
            "Anisotropic supercells",
            "Fixed cell calculations",
            "ion_dynamics = 'bfgs'",
            "Periodic systems",
            "Slab systems",
            "UPF pseudopotentials",
            "vacuum boundaries",
            "Relaxation calculations",
            "Materials like graphite",
            "Insulating systems",
            "total energy calculations",
            "calculation = 'relax'"
        ],
        "parameter_evaluation_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_dtmax\"\nDefault_Values:\n{\n  default:\n\"10.D0\"\n}\nDescription:\n\"fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-2\"\n}\nDescription:\n\"fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mass\"\nDefault_Values:\n{\n  default: None\n  ESM:\n\"5.D+6 / (xy area)\"\n  ESM-RISM:\n\"5.D+4 / (xy area)\"\n}\nDescription:\n\"fcp_mass\nMass of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tolp\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_velocity\"\nDefault_Values:\n{\n  default:\n\"determined by fcp_temperature\"\n}\nDescription:\n\"fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_ndiis\"\nDefault_Values:\n{\n  default:\n4\n}\nDescription:\n\"fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tempw\"\nDefault_Values:\n{\n  default:\n\"300.D0\"\n}\nDescription:\n\"tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nbnd\"\nDefault_Values:\n{\n  insulator:\n\"number of valence bands (number_of_electrons/2)\"\n  metal:\n\"(number of valence bands)*1.2\"\n}\nDescription:\n\"nbnd\nNumber of electronic states (bands) to be calculated.\"\nPossible_Usage_Conditions: [\n  Insulating systems,\n  Metallic systems,\n  Spin-polarized calculations,\n]\nUsage_Conditions:\n\"Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nCard_Name:\n\"CONSTRAINTS\"\nNamelist:\n\"Card: CONSTRAINTS\"\nDescription:\n\"Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\"\nFinal_comments: None\nPossible_Usage_Conditions: [\n  ion_dynamics = 'verlet',\n  ion_dynamics = 'damp',\n]\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_tolp\"\nDefault_Values:\n{\n  default:\n\"reads from tolp\"\n}\nDescription:\n\"fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nraise\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  nraise*dt:\n\"when ion_temperature = 'berendsen' or 'svr'\"\n  1/nraise:\n\"when ion_temperature = 'andersen'\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"esm_bc\"\nDefault_Values:\n{\n  default:\n\"pbc\"\n}\nDescription:\n\"esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.\"\nPossible_Usage_Conditions: [\n  ESM calculations,\n  Slab systems,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"Used when assume_isolated = 'esm'\"\nParameter_Value_Conditions:\n{\n  pbc:\n\"regular periodic calculation (no ESM)\"\n  bc1:\n\"Vacuum-slab-vacuum (open boundary conditions)\"\n  bc2:\n\"Metal-slab-metal (dual electrode configuration)\"\n  bc3:\n\"Vacuum-slab-metal\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym\nControls whether symmetry is used in calculations\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Low-symmetry large cells,\n  Isolated (non-periodic) systems,\n  custom k-points,\n  nosym k-points,\n  full BZ coverage,\n]\nUsage_Conditions:\n\"When .TRUE., symmetry is not used affecting k-points handling and charge density calculations\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"Disables symmetry usage, k-points list used as is, no symmetry-inequivalent k-points generation, no charge density symmetrization\"\n}\nFinal_comments:\n\"Do not use this option unless you know exactly what you want and what you get\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_tempw\"\nDefault_Values:\n{\n  default:\n\"reads from tempw\"\n}\nDescription:\n\"fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"pot_extrapolation\"\nDefault_Values:\n{\n  default:\n\"atomic\"\n}\nDescription:\n\"pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  atomic:\n\"extrapolate the potential as if it was a sum of atomic-like orbitals\"\n  first_order:\n\"extrapolate the potential with first-order formula\"\n  second_order:\n\"extrapolate the potential with second order formula\"\n}\nFinal_comments:\n\"'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"cell_dynamics\"\nDefault_Values:\n{\n  default: None\n  vc-relax:\n\"bfgs\"\n}\nDescription:\n\"cell_dynamics\nSpecify the type of dynamics for the cell.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions:\n{\n  none:\n\"no dynamics (both vc-relax and vc-md)\"\n  damp-pr:\n\"damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)\"\n  damp-w:\n\"damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)\"\n  bfgs:\n\"BFGS quasi-newton algorithm (vc-relax)\"\n  pr:\n\"(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)\"\n  w:\n\"(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)\"\n}\nFinal_comments: None\nNamelist:\n\"&CELL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"gcscf_beta\"\nDefault_Values:\n{\n  default:\n\"0.05D0\"\n}\nDescription:\n\"gcscf_beta\nMixing factor for GC-SCF.\"\nPossible_Usage_Conditions: [\n  GC-SCF calculations,\n  DOS of materials,\n  Materials like graphite,\n  Grand canonical ensemble,\n]\nUsage_Conditions:\n\"Larger values are recommended if systems with small DOS on Fermi surface as graphite.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</Project>\n\n<Conditions>\nnorm-conserving pseudopotentials\nIsolated_systems_and_boundary_conditions\nlong-range interactions\nHigh symmetry systems\nVariable cell calculations\nion_dynamics = 'verlet'\nSmearing method\nBravais lattice structure (values 0 to 14)\nTransition Metals\n2D periodic systems in x-y plane\ninput_dft='PBE0', 'B3LYP'\nExchange-correlation functional\nassume_isolated must be set to 'esm'\nnspin = 1\nstress calculations\nnspin = 2\nfull BZ coverage\noccupations = 'smearing'\nMonoclinic systems\nGround state calculations\nMonkhorst-Pack grid\nPseudopotential_types\nk_point_settings\nperiodic cell with defined z-direction\nAnisotropic supercells\nFixed cell calculations\nion_dynamics = 'bfgs'\nPeriodic systems\nSlab systems\nUPF pseudopotentials\nvacuum boundaries\nRelaxation calculations\nMaterials like graphite\nInsulating systems\ntotal energy calculations\ncalculation = 'relax'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tstress\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"tstress\ncalculate stress\"\nPossible_Usage_Conditions: [\n  stress calculations,\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'vc-md' or 'vc-relax'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'vc-md' or 'vc-relax'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "parameters_collection": [
            {
                "calculation": "relax"
            },
            {
                "tstress": ".TRUE."
            },
            {
                "tprnfor": ".TRUE."
            },
            {
                "ntyp": "2"
            },
            {
                "nbnd": "9"
            },
            {
                "occupations": "fixed"
            },
            {
                "smearing": "gaussian"
            },
            {
                "assume_isolated": "esm"
            },
            {
                "esm_bc": "bc1"
            },
            {
                "scf_must_converge": ".FALSE."
            },
            {
                "conv_thr": "1.D-8"
            },
            {
                "mixing_mode": "plain"
            },
            {
                "mixing_beta": "0.4D0"
            },
            {
                "ion_dynamics": "bfgs"
            },
            {
                "pot_extrapolation": "atomic"
            },
            {
                "wfc_extrapolation": "second_order"
            },
            {
                "ion_temperature": "not_controlled"
            },
            {
                "tempw": "300.D0"
            },
            {
                "nraise": "1"
            },
            {
                "refold_pos": "True"
            },
            {
                "bfgs_ndim": "1"
            },
            {
                "trust_radius_max": "1.0D0"
            },
            {
                "trust_radius_min": "1.D-3"
            },
            {
                "trust_radius_ini": "0.5D0"
            },
            {
                "w_1": "0.01D0"
            },
            {
                "w_2": "0.5D0"
            },
            {
                "fire_dtmax": "10.D0"
            },
            {
                "cell_dynamics": "bfgs"
            },
            {
                "fcp_tolp": "reads from tolp"
            }
        ],
        "evaluated_parameters": [
            "Based on the provided project and tags, let's analyze the parameter \"trust_radius_max\".\n\nThe project is a Quantum ESPRESSO input file for a structural relaxation calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"trust_radius_max\" is related to the maximum ionic displacement in the structural relaxation. According to the Quantum ESPRESSO documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' and the ion dynamics is set to 'bfgs'.\n\nIn this project, the calculation type is 'relax' and the ion dynamics is set to 'bfgs', which makes the parameter \"trust_radius_max\" relevant.\n\nThe default value of \"trust_radius_max\" is 0.8D0, but it's not specified whether this value is suitable for this particular system. However, since the system is a transition metal compound with a relatively large unit cell, a slightly larger value might be more appropriate.\n\nConsidering the system's characteristics and the fact that the default value is a reasonable starting point, we can select a value close to the default. Let's choose a value of 1.0D0, which is slightly larger than the default but still within a reasonable range.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"trust_radius_max\": \"1.0D0\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"ion_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system. The calculation type is not explicitly specified, but based on the presence of the \"CELL_PARAMETERS\" and \"ATOMIC_POSITIONS\" cards, it appears to be a relaxation calculation, which is a multistep calculation.\n\nThe \"ion_dynamics\" parameter is relevant to the project because it is used to specify the type of ionic dynamics for relaxation and molecular dynamics calculations.\n\nAccording to the documentation, for a relaxation calculation, the recommended value for \"ion_dynamics\" is \"bfgs\", which uses the BFGS quasi-newton algorithm based on trust radius procedure.\n\nTherefore, the parameter \"ion_dynamics\" is relevant to the project, and the appropriate value is \"bfgs\".\n\n```python\nparameter_value = {\n    \"ion_dynamics\": \"bfgs\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fire_dtmax\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fire_dtmax\" is relevant to the project because it is used in the FIRE minimization algorithm, which is a popular method for structural relaxation. The FIRE algorithm is often used in conjunction with the 'relax' calculation type.\n\nAccording to the Quantum ESPRESSO documentation, the \"fire_dtmax\" parameter determines the maximum value of the time step 'dt' in the FIRE minimization. A larger value of \"fire_dtmax\" can lead to faster convergence but may also increase the risk of oscillations or divergence.\n\nGiven the project's requirements, a moderate value of \"fire_dtmax\" is suitable. The default value of \"10.D0\" is a reasonable choice, but it can be adjusted based on the system's specific needs.\n\n```python\nparameter_value = {\n    \"fire_dtmax\": \"10.D0\"\n}\n```\n\nNote that the value of \"fire_dtmax\" is a string, as required by the Quantum ESPRESSO input format.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_falpha\".\n\nThe parameter \"fire_falpha\" is related to the ion dynamics algorithm, specifically the FIRE (Fast Inertial Relaxation Engine) method. It is used to scale the alpha mixing parameter for steps with P > 0. The FIRE method is a popular algorithm for structural relaxation and molecular dynamics simulations.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The ion dynamics algorithm used is \"verlet\", but there is also a mention of \"bfgs\" which is another ion dynamics algorithm. However, the \"fire_falpha\" parameter is specifically relevant to the FIRE algorithm, which is not used in this project.\n\nAccording to the rules, the parameter \"fire_falpha\" is not relevant to the project because the ion dynamics algorithm used is not FIRE.\n\n```python\nparameter_value = {\n    \"fire_falpha\": None\n}\n```\n\nNote that the value of \"fire_falpha\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"nosym_evc\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system is a 2D periodic system in the x-y plane with a fixed cell and a Monkhorst-Pack grid for k-point sampling.\n\nThe parameter \"nosym_evc\" is related to the use of symmetry in k-point sampling. According to the documentation, if \"nosym_evc\" is set to .TRUE., symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice. This option is relevant when using a Monkhorst-Pack grid or custom k-points, and it ensures that the k-point grid has the full symmetry of the Bravais lattice.\n\nIn this project, the Monkhorst-Pack grid is used for k-point sampling, and the system has a high symmetry (monoclinic). However, the \"nosym_evc\" parameter is not explicitly mentioned in the project. Considering the rules, we should not assume any additional information beyond the provided project and tags.\n\nSince the project uses a Monkhorst-Pack grid and has a high symmetry, it is likely that the \"nosym_evc\" parameter is relevant. However, without explicit mention of this parameter in the project, we cannot determine its value with certainty.\n\nBased on the possible usage conditions, we can infer that the \"nosym_evc\" parameter might be set to .TRUE. to ensure that the k-point grid has the full symmetry of the Bravais lattice. However, without further information, we cannot confirm this.\n\nTherefore, we will set the value of \"nosym_evc\" to None, as we cannot determine its relevance or value with certainty.\n\n```python\nparameter_value = {\n    \"nosym_evc\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"ntyp\".\n\nThe parameter \"ntyp\" represents the number of types of atoms in the unit cell. In the given project, we have three atoms: two chlorine (Cl) atoms and one zirconium (Zr) atom. However, the number of types of atoms is not necessarily equal to the number of atoms. In this case, we have two types of atoms: Cl and Zr.\n\nAccording to the Quantum ESPRESSO documentation, \"ntyp\" is a required parameter in the &SYSTEM namelist, and it should be set to the number of different atomic species present in the system.\n\nGiven the project and tags, the parameter \"ntyp\" is relevant to the project. The appropriate value for \"ntyp\" is 2, since we have two types of atoms: Cl and Zr.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"ntyp\": \"2\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"refold_pos\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"refold_pos\" is relevant to the project because it is used in relaxation calculations (calculation = 'relax') to refold the ions into the supercell at each step. This is useful for maintaining the correct periodic boundary conditions during the relaxation process.\n\nAccording to the documentation, the default value of \"refold_pos\" is False. However, in the context of this project, it is recommended to set \"refold_pos\" to True to ensure that the ions are refolded into the supercell during the relaxation process.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"refold_pos\": \"True\"\n}\n```\n\nNote that the value is set to \"True\" as a string, as required by the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_conv_thr\".\n\nThe parameter \"fcp_conv_thr\" is related to Fictitious Charge Particle (FCP) relaxation, which is a method used in Quantum ESPRESSO to optimize the atomic positions in a system. The convergence threshold on force (eV) is a critical parameter in this process.\n\nIn the provided project, the calculation type is 'relax', which is a multistep calculation. The tags also indicate that this is a relaxation calculation, and the system is a periodic cell with defined z-direction, which might involve FCP calculations.\n\nHowever, upon closer inspection, we notice that the project does not explicitly set `lfcp = .TRUE.`, which is a required condition for the \"fcp_conv_thr\" parameter to be relevant. Therefore, we cannot assume that FCP calculations are being performed in this project.\n\nGiven the provided information, we cannot determine the relevance of the \"fcp_conv_thr\" parameter to the project. However, based on the rules, we should not assume any additional information beyond the provided project and tags.\n\n```python\nparameter_value = {\n    \"fcp_conv_thr\": None\n}\n```\n\nIn this case, we set the value of \"fcp_conv_thr\" to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"one_atom_occupations\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system consists of three atoms (two Cl and one Zr) in a periodic cell with a defined z-direction.\n\nThe parameter \"one_atom_occupations\" is used for isolated atoms (nat=1) together with occupations='from_input'. However, in this project, we have a system with three atoms (nat=3), not an isolated atom. Therefore, this parameter is not relevant to the project.\n\nAccording to the rules, if the parameter is not relevant, we set the value to None.\n\n```python\nparameter_value = {\n    \"one_atom_occupations\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"degauss_cond\".\n\nThe parameter \"degauss_cond\" is related to the smearing method used in Brillouin-zone integration, specifically for two-chemical potential calculations. However, the project does not indicate a two-chemical potential calculation (twochem = .True.). Instead, it appears to be a standard ground-state calculation with a single chemical potential.\n\nThe project uses the PBE0 exchange-correlation functional, which is a hybrid functional that includes a portion of exact exchange. While PBE0 can be used with smearing methods, the project does not explicitly specify a smearing method. However, the presence of the \"occupations = 'smearing'\" tag suggests that some form of smearing might be used.\n\nDespite this, the project does not meet the usage conditions for \"degauss_cond\", which requires a two-chemical potential calculation. Therefore, the parameter \"degauss_cond\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"degauss_cond\": None\n}\n```\n\nIn this case, the value of \"degauss_cond\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_mass\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system is a 2D periodic system in the x-y plane with a fixed cell and a Monkhorst-Pack grid for k-point sampling.\n\nThe parameter \"fcp_mass\" is related to the Fictitious Charge Particle (FCP) method, which is used to accelerate the convergence of the self-consistent field (SCF) cycle in certain types of calculations. However, the FCP method is typically used in conjunction with the \"lfcp\" flag, which is not present in the provided project.\n\nMoreover, the project does not involve any FCP calculations, and the calculation type is 'relax', which is a multistep calculation. According to the rules, the parameter \"fcp_mass\" is only relevant if \"lfcp = .TRUE.\" and the calculation type is 'relax' or 'md'. Since \"lfcp\" is not present in the project, the parameter \"fcp_mass\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_mass\": None\n}\n```\n\nIn conclusion, the parameter \"fcp_mass\" is not relevant to the provided project, and its value is set to None.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"smearing\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system is a 2D periodic system in the x-y plane with a fixed cell and a Monkhorst-Pack grid for k-point sampling. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"smearing\" parameter is relevant to the project because it controls the type of smearing method used for the occupation of electronic states. In this case, the system is an insulating system (ZrCl2), and the PBE0 functional is used, which is a hybrid functional that can be used for both metals and insulators.\n\nHowever, since the system is insulating and the calculation is a ground-state calculation, the occupations are not expected to be fractional. Therefore, the \"smearing\" parameter is not strictly necessary in this case.\n\nBut, considering the project's conditions, such as the use of a Monkhorst-Pack grid and the 'relax' calculation type, it is likely that the \"smearing\" parameter is still relevant to ensure proper convergence of the calculation.\n\nGiven the possible usage conditions for the \"smearing\" parameter, the most suitable value for this project would be \"gaussian\", which is the default value. This is because Gaussian smearing is a common choice for insulating systems and is compatible with the PBE0 functional.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"smearing\": \"gaussian\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"ion_positions\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is not explicitly specified, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" tags, it appears to be a single-point calculation (scf).\n\nThe \"ion_positions\" parameter is related to how atomic positions are determined, either from the restart file or the standard input. However, since this is not a relaxation or molecular dynamics calculation, the \"ion_positions\" parameter is not directly relevant to this project.\n\nAccording to the rules, the parameter is not relevant to the project, so the value should be set to None.\n\n```python\nparameter_value = {\n    \"ion_positions\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"tolp\".\n\nThe parameter \"tolp\" is related to the tolerance for velocity rescaling in molecular dynamics simulations. It is used to determine when to rescale the velocities of the ions to match the target temperature.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation that involves ionic relaxation. The \"relax\" calculation is relevant to the parameter \"tolp\" according to the Possible_Usage_Conditions.\n\nHowever, upon closer inspection of the project, we notice that the \"ion_dynamics\" tag is set to \"verlet\", which is a type of molecular dynamics simulation. But the \"relax\" calculation in Quantum ESPRESSO does not involve molecular dynamics simulations. Instead, it uses a quasi-Newton optimization algorithm (BFGS) to relax the ionic positions.\n\nTherefore, the parameter \"tolp\" is not relevant to this project, as it is not used in the \"relax\" calculation with \"ion_dynamics\" set to \"verlet\".\n\n```python\nparameter_value = {\n    \"tolp\": None\n}\n```\n\nNote that the value of \"tolp\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"bfgs_ndim\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 functional. The calculation type is 'relax', which is a multistep calculation. The ion dynamics is set to 'bfgs', which is a quasi-Newton method for optimizing the ionic positions.\n\nThe parameter \"bfgs_ndim\" is relevant to this project because it is used in the BFGS algorithm for ionic relaxation, which is the case here. The BFGS algorithm is a quasi-Newton method that uses a limited number of old forces and displacements vectors to approximate the inverse Hessian matrix.\n\nAccording to the documentation, when bfgs_ndim = 1, the standard quasi-Newton BFGS method is used. This is the default value and is suitable for most cases.\n\nTherefore, the parameter \"bfgs_ndim\" is relevant to this project, and the appropriate value is 1.\n\n```python\nparameter_value = {\n    \"bfgs_ndim\": \"1\"\n}\n```\n\nNote that the value is set to \"1\" as a string, as per the output format requirements.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_velocity\".\n\nThe parameter \"fcp_velocity\" is related to the Fictitious Charge Particle (FCP) method, which is used in Car-Parrinello molecular dynamics (CPMD) simulations. The FCP method is a technique used to accelerate the convergence of the electronic structure calculation by introducing a fictitious kinetic energy term for the electrons.\n\nIn the provided project, the calculation type is 'relax', which is a multistep calculation. The tags also mention \"ion_dynamics = 'verlet'\" and \"ion_dynamics = 'bfgs'\", which are related to the ionic dynamics in the simulation. However, there is no explicit mention of FCP calculations or the use of the FCP method.\n\nAccording to the rules, the parameter \"fcp_velocity\" is only relevant if \"lfcp = .TRUE.\" and the calculation type is 'relax' or 'md'. Since there is no indication of FCP calculations being used in the project, we can conclude that the parameter \"fcp_velocity\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_velocity\": None\n}\n```\n\nTherefore, the value of the parameter \"fcp_velocity\" is set to None, indicating that it is not relevant to the provided project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_ndiis\".\n\nThe parameter \"fcp_ndiis\" is related to the Fictitious Charge Particle (FCP) relaxation method, which is used in Quantum ESPRESSO to optimize the wavefunction and charge density. The FCP method is typically used in conjunction with the \"newton\" dynamics, which is not explicitly mentioned in the project. However, the project does specify \"ion_dynamics = 'verlet'\" and \"ion_dynamics = 'bfgs'\", which are both related to ionic relaxation.\n\nThe project also specifies \"calculation = 'relax'\", which is a multistep calculation type that involves ionic relaxation. Additionally, the project uses norm-conserving pseudopotentials, which are compatible with the FCP method.\n\nHowever, the project does not explicitly mention the use of FCP calculations or the \"lfcp\" flag, which is required for the \"fcp_ndiis\" parameter to be relevant. Therefore, based on the provided information, it is unlikely that the \"fcp_ndiis\" parameter is relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_ndiis\": None\n}\n```\n\nNote that if the project were to include FCP calculations and the \"lfcp\" flag, the default value of \"fcp_ndiis\" would be 4, as specified in the default values. However, without this information, it is not possible to determine a specific value for this parameter.",
            "Based on the provided project and tags, let's analyze the parameter \"tempw\".\n\nThe parameter \"tempw\" is related to the temperature in molecular dynamics (MD) runs or the target temperature for most thermostats. According to the Quantum ESPRESSO documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'.\n\nIn the provided project, the calculation type is 'relax', which is a multistep calculation. The presence of the tag \"ion_dynamics = 'verlet'\" also suggests that the calculation involves molecular dynamics.\n\nHowever, the project also contains the tag \"ion_dynamics = 'bfgs'\", which is typically used for relaxation calculations without molecular dynamics. This inconsistency suggests that the project might be a relaxation calculation without molecular dynamics.\n\nConsidering the provided tags and the calculation type, it is unclear whether the parameter \"tempw\" is relevant to the project. However, since the calculation type is 'relax', which is a multistep calculation, and the presence of \"ion_dynamics = 'verlet'\" tag, we will assume that the parameter is relevant.\n\nThe default value of \"tempw\" is 300.0 K, which is a reasonable value for many systems. However, without more information about the specific system being studied, it is difficult to determine a more accurate value.\n\n```python\nparameter_value = {\n    \"tempw\": \"300.D0\"\n}\n```\n\nNote that the value of \"tempw\" is set to the default value, as there is no clear indication that a different value is required for this specific project.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"mixing_beta\" and the project.\n\nThe parameter \"mixing_beta\" is a mixing factor for self-consistency (SCF) calculations, which is used to control the convergence of the SCF cycle. In the context of the project, the calculation type is 'relax', which is a multistep calculation that involves SCF calculations.\n\nThe project uses the PBE0 exchange-correlation functional, which is a hybrid functional that requires a more careful treatment of the SCF convergence. The use of a smearing method is also indicated in the tags, which can affect the SCF convergence.\n\nGiven the importance of SCF convergence in the project, the parameter \"mixing_beta\" is relevant to the project.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"mixing_beta\" is 0.7, which is a reasonable starting point for many systems. However, for systems with transition metals, such as Zr in this project, a smaller value of \"mixing_beta\" might be necessary to achieve convergence.\n\nConsidering the presence of Zr and the use of a hybrid functional, a smaller value of \"mixing_beta\" might be beneficial. A common choice for transition metal systems is \"mixing_beta\" = 0.4.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"mixing_beta\": \"0.4D0\"\n}\n```\n\nNote that the value \"0.4D0\" is a string representation of the floating-point number 0.4, which is the format required by Quantum ESPRESSO.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fire_alpha_init\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fire_alpha_init\" is related to the FIRE minimization scheme, which is used in relaxation calculations. The FIRE algorithm is a powerful method for optimizing atomic positions and cell parameters in molecular dynamics simulations. The \"fire_alpha_init\" parameter controls the initial value of the alpha mixing factor in the FIRE minimization scheme.\n\nGiven that the calculation type is 'relax' and the ion_dynamics is set to 'bfgs', not 'fire', the parameter \"fire_alpha_init\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fire_alpha_init\": None\n}\n```\n\nHowever, if the ion_dynamics were set to 'fire', the recommended value for \"fire_alpha_init\" would be between 0.1 and 0.3. In that case, a suitable value could be chosen from this range, for example:\n\n```python\nparameter_value = {\n    \"fire_alpha_init\": \"0.2D0\"\n}\n```\n\nBut since the ion_dynamics is set to 'bfgs', the parameter is not relevant, and the value is set to None.",
            "Based on the provided project and tags, let's analyze the parameter \"conv_thr\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"conv_thr\" is related to the convergence threshold for self-consistency in self-consistent calculations ('scf') and is used to set the default threshold value for iterative diagonalization in non-self-consistent calculations ('nscf').\n\nAlthough the calculation type is 'relax', which is not explicitly mentioned in the Possible_Usage_Conditions, it is a multistep calculation that involves self-consistent calculations ('scf') as a sub-step. Therefore, the parameter \"conv_thr\" is relevant to the project.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"conv_thr\" is 1.D-6, which is a reasonable value for most systems. However, for systems with transition metals like Zr, a tighter convergence threshold might be necessary to ensure accurate results.\n\nConsidering the system and the calculation type, a more stringent convergence threshold of 1.D-8 is recommended.\n\n```python\nparameter_value = {\n    \"conv_thr\": \"1.D-8\"\n}\n```\n\nNote that this value is not provided in the default values, but it is a reasonable choice based on the project and the documentation.",
            "Based on the provided project and tags, let's analyze the parameter \"tprnfor\".\n\nThe parameter \"tprnfor\" is related to the calculation of forces in Quantum ESPRESSO. According to the documentation, it is set to .TRUE. automatically if the calculation type is 'relax', 'md', or 'vc-md'. In the provided project, the calculation type is 'relax', as indicated by the tag \"calculation = 'relax'\".\n\nSince the project is a relaxation calculation, the parameter \"tprnfor\" is relevant to the project. According to the documentation, the default value for \"tprnfor\" is .TRUE. for relaxation calculations.\n\nTherefore, the appropriate value for the parameter \"tprnfor\" is .TRUE.\n\n```python\nparameter_value = {\n    \"tprnfor\": \".TRUE.\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"wfc_extrapolation\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"wfc_extrapolation\" is used to extrapolate the wavefunctions from preceding ionic steps. According to the documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'. Since the calculation type in the project is 'relax', this parameter is relevant.\n\nFor a 'relax' calculation, it is recommended to use a second-order extrapolation scheme to improve the convergence of the wavefunctions. Therefore, the appropriate value for the parameter \"wfc_extrapolation\" is \"second_order\".\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"wfc_extrapolation\": \"second_order\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"nbnd\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system is a 2D periodic system in the x-y plane with a fixed cell and a Monkhorst-Pack grid for k-point sampling.\n\nThe parameter \"nbnd\" is related to the number of electronic states (bands) to be calculated. According to the documentation, the default value for insulators is the number of valence bands (number_of_electrons/2), while for metals, it is (number of valence bands)*1.2.\n\nIn this project, the system is a transition metal compound (ZrCl2), which is typically considered a metal. However, the input file specifies `nspin = 1`, indicating a non-spin-polarized calculation. Additionally, the `occupations = 'smearing'` tag suggests that the system is treated as an insulator with a smearing method to mimic the metallic behavior.\n\nGiven the mixed characteristics of the system, we can consider it as an insulator with a smearing method. Therefore, the default value for \"nbnd\" would be the number of valence bands (number_of_electrons/2).\n\nThe number of valence electrons in the system can be calculated as follows:\n\n* Zr: 4 valence electrons (from the 4d and 5s orbitals)\n* Cl: 7 valence electrons (from the 3p and 3s orbitals)\n* Total valence electrons: 4 (Zr) + 2*7 (Cl) = 18\n\nThe number of valence bands is half the number of valence electrons, which is 18/2 = 9.\n\nTherefore, the appropriate value for \"nbnd\" is 9.\n\n```python\nparameter_value = {\"nbnd\": \"9\"}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"ion_temperature\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"ion_temperature\" parameter is relevant to the project because it is used to control the ionic temperature during the relaxation calculation. The possible usage conditions for this parameter include 'relax', which matches the calculation type in the project.\n\nConsidering the project's conditions, such as the use of norm-conserving pseudopotentials, isolated systems, and a fixed cell calculation, the most suitable value for \"ion_temperature\" would be 'not_controlled'. This is because the ionic temperature is not explicitly controlled in a fixed cell relaxation calculation, and the default value 'not_controlled' is the most appropriate choice.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"ion_temperature\": \"not_controlled\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"twochem\".\n\nThe parameter \"twochem\" is related to the simulation of photoexcited systems, which involves constraining a fraction of the electrons in the conduction manifold. This is typically relevant in calculations involving excited states, such as time-dependent density functional theory (TDDFT) or GW calculations.\n\nHowever, the provided project is a ground-state calculation (as indicated by the tag \"calculation = 'relax'\") using the PBE0 functional, which is a hybrid functional that includes a fraction of exact exchange. The project does not involve excited states or photoexcited systems.\n\nMoreover, the tag \"occupations = 'smearing'\" is present, which is a possible usage condition for the \"twochem\" parameter. However, this tag is typically used to control the occupation of electronic states in metallic systems, which is not the case here.\n\nGiven the project's focus on ground-state relaxation and the absence of any indication of excited-state calculations, the \"twochem\" parameter is not relevant to this project.\n\n```python\nparameter_value = {\n    \"twochem\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"trust_radius_ini\".\n\nThe parameter \"trust_radius_ini\" is related to the initial ionic displacement in structural relaxation calculations. According to the Quantum ESPRESSO documentation, this parameter is used to control the maximum allowed displacement of ions during the relaxation process.\n\nIn the provided project, the calculation type is 'relax', which is a multistep calculation. The tags also indicate that the system is a periodic system with a defined z-direction, and the ion dynamics is set to 'bfgs'. These conditions match the usage conditions for the \"trust_radius_ini\" parameter.\n\nHowever, the default value of \"trust_radius_ini\" is 0.5D0, which is a reasonable value for many systems. Considering the project's specifics, such as the use of norm-conserving pseudopotentials, PBE0 exchange-correlation functional, and a relatively small system size, the default value might be suitable.\n\nTherefore, I will select the default value for the \"trust_radius_ini\" parameter.\n\n```python\nparameter_value = {\n    \"trust_radius_ini\": \"0.5D0\"\n}\n```\n\nNote that the value is a string, as specified in the output format.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_temperature\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_temperature\" is related to Fictitious Charge Particle (FCP) calculations, which are used to accelerate the convergence of the self-consistent field (SCF) cycle. However, the project does not explicitly mention FCP calculations or the use of the \"lfcp\" flag.\n\nAccording to the rules, the parameter \"fcp_temperature\" is only relevant if \"lfcp = .TRUE.\" and the calculation type is 'relax' or 'md'. Since the project does not provide information about the \"lfcp\" flag, we cannot assume its value.\n\nTherefore, the parameter \"fcp_temperature\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_temperature\": None\n}\n```",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"nsolv\" and the project.\n\nThe parameter \"nsolv\" is related to RISM (Reference Interaction Site Model) calculations, which is a method used to study the solvation properties of molecules. However, the project provided does not mention RISM calculations or any solvation-related properties. The project appears to be a ground-state calculation of a ZrCl2 system using the PBE0 functional, with a focus on the electronic structure and total energy.\n\nGiven the project's focus on ground-state calculations and the absence of any solvation-related properties, the parameter \"nsolv\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"nsolv\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fire_f_dec\".\n\nThe parameter \"fire_f_dec\" is related to the ion dynamics algorithm \"fire\" (Fast Inertial Relaxation Engine), which is used for relaxation and molecular dynamics calculations. The \"fire_f_dec\" parameter controls the factor for decreasing the time step \"dt\" during the simulation.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The ion dynamics algorithm used is \"verlet\", but there is also a mention of \"bfgs\" which is not relevant to the \"fire_f_dec\" parameter. However, since \"fire\" is not the chosen ion dynamics algorithm, the parameter \"fire_f_dec\" is not relevant to this project.\n\nAccording to the rules, if the parameter is not relevant, the value should be set to None.\n\n```python\nparameter_value = {\n    \"fire_f_dec\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"w_1\".\n\nThe parameter \"w_1\" is related to the line search algorithm used in the BFGS (Broyden-Fletcher-Goldfarb-Shanno) optimization method, which is used for ion dynamics in Quantum ESPRESSO. The BFGS method is a quasi-Newton optimization algorithm that uses an approximation of the Hessian matrix to find the minimum of a function.\n\nIn the context of the provided project, the calculation type is \"relax\", which is a multistep calculation that involves relaxing the ionic positions to find the minimum energy configuration. The \"ion_dynamics\" tag is set to \"bfgs\", which indicates that the BFGS algorithm is used for ion dynamics.\n\nAccording to the Quantum ESPRESSO documentation, the \"w_1\" parameter is used to control the line search algorithm in the BFGS method. A smaller value of \"w_1\" can lead to a more conservative line search, while a larger value can lead to a more aggressive line search.\n\nGiven the project's requirements, a moderate value of \"w_1\" is likely suitable. The default value of \"0.01D0\" is a reasonable choice, as it provides a good balance between convergence speed and stability.\n\nTherefore, the parameter \"w_1\" is relevant to the project, and the appropriate value is the default value.\n\n```python\nparameter_value = {\n    \"w_1\": \"0.01D0\"\n}\n```\n\nNote that the value is a string, as specified in the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"scf_must_converge\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"scf_must_converge\" is related to the convergence of the self-consistent field (SCF) cycle during the calculation. According to the Quantum ESPRESSO documentation, this parameter controls whether the calculation should stop when the maximum number of SCF iterations (electron_maxstep) is reached.\n\nIn the context of the provided project, the calculation is a relaxation calculation, which involves ionic dynamics. The tag \"ion_dynamics = 'verlet'\" suggests that the Verlet algorithm is used for ionic dynamics, which is a common choice for relaxation calculations.\n\nGiven the calculation type and the tags, the parameter \"scf_must_converge\" is relevant to the project. The default value is \".TRUE.\", which means that the calculation will stop when the maximum number of SCF iterations is reached. However, since the calculation is a relaxation calculation, it might be desirable to allow the calculation to continue even if the SCF convergence is not reached, to ensure that the ionic relaxation is completed.\n\nTherefore, I recommend setting the value of \"scf_must_converge\" to \".FALSE.\", which allows the calculation to continue even if the SCF convergence is not reached.\n\n```python\nparameter_value = {\n    \"scf_must_converge\": \".FALSE.\"\n}\n```\n\nNote that, as mentioned in the documentation, this parameter should be used with care, as it can lead to inaccurate results if the SCF convergence is not reached.",
            "Based on the provided project and tags, let's analyze the parameter \"CONSTRAINTS\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"CONSTRAINTS\" parameter is used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. However, the project does not involve molecular dynamics simulations, and the calculation type is 'relax', which is a type of constrained optimization process.\n\nAlthough the \"CONSTRAINTS\" parameter is not directly related to the calculation type 'relax', it can be used to impose constraints during the relaxation process. However, there is no indication in the project that any constraints need to be imposed.\n\nConsidering the provided tags, the \"CONSTRAINTS\" parameter is not explicitly mentioned as a required or relevant tag for the calculation type 'relax'. However, the tag \"ion_dynamics = 'bfgs'\" is present, which is a type of optimization algorithm used in relaxation calculations.\n\nGiven the lack of explicit mention of constraints in the project and the tags, it is reasonable to assume that no constraints need to be imposed during the relaxation process.\n\n```python\nparameter_value = {\n    \"CONSTRAINTS\": None\n}\n```\n\nIn this case, the value of the \"CONSTRAINTS\" parameter is set to None, indicating that no constraints need to be imposed during the relaxation calculation.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_tolp\".\n\nThe parameter \"fcp_tolp\" is related to the FCP (Fermi-Dirac smearing) method, which is used to calculate the electronic temperature in molecular dynamics simulations. The parameter \"fcp_tolp\" is a tolerance value for velocity rescaling, which is used to control the temperature fluctuations during the simulation.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The tags also mention \"ion_dynamics = 'verlet'\", which indicates that the simulation is using the Verlet integration algorithm. Additionally, the tags mention \"Smearing method\" and \"occupations = 'smearing'\", which suggests that the FCP method is being used.\n\nHowever, the project does not explicitly mention the use of FCP or the \"lfcp\" flag, which is required for the \"fcp_tolp\" parameter to be relevant. Therefore, based on the provided information, it is not clear if the \"fcp_tolp\" parameter is relevant to the project.\n\nHowever, considering the presence of smearing-related tags and the \"relax\" calculation type, it is possible that the FCP method is being used implicitly. Therefore, I will provide a tentative answer.\n\n```python\nparameter_value = {\"fcp_tolp\": \"reads from tolp\"}\n```\n\nPlease note that this answer is based on the assumption that the FCP method is being used implicitly, and the actual value of \"fcp_tolp\" may depend on the specific implementation of the FCP method in the Quantum ESPRESSO code. If the FCP method is not being used, the correct answer would be:\n\n```python\nparameter_value = {\"fcp_tolp\": None}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"nraise\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"nraise\" is related to temperature control and is relevant to calculations involving molecular dynamics (MD) or variable-cell relaxation (VC-relax). In the context of the provided project, the calculation type is 'relax', which involves ionic relaxation.\n\nAccording to the Quantum ESPRESSO documentation, the \"nraise\" parameter is used to control the temperature-related behaviors in MD and VC-relax calculations. Since the project involves a 'relax' calculation, the \"nraise\" parameter is relevant.\n\nHowever, the project does not explicitly specify the ion_temperature parameter, which is required to determine the exact behavior of \"nraise\". Nevertheless, based on the provided tags, we can infer that the calculation involves a 'verlet' ion dynamics, which is a type of MD.\n\nGiven the lack of explicit information about the ion_temperature parameter, we will assume a default value for \"nraise\". According to the documentation, the default value for \"nraise\" is 1.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"nraise\": \"1\"\n}\n```\n\nNote that this value may need to be adjusted based on the specific requirements of the calculation, such as the ion_temperature parameter.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_f_inc\".\n\nThe parameter \"fire_f_inc\" is related to the ion dynamics algorithm \"fire\" (Fast Inertial Relaxation Engine), which is used for structural relaxation and molecular dynamics simulations. The \"fire_f_inc\" parameter controls the factor for increasing the time step \"dt\" during the simulation.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The ion dynamics algorithm used is \"verlet\", but there is also a mention of \"bfgs\" which is not relevant to the \"fire_f_inc\" parameter. However, since \"fire\" is not the chosen ion dynamics algorithm, the parameter \"fire_f_inc\" is not relevant to this project.\n\nAccording to the rules, if the parameter is not relevant, the value should be set to None.\n\n```python\nparameter_value = {\n    \"fire_f_inc\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"calculation\".\n\nThe project involves a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system with a monoclinic structure. The tags indicate that this is a ground-state calculation with a fixed cell, using norm-conserving pseudopotentials, and a PBE0 exchange-correlation functional.\n\nThe parameter \"calculation\" is relevant to this project, as it determines the type of calculation to be performed. According to the Quantum ESPRESSO documentation, the possible values for \"calculation\" are:\n\n* scf: standard self-consistent field calculation\n* nscf: non-self-consistent field calculation\n* bands: calculation of the electronic band structure\n* relax: relaxation of the atomic positions\n* md: molecular dynamics simulation\n* vc-relax: variable-cell relaxation\n* vc-md: variable-cell molecular dynamics\n\nGiven the project's tags, the most suitable value for \"calculation\" is \"relax\", as it allows for the relaxation of the atomic positions while keeping the cell fixed.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"calculation\": \"relax\"\n}\n```\n\nThis value is consistent with the project's requirements, as it allows for the relaxation of the atomic positions while keeping the cell fixed, which is suitable for a ground-state calculation of a system with a fixed cell.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"occupations\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system is a 2D periodic system in the x-y plane with a fixed cell and a Monkhorst-Pack grid for k-point sampling. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"occupations\" parameter controls how electronic occupations are determined. In this case, the system is an insulating system (ZrCl2 is a wide-bandgap semiconductor), and the calculation is a ground-state calculation. According to the Quantum ESPRESSO documentation, for insulating systems, the \"occupations\" parameter can be set to \"fixed\" or \"smearing\". However, since the system is insulating and the calculation is a ground-state calculation, the \"fixed\" option is more suitable.\n\nMoreover, the \"occupations\" parameter is relevant to the project because it is a ground-state calculation, and the occupations need to be determined.\n\nTherefore, the selected value for the \"occupations\" parameter is \"fixed\".\n\n```python\nparameter_value = {\n    \"occupations\": \"fixed\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_mu\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_mu\" is related to the Fictitious Charge Particle (FCP) method, which is used to simulate systems under constant chemical potential conditions. However, the project does not explicitly mention the use of the FCP method or constant chemical potential conditions.\n\nAccording to the rules, the parameter \"fcp_mu\" is only relevant if \"lfcp = .TRUE.\". However, this flag is not present in the provided project.\n\nTherefore, based on the provided information, the parameter \"fcp_mu\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_mu\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_dynamics\" is related to the Fictitious Charge Particle (FCP) method, which is used to accelerate the convergence of the self-consistent field (SCF) cycle. The FCP method is typically used in conjunction with the Car-Parrinello molecular dynamics (CPMD) method.\n\nHowever, in this project, the calculation type is 'relax', which is a ground-state calculation, not a molecular dynamics simulation. Moreover, there is no indication that the FCP method is being used (i.e., no \"lfcp = .TRUE.\" statement).\n\nTherefore, the parameter \"fcp_dynamics\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_dynamics\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_nraise\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_nraise\" is related to Fictitious Charge Particle (FCP) calculations, which are used to control temperature adjustments in molecular dynamics simulations. However, the project does not involve molecular dynamics simulations, and the calculation type is 'relax', which is a ground-state calculation.\n\nAccording to the rules, the parameter \"fcp_nraise\" is not relevant to the project because the calculation type is not 'md' and the project does not involve FCP calculations.\n\n```python\nparameter_value = {\n    \"fcp_nraise\": None\n}\n```\n\nIn this case, the value of \"fcp_nraise\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"esm_bc\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 slab system. The tags indicate that this is a slab system with a periodic cell in the x-y plane and a defined z-direction, which is consistent with the project. The tags also mention \"assume_isolated = 'esm'\", which is relevant to the \"esm_bc\" parameter.\n\nThe \"esm_bc\" parameter determines the boundary conditions used for either side of the slab when \"assume_isolated = 'esm'\". In this case, the project has a vacuum boundary in the z-direction, as indicated by the CELL_PARAMETERS and ATOMIC_POSITIONS sections.\n\nAccording to the Quantum ESPRESSO documentation, when \"assume_isolated = 'esm'\", the \"esm_bc\" parameter can take the values \"pbc\", \"bc1\", \"bc2\", or \"bc3\". Since the project has a vacuum boundary, the most suitable value for \"esm_bc\" is \"bc1\", which corresponds to \"Vacuum-slab-vacuum (open boundary conditions)\".\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"esm_bc\": \"bc1\"\n}\n```\n\nNote that the value \"bc1\" is chosen based on the project's vacuum boundary condition and the documentation of the \"esm_bc\" parameter.",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"laue_starting_left\" and the project.\n\nThe parameter \"laue_starting_left\" is related to the Laue-RISM (Reference Interaction Site Model) method, which is used to simulate systems with solvent-solute interactions. However, the project provided does not mention anything about solvent-solute interactions or the use of the Laue-RISM method. The project appears to be a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional.\n\nGiven the project's focus on a solid-state system without any mention of solvent-solute interactions, the parameter \"laue_starting_left\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"laue_starting_left\": None\n}\n```\n\nThis parameter is not applicable to the provided project, and its value is set to None.",
            "Based on the provided project and tags, let's analyze the parameter \"nosym\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system is a 2D periodic system in the x-y plane with a fixed cell and a Monkhorst-Pack grid for k-point sampling.\n\nThe \"nosym\" parameter controls whether symmetry is used in calculations. According to the documentation, when .TRUE., symmetry is not used, affecting k-points handling and charge density calculations.\n\nIn this project, the ibrav parameter is set to 0, which means the Bravais lattice structure is not specified, and the system is treated as a generic cell. Additionally, the k_point_settings tag is present, indicating that a Monkhorst-Pack grid is used for k-point sampling.\n\nGiven the presence of the k_point_settings tag and the fact that the system is a 2D periodic system, it is likely that the k-points are carefully chosen to ensure proper sampling of the Brillouin zone. In this case, disabling symmetry usage with nosym=.TRUE. might not be necessary.\n\nHowever, the project also includes the tags \"High symmetry systems\" and \"Monoclinic systems\", which could indicate that the system has a high degree of symmetry. In this case, using symmetry could be beneficial for reducing computational costs.\n\nConsidering the provided tags and the project, it is not clear whether symmetry should be used or not. However, since the project is a ground-state calculation with a fixed cell and a Monkhorst-Pack grid, it is likely that symmetry is already being used effectively.\n\nTherefore, I will set the value of \"nosym\" to None, indicating that it is not relevant to this project.\n\n```python\nparameter_value = {\n    \"nosym\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_tempw\".\n\nThe parameter \"fcp_tempw\" is related to Fictitious Charge Particle (FCP) dynamics runs, which is a method used in molecular dynamics simulations to accelerate the convergence of the electronic degrees of freedom. The parameter \"fcp_tempw\" represents the starting temperature (Kelvin) in FCP dynamics runs.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The tags also mention \"ion_dynamics = 'verlet'\" and \"ion_dynamics = 'bfgs'\", which are related to molecular dynamics and relaxation calculations, respectively.\n\nHowever, the project does not explicitly mention FCP calculations or the use of the \"lfcp\" flag. Therefore, based on the provided information, it is not clear if the parameter \"fcp_tempw\" is relevant to the project.\n\nAccording to the rules, if the parameter is not relevant, the value should be set to None.\n\n```python\nparameter_value = {\n    \"fcp_tempw\": None\n}\n```\n\nNote that if the project were to include FCP calculations or the \"lfcp\" flag, the value of \"fcp_tempw\" would depend on the specific requirements of the simulation, and a default value or a value from the literature would need to be chosen.",
            "Based on the provided project and tags, let's analyze the parameter \"pot_extrapolation\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"pot_extrapolation\" is used to extrapolate the potential from preceding ionic steps, which is relevant for dynamics calculations, including 'relax' calculations.\n\nAccording to the Quantum ESPRESSO documentation, the default value for \"pot_extrapolation\" is \"atomic\", which is suitable for most cases. However, since the system contains transition metals (Zr) and is a high-symmetry system, it's reasonable to use a more accurate extrapolation method.\n\nConsidering the options, \"first_order\" and \"second_order\" extrapolation methods are more accurate but are recommended for molecular dynamics ('md') calculations. Since this is a 'relax' calculation, we can use the \"atomic\" method, which is a good balance between accuracy and computational efficiency.\n\nTherefore, the parameter \"pot_extrapolation\" is relevant to the project, and the appropriate value is \"atomic\".\n\n```python\nparameter_value = {\n    \"pot_extrapolation\": \"atomic\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"cell_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"cell_dynamics\" is relevant to the project because it is used in variable cell calculations, which is the case here since the ibrav parameter is set to 0, indicating a non-standard Bravais lattice structure. Additionally, the calculation type is 'relax', which involves optimizing the cell parameters.\n\nAccording to the Quantum ESPRESSO documentation, the \"cell_dynamics\" parameter specifies the type of dynamics for the cell during the relaxation process. For a 'relax' calculation, the recommended value is \"bfgs\", which corresponds to the BFGS quasi-newton algorithm.\n\nTherefore, the parameter \"cell_dynamics\" is relevant to the project, and the appropriate value is \"bfgs\".\n\n```python\nparameter_value = {\n    \"cell_dynamics\": \"bfgs\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"assume_isolated\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system with a monoclinic structure. The tags indicate that this is a periodic system with a defined z-direction, and the calculation type is 'relax'. The system is also described as having a slab geometry with vacuum boundaries.\n\nThe \"assume_isolated\" parameter is used to perform calculations assuming the system is isolated, such as a molecule or a cluster in a 3D supercell. However, in this case, the system is periodic and has a slab geometry, which means it is not isolated.\n\nAccording to the documentation, the \"esm\" option is suitable for systems with a cell having a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0. This matches the description of the project, where the CELL_PARAMETERS indicate a monoclinic structure with a defined z-direction.\n\nTherefore, the \"assume_isolated\" parameter is relevant to this project, and the appropriate value is \"esm\".\n\n```python\nparameter_value = {\n    \"assume_isolated\": \"esm\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"w_2\".\n\nThe parameter \"w_2\" is related to the line search algorithm used in the BFGS (Broyden-Fletcher-Goldfarb-Shanno) optimization method, which is used for ion dynamics in Quantum ESPRESSO. The BFGS method is a quasi-Newton optimization algorithm that uses an approximation of the Hessian matrix to find the minimum of a function.\n\nIn the context of the provided project, the calculation type is \"relax\", which is a multistep calculation that involves relaxing the ionic positions to find the minimum energy configuration. The \"ion_dynamics\" tag is set to \"bfgs\", which indicates that the BFGS algorithm is used for ion dynamics.\n\nAccording to the Quantum ESPRESSO documentation, the \"w_2\" parameter is used to control the line search algorithm in the BFGS method. The default value of \"w_2\" is 0.5, which is a reasonable value for many systems.\n\nGiven the project and tags, the parameter \"w_2\" is relevant to the project. Therefore, we can select the default value of 0.5 as the appropriate value for this parameter.\n\n```python\nparameter_value = {\n    \"w_2\": \"0.5D0\"\n}\n```\n\nNote that the value is a string, as specified in the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_delta_t\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_delta_t\" is related to Fictitious Charge Particle (FCP) temperature control, which is used in molecular dynamics (MD) simulations. However, the project does not involve MD simulations, but rather a relaxation calculation.\n\nAlthough the calculation type is 'relax', which is mentioned in the possible usage conditions of the parameter, the project does not involve FCP calculations (lfcp = .TRUE. is not present in the input file). Therefore, the parameter \"fcp_delta_t\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_delta_t\": None\n}\n```\n\nIn this case, the value of the parameter is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"trust_radius_min\".\n\nThe project is a Quantum ESPRESSO input file for a structural relaxation calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"trust_radius_min\" is relevant to the project because it is used in the structural relaxation calculation, and the ion_dynamics is set to 'bfgs', which is one of the possible usage conditions for this parameter.\n\nAccording to the Quantum ESPRESSO documentation, the trust_radius_min parameter controls the minimum ionic displacement in the structural relaxation. A smaller value of trust_radius_min can lead to a more precise relaxation, but it can also increase the number of iterations required to converge.\n\nConsidering the project's requirements, a reasonable value for trust_radius_min would be the default value of 1.D-3, which is a typical value used in many structural relaxation calculations.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"trust_radius_min\": \"1.D-3\"\n}\n```\n\nNote that the value is a string, as specified in the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"gcscf_beta\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system is a 2D periodic system in the x-y plane with a vacuum boundary in the z-direction. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"gcscf_beta\" is related to GC-SCF (Grand Canonical Self-Consistent Field) calculations, which is not the type of calculation performed in this project. GC-SCF is typically used for systems with a grand canonical ensemble, where the number of particles is not fixed. However, in this project, the number of atoms is fixed, and the calculation is a ground-state relaxation.\n\nAlthough the project involves a material like graphite (ZrCl2), which is mentioned in the possible usage conditions of the parameter, the calculation type and the ensemble used in the project do not match the typical usage of GC-SCF.\n\nTherefore, the parameter \"gcscf_beta\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"gcscf_beta\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"degauss\" and the project.\n\nThe parameter \"degauss\" is related to the Gaussian spreading value for Brillouin-zone integration in metals. In the project, we have a system with Zr (a transition metal) and Cl atoms, which suggests that the system might exhibit metallic behavior. Additionally, the tags \"Transition Metals\", \"Metallic systems\", and \"occupations = 'smearing'\" are present, indicating that the system is indeed metallic and requires a smearing method for the occupations.\n\nHowever, the calculation type in the project is 'relax', which is a multistep calculation. The parameter \"degauss\" is typically used in single-step calculations like 'scf', 'nscf', or 'bands'. Since the calculation type is 'relax', the parameter \"degauss\" is not directly relevant to the project.\n\nAccording to the rules, if the parameter is not relevant, we should set the value to None.\n\n```python\nparameter_value = {\n    \"degauss\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"mixing_mode\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a ZrCl2 system using the PBE0 exchange-correlation functional. The system is a 2D periodic system in the x-y plane with a vacuum boundary in the z-direction. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"mixing_mode\" parameter controls the type of charge density mixing method used in the self-consistent field (SCF) loop. The default value is \"plain\", which corresponds to charge density Broyden mixing.\n\nConsidering the project's characteristics, we can see that:\n\n* The system is not highly homogeneous, as it has a 2D periodic structure with a vacuum boundary.\n* The system is not highly inhomogeneous, as it does not have a complex or disordered structure.\n* The calculation type is 'relax', which involves SCF loops.\n\nGiven these points, the \"mixing_mode\" parameter is relevant to the project. However, the default value \"plain\" is a reasonable choice for this type of system. There is no clear indication that a more advanced mixing scheme is necessary.\n\nTherefore, the selected value for the \"mixing_mode\" parameter is the default value \"plain\".\n\n```python\nparameter_value = {\"mixing_mode\": \"plain\"}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"upscale\".\n\nThe parameter \"upscale\" is related to the convergence threshold during structural optimization. According to the Quantum ESPRESSO documentation, \"upscale\" is a parameter that controls the maximum reduction factor for the convergence threshold (\"conv_thr\") during structural optimization. This parameter is relevant when performing relaxation calculations, which is the case in this project (calculation = 'relax').\n\nThe project uses the 'verlet' ion dynamics, but the \"upscale\" parameter is also relevant when using 'bfgs' ion dynamics. However, since the project uses 'verlet' ion dynamics, we should be cautious when selecting a value for \"upscale\".\n\nConsidering the project's conditions, such as the use of norm-conserving pseudopotentials, isolated systems, and high symmetry systems, a moderate value for \"upscale\" would be suitable. The default value is \"100.D0\", which is a reasonable starting point.\n\nHowever, since the project uses 'verlet' ion dynamics, we should not use the \"upscale\" parameter. According to the rules, the \"upscale\" parameter is only relevant when ion_dynamics = 'bfgs'. Therefore, we should set the value to None.\n\n```python\nparameter_value = {\n    \"upscale\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fire_nmin\".\n\nThe parameter \"fire_nmin\" is related to the \"fire\" algorithm used in ion dynamics, specifically in relaxation calculations. According to the Quantum ESPRESSO documentation, the \"fire\" algorithm is a robust and efficient method for optimizing atomic positions and cell parameters.\n\nIn the provided project, the calculation type is \"relax\" (as specified in the \"calculation\" tag), and the ion dynamics is set to \"verlet\" (as specified in the \"ion_dynamics\" tag). However, the \"fire_nmin\" parameter is only relevant when the ion dynamics is set to \"fire\", not \"verlet\".\n\nTherefore, based on the provided tags and project, the parameter \"fire_nmin\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fire_nmin\": None\n}\n```\n\nNote that the default value of \"fire_nmin\" is 5, but since it's not relevant to this project, we set the value to None.",
            "Based on the provided project and tags, let's analyze the parameter \"tstress\".\n\nThe parameter \"tstress\" is related to stress calculations, which is one of the tags provided. According to the Quantum ESPRESSO documentation, the \"tstress\" parameter is used to calculate the stress tensor, which is a measure of the internal stress within the material.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation that involves relaxing the atomic positions and cell parameters to find the minimum energy configuration. Stress calculations are relevant to this type of calculation, as the stress tensor can be used to determine the optimal cell parameters.\n\nAccording to the \"Parameter_Value_Conditions\", the \"tstress\" parameter is set to .TRUE. automatically if the calculation is 'vc-md' or 'vc-relax'. Although the calculation type in the project is 'relax', not 'vc-relax', the \"tstress\" parameter is still relevant to the project.\n\nTherefore, the appropriate value for the \"tstress\" parameter is .TRUE.\n\n```python\nparameter_value = {\n    \"tstress\": \".TRUE.\"\n}\n```"
        ],
        "evaluated_parameters_graph": {
            "directed": true,
            "multigraph": false,
            "graph": {},
            "nodes": [
                {
                    "Parameter_Name": "calculation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "scf"
                    },
                    "Description": "calculation\nA string describing the task to be performed",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'",
                        "calculation = 'bands'",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Fixed cell calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "scf": "standard calculation",
                        "nscf": null,
                        "bands": null,
                        "relax": "only the atomic positions are allowed to vary",
                        "md": "ab-initio molecular dynamics (MD) simulations",
                        "vc-relax": "allows to vary both the atomic positions and lattice constants",
                        "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "calculation"
                },
                {
                    "Parameter_Name": "tstress",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "tstress\ncalculate stress",
                    "Possible_Usage_Conditions": [
                        "stress calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'vc-md' or 'vc-relax'",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "when calculation = 'vc-md' or 'vc-relax'"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "tstress"
                },
                {
                    "Parameter_Name": "tprnfor",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "tprnfor\ncalculate forces",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-md'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "when calculation = 'relax','md','vc-md'"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "tprnfor"
                },
                {
                    "Parameter_Name": "ntyp",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ntyp\nnumber of types of atoms in the unit cell",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ntyp"
                },
                {
                    "Parameter_Name": "nbnd",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "insulator": "number of valence bands (number_of_electrons/2)",
                        "metal": "(number of valence bands)*1.2"
                    },
                    "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                    "Possible_Usage_Conditions": [
                        "Insulating systems",
                        "Metallic systems",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nbnd"
                },
                {
                    "Parameter_Name": "occupations",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "occupations\nControls how electronic occupations are determined",
                    "Possible_Usage_Conditions": [
                        "DOS calculations",
                        "stress calculations",
                        "Relaxation calculations",
                        "Dynamics calculations",
                        "Metallic systems",
                        "Insulating systems",
                        "Uniform k-point grid",
                        "Single k-point",
                        "occupations = 'smearing'",
                        "Tetrahedron method (Bloechl's version)",
                        "Linear tetrahedron method",
                        "Optimized tetrahedron method",
                        "Fixed occupations",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": null,
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "smearing": "for metals, requires parameters smearing and degauss",
                        "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                        "tetrahedra_lin": "original linear tetrahedron method, reference only",
                        "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                        "fixed": "for insulators with a gap",
                        "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "occupations"
                },
                {
                    "Parameter_Name": "smearing",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "gaussian"
                    },
                    "Description": "smearing\nControls the type of smearing method to be used",
                    "Possible_Usage_Conditions": [
                        "Metallic systems",
                        "Semiconductor systems",
                        "partial occupations",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "gaussian/gauss": "ordinary Gaussian spreading",
                        "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                        "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                        "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "smearing"
                },
                {
                    "Parameter_Name": "assume_isolated",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'vc-relax'",
                        "Cubic supercells",
                        "2D periodic systems in x-y plane",
                        "Isolated (non-periodic) systems",
                        "charged slabs",
                        "vacuum boundaries",
                        "electrode boundaries",
                        "optional electric field"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "regular periodic calculation w/o any correction",
                        "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                        "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                        "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                    },
                    "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                    "Namelist": "&SYSTEM",
                    "id": "assume_isolated"
                },
                {
                    "Parameter_Name": "esm_bc",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "pbc"
                    },
                    "Description": "esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "Slab systems",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = 'esm'",
                    "Parameter_Value_Conditions": {
                        "pbc": "regular periodic calculation (no ESM)",
                        "bc1": "Vacuum-slab-vacuum (open boundary conditions)",
                        "bc2": "Metal-slab-metal (dual electrode configuration)",
                        "bc3": "Vacuum-slab-metal"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_bc"
                },
                {
                    "Parameter_Name": "scf_must_converge",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": ".TRUE."
                    },
                    "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                    },
                    "Final_comments": "Use with care.",
                    "Namelist": "&ELECTRONS",
                    "id": "scf_must_converge"
                },
                {
                    "Parameter_Name": "conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-6"
                    },
                    "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "conv_thr"
                },
                {
                    "Parameter_Name": "mixing_mode",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "plain"
                    },
                    "Description": "mixing_mode\nControls the type of charge density mixing method",
                    "Possible_Usage_Conditions": [
                        "homogeneous systems",
                        "inhomogeneous systems",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "plain": "charge density Broyden mixing",
                        "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                        "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                    },
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_mode"
                },
                {
                    "Parameter_Name": "mixing_beta",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.7D0"
                    },
                    "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                    "Possible_Usage_Conditions": [
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_beta"
                },
                {
                    "Parameter_Name": "ion_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "calculation=relax": "bfgs",
                        "calculation=md": "verlet",
                        "calculation=vc-relax": "bfgs",
                        "calculation=vc-md": "beeman"
                    },
                    "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                        "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                        "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                        "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                        "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                        "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                        "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_dynamics"
                },
                {
                    "Parameter_Name": "pot_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "atomic"
                    },
                    "Description": "pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "atomic": "extrapolate the potential as if it was a sum of atomic-like orbitals",
                        "first_order": "extrapolate the potential with first-order formula",
                        "second_order": "extrapolate the potential with second order formula"
                    },
                    "Final_comments": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations",
                    "Namelist": "&IONS",
                    "id": "pot_extrapolation"
                },
                {
                    "Parameter_Name": "wfc_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "first_order": "extrapolate the wave-functions with first-order formula",
                        "second_order": "extrapolate the wave-functions with second order formula"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "wfc_extrapolation"
                },
                {
                    "Parameter_Name": "ion_temperature",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "not_controlled"
                    },
                    "Description": "ion_temperature\nControls the ionic temperature using different methods",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                        "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                        "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                        "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                        "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                        "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                        "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                        "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                        "not_controlled": "(default) ionic temperature is not controlled"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_temperature"
                },
                {
                    "Parameter_Name": "tempw",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "300.D0"
                    },
                    "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tempw"
                },
                {
                    "Parameter_Name": "nraise",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                        "1/nraise": "when ion_temperature = 'andersen'"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "nraise"
                },
                {
                    "Parameter_Name": "refold_pos",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'md'",
                        "calculation = 'relax'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'damp'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "refold_pos"
                },
                {
                    "Parameter_Name": "bfgs_ndim",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "1": "standard quasi-Newton BFGS method is used"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "bfgs_ndim"
                },
                {
                    "Parameter_Name": "trust_radius_max",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.8D0"
                    },
                    "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_max"
                },
                {
                    "Parameter_Name": "trust_radius_min",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-3"
                    },
                    "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "trust_radius < trust_radius_min": "BFGS is reset"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_min"
                },
                {
                    "Parameter_Name": "trust_radius_ini",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_ini"
                },
                {
                    "Parameter_Name": "w_1",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.01D0"
                    },
                    "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_1"
                },
                {
                    "Parameter_Name": "w_2",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_2"
                },
                {
                    "Parameter_Name": "fire_dtmax",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "10.D0"
                    },
                    "Description": "fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "fire_dtmax"
                },
                {
                    "Parameter_Name": "cell_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null,
                        "vc-relax": "bfgs"
                    },
                    "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                    "Parameter_Value_Conditions": {
                        "none": "no dynamics (both vc-relax and vc-md)",
                        "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                        "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                        "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                        "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                        "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CELL",
                    "id": "cell_dynamics"
                },
                {
                    "Parameter_Name": "fcp_tolp",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "reads from tolp"
                    },
                    "Description": "fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "FCP calculations",
                        "lfcp = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&FCP",
                    "id": "fcp_tolp"
                },
                {
                    "Card_Name": "K_POINTS",
                    "Namelist": "Card: K_POINTS",
                    "Required/Optional": null,
                    "Card_Options": [
                        "tpiba",
                        "tpiba_b",
                        "tpiba_c",
                        "crystal",
                        "crystal_b",
                        "crystal_c",
                        "gamma",
                        "automatic"
                    ],
                    "Default_Option": "tpiba",
                    "Description": null,
                    "Card_Use_Conditions": null,
                    "Card_Option_Given_Conditions": {
                        "gamma": "wavefunctions can be chosen as real, and specialized subroutines optimized for calculations at the gamma point are used",
                        "automatic": "generates uniform grid of k-points with specified grid and offset parameters"
                    },
                    "Syntax_Given_Option": {
                        "tpiba": "K_POINTS tpiba\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal": "K_POINTS crystal\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_b": "K_POINTS tpiba_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_b": "K_POINTS crystal_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_c": "K_POINTS tpiba_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_c": "K_POINTS crystal_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "automatic": "K_POINTS automatic\nnk1 nk2 nk3 sk1 sk2 sk3",
                        "gamma": "K_POINTS gamma"
                    },
                    "Item_Description": {
                        "nks": "Number of supplied special k-points",
                        "xk_x, xk_y, xk_z": "Special k-points in the irreducible Brillouin Zone (IBZ) of the lattice (with all symmetries)",
                        "wk": "weights",
                        "nk1, nk2, nk3": "These parameters specify the k-point grid (nk1 x nk2 x nk3) as in Monkhorst-Pack grids",
                        "sk1, sk2, sk3": "The grid offsets"
                    },
                    "Item_Conditions": {
                        "sk1, sk2, sk3": "must be 0 (no offset) or 1 (grid displaced by half a grid step in the corresponding direction)",
                        "nks": "must be 3 for tpiba_c and crystal_c options"
                    },
                    "General_Syntax": null,
                    "Final_comments": "Only grids having the full symmetry of the crystal work with tetrahedra. Some grids with offset may not work.",
                    "Possible_Usage_Conditions": [],
                    "id": "K_POINTS"
                },
                {
                    "Card_Name": "OCCUPATIONS",
                    "Namelist": "Card: OCCUPATIONS",
                    "Required/Optional": "optional",
                    "Card_Options": null,
                    "Default_Option": null,
                    "Description": null,
                    "Card_Use_Conditions": {
                        "occupations": "from_input"
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": null,
                    "Item_Description": {
                        "f_inp1": "Occupations of individual states (MAX 10 PER ROW). For spin-polarized calculations, these are majority spin states.",
                        "f_inp2": "Occupations of minority spin states (MAX 10 PER ROW)"
                    },
                    "Item_Conditions": {
                        "f_inp2": "To be specified only for spin-polarized calculations"
                    },
                    "General_Syntax": "OCCUPATIONS\nf_inp1(1) f_inp1(2) . . . f_inp1(nbnd)\n[ f_inp2(1) f_inp2(2) . . . f_inp2(nbnd) ]",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "occupations = 'from_input'"
                    ],
                    "id": "OCCUPATIONS"
                },
                {
                    "Parameter_Name": "tot_charge",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": 0.0
                    },
                    "Description": "tot_charge\nTotal charge of the system. Useful for simulations with charged cells.",
                    "Possible_Usage_Conditions": [
                        "charged cells"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when simulating systems with non-neutral charge states. In periodic calculations, a compensating jellium background is inserted for non-neutral cells.",
                    "Parameter_Value_Conditions": {
                        "0": "neutral cell",
                        "+1": "one electron missing from the system",
                        "-1": "one additional electron"
                    },
                    "Final_comments": "In a periodic calculation a compensating jellium background is inserted to remove divergences if the cell is not neutral.",
                    "Namelist": "&SYSTEM",
                    "id": "tot_charge"
                },
                {
                    "Parameter_Name": "degauss",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.D0"
                    },
                    "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'bands'",
                        "Metallic systems",
                        "partial occupations",
                        "occupations = 'smearing'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "degauss"
                },
                {
                    "Parameter_Name": "nspin",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nspin\nControls spin polarization type in calculations",
                    "Possible_Usage_Conditions": [
                        "nspin = 1",
                        "nspin = 2",
                        "Collinear magnetic calculations (LSDA)",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "1": "non-polarized calculation",
                        "2": "spin-polarized calculation, LSDA (magnetization along z axis)",
                        "4": "spin-polarized calculation, noncollinear (magnetization in generic direction)"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nspin"
                },
                {
                    "Parameter_Name": "constrained_magnetization",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "constrained_magnetization\nUsed to perform constrained calculations in magnetic systems.",
                    "Possible_Usage_Conditions": [
                        "Magnetic systems",
                        "Non-collinear magnetic calculations",
                        "Collinear magnetic calculations (LSDA)"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "no constraint",
                        "total": "total magnetization is constrained by adding a penalty term to total energy, noncolinear case only",
                        "atomic": "atomic magnetization are constrained to defined starting magnetization",
                        "total direction": "angle theta of total magnetization with z axis is constrained",
                        "atomic direction": "only cosine of angle1 of atomic magnetic moment is constrained"
                    },
                    "Final_comments": "Note: symmetrization may prevent to reach the desired orientation of the magnetization. Try not to start with very highly symmetric configurations or use the nosym flag (only as a last remedy)",
                    "Namelist": "&SYSTEM",
                    "id": "constrained_magnetization"
                },
                {
                    "Parameter_Name": "esm_efield",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.d0"
                    },
                    "Description": "esm_efield\ngives the magnitude of the electric field [Ry/a.u.] to be applied between semi-infinite ESM electrodes",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\" and esm_bc = \"bc2\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_efield"
                },
                {
                    "Parameter_Name": "esm_w",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.d0"
                    },
                    "Description": "esm_w\ndetermines the position offset [in a.u.] of the start of the effective screening region, measured relative to the cell edge. (ESM region begins at z = +/- [L_z/2 + esm_w] )",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "periodic cell with defined z-direction",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_w"
                },
                {
                    "Parameter_Name": "esm_nfit",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 4
                    },
                    "Description": "esm_nfit\ngives the number of z-grid points for the polynomial fit along the cell edge",
                    "Possible_Usage_Conditions": [
                        "assume_isolated must be set to 'esm'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_nfit"
                },
                {
                    "Parameter_Name": "cell_dofree",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "all"
                    },
                    "Description": "cell_dofree\nSelect which of the cell parameters should be moved",
                    "Possible_Usage_Conditions": [
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in vc-relax or vc-md calculation",
                    "Parameter_Value_Conditions": {
                        "all": "all axis and angles are moved",
                        "ibrav": "all axis and angles are moved, but the lattice remains consistent with the initial ibrav choice",
                        "a": "the x component of axis 1 (v1_x) is fixed",
                        "b": "the y component of axis 2 (v2_y) is fixed",
                        "c": "the z component of axis 3 (v3_z) is fixed",
                        "fixa": "axis 1 (v1_x,v1_y,v1_z) is fixed",
                        "fixb": "axis 2 (v2_x,v2_y,v2_z) is fixed",
                        "fixc": "axis 3 (v3_x,v3_y,v3_z) is fixed",
                        "x": "only the x component of axis 1 (v1_x) is moved",
                        "y": "only the y component of axis 2 (v2_y) is moved",
                        "z": "only the z component of axis 3 (v3_z) is moved",
                        "xy": "only v1_x and v2_y are moved",
                        "xz": "only v1_x and v3_z are moved",
                        "yz": "only v2_y and v3_z are moved",
                        "xyz": "only v1_x, v2_y, v3_z are moved",
                        "shape": "all axis and angles, keeping the volume fixed",
                        "volume": "the volume changes, keeping all angles fixed (i.e. only celldm(1) changes)",
                        "2Dxy": "only x and y components are allowed to change",
                        "2Dshape": "as above, keeping the area in xy plane fixed",
                        "epitaxial_ab": "fix axis 1 and 2 while allowing axis 3 to move",
                        "epitaxial_ac": "fix axis 1 and 3 while allowing axis 2 to move",
                        "epitaxial_bc": "fix axis 2 and 3 while allowing axis 1 to move"
                    },
                    "Final_comments": "Note: if axis are not orthogonal, some of these options do not work (symmetry is broken).",
                    "Namelist": "&CELL",
                    "id": "cell_dofree"
                },
                {
                    "Parameter_Name": "electron_maxstep",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 100
                    },
                    "Description": "electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "electron_maxstep"
                },
                {
                    "Parameter_Name": "diago_thr_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null,
                        "scf_atomic_orbitals": "1.D-2",
                        "scf_charge_density": "1.D-5",
                        "non_scf": "(conv_thr/N elec)/10"
                    },
                    "Description": "diago_thr_init\nConvergence threshold (ethr) for iterative diagonalization (the check is on eigenvalue convergence)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "During self consistency (scf) the threshold is automatically reduced (but never below 1.D-13) when approaching convergence",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "diago_thr_init"
                },
                {
                    "Card_Name": "CONSTRAINTS",
                    "Namelist": "Card: CONSTRAINTS",
                    "Required/Optional": "optional",
                    "Card_Options": [
                        "type_coord",
                        "atom_coord",
                        "distance",
                        "planar_angle",
                        "torsional_angle",
                        "bennett_proj",
                        "potential_wall"
                    ],
                    "Default_Option": null,
                    "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                    "Card_Use_Conditions": {
                        "calculation": [
                            "calculation = 'relax'",
                            "calculation = 'md'"
                        ],
                        "ion_dynamics": [
                            "damp",
                            "verlet"
                        ],
                        "not_compatible": [
                            "calculation = 'vc-relax'",
                            "calculation = 'vc-md'"
                        ]
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": {
                        "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                        "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                        "distance": "constr_type distance constr(1) constr(2) constr_target",
                        "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                        "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                        "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                        "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                    },
                    "Item_Description": {
                        "nconstr": "The total number of constraints to be applied",
                        "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                        "constr_type": "Type of constraint"
                    },
                    "Item_Conditions": null,
                    "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "ion_dynamics = 'verlet'",
                        "ion_dynamics = 'damp'"
                    ],
                    "id": "CONSTRAINTS"
                },
                {
                    "Parameter_Name": "tolp",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tolp"
                },
                {
                    "Parameter_Name": "delta_t",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D0"
                    },
                    "Description": "delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "positive": "when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling",
                        "negative": "when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps"
                    },
                    "Final_comments": "For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.",
                    "Namelist": "&IONS",
                    "id": "delta_t"
                },
                {
                    "Parameter_Name": "dt",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "20.D0"
                    },
                    "Description": "dt\ntime step for molecular dynamics, in Rydberg atomic units (1 a.u.=4.8378 * 10^-17 s : Note, the Car\u2013Parrinello code uses Hartree atomic units, half that much!!!)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "dt"
                }
            ],
            "edges": [
                {
                    "condition": "automatically set to .TRUE. wh",
                    "source_node": "tstress",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "tstress",
                    "source": "tstress",
                    "target": "calculation"
                },
                {
                    "condition": "parameter is automatically set",
                    "source_node": "tprnfor",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "tprnfor",
                    "source": "tprnfor",
                    "target": "calculation"
                },
                {
                    "condition": "requires smearing and degauss ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "smearing"
                },
                {
                    "condition": "tetrahedra method requires uni",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "K_POINTS"
                },
                {
                    "condition": "from_input option requires occ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "OCCUPATIONS"
                },
                {
                    "condition": "from_input option requires nbn",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "nbnd"
                },
                {
                    "condition": "from_input occupations should ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "tot_charge"
                },
                {
                    "condition": "gaussian smearing for metals o",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "occupations"
                },
                {
                    "condition": "used in Gaussian smearing",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "degauss"
                },
                {
                    "condition": "for spin-polarized calculation",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "nspin"
                },
                {
                    "condition": "for magnetic calculations",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "constrained_magnetization"
                },
                {
                    "condition": "Used with esm to choose bounda",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_bc"
                },
                {
                    "condition": "Used with esm for optional ele",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_efield"
                },
                {
                    "condition": "Related to esm",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_w"
                },
                {
                    "condition": "Related to esm",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "esm_nfit"
                },
                {
                    "condition": "Should be set to \"2Dxy\" when u",
                    "source_node": "assume_isolated",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "assume_isolated",
                    "source": "assume_isolated",
                    "target": "cell_dofree"
                },
                {
                    "condition": "must be set to 'esm'",
                    "source_node": "esm_bc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "esm_bc",
                    "source": "esm_bc",
                    "target": "assume_isolated"
                },
                {
                    "condition": "related when bc2 is used",
                    "source_node": "esm_bc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "esm_bc",
                    "source": "esm_bc",
                    "target": "esm_efield"
                },
                {
                    "condition": "referenced when scf_must_conve",
                    "source_node": "scf_must_converge",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "scf_must_converge",
                    "source": "scf_must_converge",
                    "target": "electron_maxstep"
                },
                {
                    "condition": "In nscf calculations, conv_thr",
                    "source_node": "conv_thr",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "conv_thr",
                    "source": "conv_thr",
                    "target": "diago_thr_init"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "calculation"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "mixing_beta"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "smearing"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "mixing_mode"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "smearing"
                },
                {
                    "condition": "can be used with 'damp' and 'f",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "CONSTRAINTS"
                },
                {
                    "condition": "for vc-relax with 'bfgs', requ",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "cell_dynamics"
                },
                {
                    "condition": "'relax', 'md', 'vc-relax', or ",
                    "source_node": "pot_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "pot_extrapolation",
                    "source": "pot_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "'first_order' and 'second-orde",
                    "source_node": "wfc_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "wfc_extrapolation",
                    "source": "wfc_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tempw"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "nraise"
                },
                {
                    "condition": "used with rescaling method",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tolp"
                },
                {
                    "condition": "used with rescale-T and reduce",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "delta_t"
                },
                {
                    "condition": "reduce-T:\n\"temperature reducti",
                    "source_node": "nraise",
                    "source_type": "&IONS",
                    "relationship_defined_by": "nraise",
                    "source": "nraise",
                    "target": "ion_temperature"
                },
                {
                    "condition": "must be one of: relax, md, vc-",
                    "source_node": "nraise",
                    "source_type": "&IONS",
                    "relationship_defined_by": "nraise",
                    "source": "nraise",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'md' or ion_dynamics m",
                    "source_node": "refold_pos",
                    "source_type": "&IONS",
                    "relationship_defined_by": "refold_pos",
                    "source": "refold_pos",
                    "target": "calculation"
                },
                {
                    "condition": "can be 'damp'",
                    "source_node": "refold_pos",
                    "source_type": "&IONS",
                    "relationship_defined_by": "refold_pos",
                    "source": "refold_pos",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be bfgs",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: relax, md, vc-",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "calculation"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_1",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_1",
                    "source": "w_1",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "w_2",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_2",
                    "source": "w_2",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_2",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_2",
                    "source": "w_2",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "dtmax = fire_dtmax*dt",
                    "source_node": "fire_dtmax",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_dtmax",
                    "source": "fire_dtmax",
                    "target": "dt"
                },
                {
                    "condition": "must be 'bfgs' when cell_dynam",
                    "source_node": "cell_dynamics",
                    "source_type": "&CELL",
                    "relationship_defined_by": "cell_dynamics",
                    "source": "cell_dynamics",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "reads default value from",
                    "source_node": "fcp_tolp",
                    "source_type": "&FCP",
                    "relationship_defined_by": "fcp_tolp",
                    "source": "fcp_tolp",
                    "target": "tolp"
                }
            ]
        },
        "trimmed_documentation": [
            {
                "Parameter_Name": "calculation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "scf"
                },
                "Description": "calculation\nA string describing the task to be performed",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'",
                    "calculation = 'bands'",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Fixed cell calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "scf": "standard calculation",
                    "nscf": null,
                    "bands": null,
                    "relax": "only the atomic positions are allowed to vary",
                    "md": "ab-initio molecular dynamics (MD) simulations",
                    "vc-relax": "allows to vary both the atomic positions and lattice constants",
                    "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tstress",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "tstress\ncalculate stress",
                "Possible_Usage_Conditions": [
                    "stress calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'vc-md' or 'vc-relax'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when calculation = 'vc-md' or 'vc-relax'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "automatically set to .TRUE. when calculation is 'vc-md' or 'vc-relax'"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tprnfor",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": null
                },
                "Description": "tprnfor\ncalculate forces",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-md'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when calculation = 'relax','md','vc-md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "parameter is automatically set to .TRUE. when calculation is 'relax','md','vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "twochem",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when performing two chemical potential calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "must be set to smearing",
                    "nelec_cond": "related parameter",
                    "nbnd_cond": "related parameter",
                    "degauss_cond": "related parameter"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "ntyp",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "ntyp\nnumber of types of atoms in the unit cell",
                "Possible_Usage_Conditions": [],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nbnd",
                "Value_Type": "integer",
                "Default_Values": {
                    "insulator": "number of valence bands (number_of_electrons/2)",
                    "metal": "(number of valence bands)*1.2"
                },
                "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                "Possible_Usage_Conditions": [
                    "Insulating systems",
                    "Metallic systems",
                    "Spin-polarized calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym\nControls whether symmetry is used in calculations",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Low-symmetry large cells",
                    "Isolated (non-periodic) systems",
                    "custom k-points",
                    "nosym k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "When .TRUE., symmetry is not used affecting k-points handling and charge density calculations",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "Disables symmetry usage, k-points list used as is, no symmetry-inequivalent k-points generation, no charge density symmetrization"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "Time reversal symmetry assumes k and -k equivalence unless noinv=.true."
                },
                "Final_comments": "Do not use this option unless you know exactly what you want and what you get",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym_evc",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                "Possible_Usage_Conditions": [
                    "Monkhorst-Pack grid",
                    "custom k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "when noinv=.true., time reversal symmetry is not assumed"
                },
                "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "occupations",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null
                },
                "Description": "occupations\nControls how electronic occupations are determined",
                "Possible_Usage_Conditions": [
                    "DOS calculations",
                    "stress calculations",
                    "Relaxation calculations",
                    "Dynamics calculations",
                    "Metallic systems",
                    "Insulating systems",
                    "Uniform k-point grid",
                    "Single k-point",
                    "occupations = 'smearing'",
                    "Tetrahedron method (Bloechl's version)",
                    "Linear tetrahedron method",
                    "Optimized tetrahedron method",
                    "Fixed occupations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": null,
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "smearing": "for metals, requires parameters smearing and degauss",
                    "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                    "tetrahedra_lin": "original linear tetrahedron method, reference only",
                    "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                    "fixed": "for insulators with a gap",
                    "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "smearing": "requires smearing and degauss parameters",
                    "K_POINTS": "tetrahedra method requires uniform grid of k-points",
                    "OCCUPATIONS": "from_input option requires occupations to be read from OCCUPATIONS card",
                    "nbnd": "from_input option requires nbnd parameter to be set",
                    "tot_charge": "from_input occupations should be consistent with tot_charge"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "one_atom_occupations",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.",
                "Possible_Usage_Conditions": [
                    "single atom/isolated systems",
                    "UPF pseudopotentials",
                    "Non-collinear magnetic calculations",
                    "Spin-orbit coupling",
                    "starting_magnetization=0.0",
                    "Isolated (non-periodic) systems",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only for isolated atoms (nat=1) and when occupations='from_input'",
                "Parameter_Value_Conditions": {
                    "TRUE": "When ordering of wavefunctions as atomic starting wavefunctions is needed"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "Must be set to 'from_input'",
                    "nat": "Must be 1",
                    "starting_magnetization": "Equal to 0.0 for spin-orbit with time-reversal case",
                    "starting_spin_angle": "Can be set to TRUE in magnetic case with spin-orbit"
                },
                "Final_comments": "The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss_cond",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0 Ry"
                },
                "Description": "degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)",
                "Possible_Usage_Conditions": [
                    "Two-chemical-potential calculations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in two-chemical potential calculations when twochem = .True.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "twochem": "Parameter is used when twochem = .True."
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                "Possible_Usage_Conditions": [
                    "calculation = 'bands'",
                    "Metallic systems",
                    "partial occupations",
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "smearing",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "gaussian"
                },
                "Description": "smearing\nControls the type of smearing method to be used",
                "Possible_Usage_Conditions": [
                    "Metallic systems",
                    "Semiconductor systems",
                    "partial occupations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "gaussian/gauss": "ordinary Gaussian spreading",
                    "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                    "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                    "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "gaussian smearing for metals occupations='smearing'",
                    "degauss": "used in Gaussian smearing",
                    "nspin": "for spin-polarized calculations",
                    "constrained_magnetization": "for magnetic calculations"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "assume_isolated",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-relax'",
                    "Cubic supercells",
                    "2D periodic systems in x-y plane",
                    "Isolated (non-periodic) systems",
                    "charged slabs",
                    "vacuum boundaries",
                    "electrode boundaries",
                    "optional electric field"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "none": "regular periodic calculation w/o any correction",
                    "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                    "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                    "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "esm_bc": "Used with esm to choose boundary conditions",
                    "esm_efield": "Used with esm for optional electric field",
                    "esm_w": "Related to esm",
                    "esm_nfit": "Related to esm",
                    "cell_dofree": "Should be set to \"2Dxy\" when using 2D option in vc-relax calculations"
                },
                "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "esm_bc",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "pbc"
                },
                "Description": "esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.",
                "Possible_Usage_Conditions": [
                    "ESM calculations",
                    "Slab systems",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used when assume_isolated = 'esm'",
                "Parameter_Value_Conditions": {
                    "pbc": "regular periodic calculation (no ESM)",
                    "bc1": "Vacuum-slab-vacuum (open boundary conditions)",
                    "bc2": "Metal-slab-metal (dual electrode configuration)",
                    "bc3": "Vacuum-slab-metal"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "assume_isolated": "must be set to 'esm'",
                    "esm_efield": "related when bc2 is used"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "gcscf_beta",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.05D0"
                },
                "Description": "gcscf_beta\nMixing factor for GC-SCF.",
                "Possible_Usage_Conditions": [
                    "GC-SCF calculations",
                    "DOS of materials",
                    "Materials like graphite",
                    "Grand canonical ensemble"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Larger values are recommended if systems with small DOS on Fermi surface as graphite.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "scf_must_converge",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": ".TRUE."
                },
                "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "electron_maxstep": "referenced when scf_must_converge is .false."
                },
                "Final_comments": "Use with care.",
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-6"
                },
                "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "diago_thr_init": "In nscf calculations, conv_thr is used to set the default value of the threshold (ethr) for iterative diagonalization"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_mode",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "plain"
                },
                "Description": "mixing_mode\nControls the type of charge density mixing method",
                "Possible_Usage_Conditions": [
                    "homogeneous systems",
                    "inhomogeneous systems",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "plain": "charge density Broyden mixing",
                    "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                    "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "Used in SCF calculations",
                    "mixing_beta": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_beta",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.7D0"
                },
                "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                "Possible_Usage_Conditions": [
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "mixing_mode": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "ion_positions",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "default"
                },
                "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "",
                "Parameter_Value_Conditions": {
                    "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                    "from_input": "read atomic positions from standard input, even if restarting"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation=relax": "bfgs",
                    "calculation=md": "verlet",
                    "calculation=vc-relax": "bfgs",
                    "calculation=vc-md": "beeman"
                },
                "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                    "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                    "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                    "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                    "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                    "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                    "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "CONSTRAINTS": "can be used with 'damp' and 'fire' for constrained optimization, and with 'verlet' for constrained dynamics",
                    "cell_dynamics": "for vc-relax with 'bfgs', requires cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "pot_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "atomic"
                },
                "Description": "pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "atomic": "extrapolate the potential as if it was a sum of atomic-like orbitals",
                    "first_order": "extrapolate the potential with first-order formula",
                    "second_order": "extrapolate the potential with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "wfc_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "first_order": "extrapolate the wave-functions with first-order formula",
                    "second_order": "extrapolate the wave-functions with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "ion_temperature\nControls the ionic temperature using different methods",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                    "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                    "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                    "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                    "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                    "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                    "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                    "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                    "not_controlled": "(default) ionic temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tempw": "used with most temperature control methods",
                    "nraise": "used with most temperature control methods",
                    "tolp": "used with rescaling method",
                    "delta_t": "used with rescale-T and reduce-T methods"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "tempw",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "300.D0"
                },
                "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "tolp",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                    "1/nraise": "when ion_temperature = 'andersen'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_temperature": {
                        "reduce-T": "temperature reduction by delta_t",
                        "rescale-v": "average temperature rescaling to tempw",
                        "rescaling": "instantaneous temperature rescaling to tempw (with vc-md)",
                        "berendsen": "rise time parameter calculation",
                        "andersen": "collision frequency parameter calculation",
                        "svr": "characteristic time setting"
                    },
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "refold_pos",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                "Possible_Usage_Conditions": [
                    "calculation = 'md'",
                    "calculation = 'relax'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'damp'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be 'md' or ion_dynamics must be 'damp'",
                    "ion_dynamics": "can be 'damp'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "upscale",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "conv_thr": "'conv_thr' is automatically reduced when the relaxation approaches convergence so that forces are still accurate, but 'conv_thr' will not be reduced to less that conv_thr / upscale"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "bfgs_ndim",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "1": "standard quasi-Newton BFGS method is used"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_max",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.8D0"
                },
                "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_min",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-3"
                },
                "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "trust_radius < trust_radius_min": "BFGS is reset"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be bfgs",
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_ini",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_1",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.01D0"
                },
                "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_2",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_alpha_init",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.2D0"
                },
                "Description": "fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": {
                    "0.1-0.3": "recommended values"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_falpha",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.99D0"
                },
                "Description": "fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_nmin",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 5
                },
                "Description": "fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_inc",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.1D0"
                },
                "Description": "fire_f_inc\nFactor for increasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_dec",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "fire_f_dec\nFactor for decreasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_dtmax",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "10.D0"
                },
                "Description": "fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "dt": "dtmax = fire_dtmax*dt"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "cell_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null,
                    "vc-relax": "bfgs"
                },
                "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                "Parameter_Value_Conditions": {
                    "none": "no dynamics (both vc-relax and vc-md)",
                    "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                    "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                    "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                    "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                    "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs' when cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&CELL"
            },
            {
                "Parameter_Name": "fcp_mu",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "constant chemical potential conditions"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if lfcp = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation = relax": "bfgs",
                    "calculation = md": "velocity-verlet"
                },
                "Description": "fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "calculation = 'relax'",
                    "newton": "calculation = 'relax'",
                    "damp": "calculation = 'relax'",
                    "lm": "calculation = 'relax'",
                    "velocity-verlet": "calculation = 'md'",
                    "verlet": "calculation = 'md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": {
                        "bfgs": "must be bfgs",
                        "newton": "must be damp",
                        "damp": "must be damp",
                        "lm": "must be damp",
                        "velocity-verlet": "must be verlet",
                        "verlet": "must be verlet"
                    }
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-2"
                },
                "Description": "fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_ndiis",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 4
                },
                "Description": "fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'",
                    "fcp_dynamics": "only used if equal to 'newton'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_mass",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null,
                    "ESM": "5.D+6 / (xy area)",
                    "ESM-RISM": "5.D+4 / (xy area)"
                },
                "Description": "fcp_mass\nMass of the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_velocity",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "determined by fcp_temperature"
                },
                "Description": "fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'",
                    "fcp_temperature": "determines default value"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'",
                    "rescale-v": "control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "rescale-T": "control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'",
                    "reduce-T": "reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'",
                    "berendsen": "control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "andersen": "control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "initial": "initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on",
                    "not_controlled": "(default) FCP's temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_tempw": [
                        "rescaling",
                        "rescale-v",
                        "berendsen",
                        "andersen",
                        "initial"
                    ],
                    "fcp_tolp": [
                        "rescaling"
                    ],
                    "fcp_nraise": [
                        "rescale-v",
                        "reduce-T",
                        "berendsen",
                        "andersen"
                    ],
                    "fcp_delta_t": [
                        "rescale-T",
                        "reduce-T"
                    ]
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_tempw",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from tempw"
                },
                "Description": "fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be relax or md"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_tolp",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from tolp"
                },
                "Description": "fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tolp": "reads default value from"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_delta_t",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from &IONS -> delta_t"
                },
                "Description": "fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_delta_t < 0": "For cooling/heating rate calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "&IONS": "reads default value from delta_t",
                    "fcp_nraise": "Used in reduce-T mode for step counting",
                    "fcp_temperature": "Determines mode of operation"
                },
                "Final_comments": "The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.",
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": "reads from nraise"
                },
                "Description": "fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_temperature = reduce-T": "every fcp_nraise steps temperature reduced by -fcp_delta_t",
                    "fcp_temperature = rescale-v": "every fcp_nraise steps average temperature rescaled to fcp_tempw",
                    "fcp_temperature = berendsen": "tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise",
                    "fcp_temperature = andersen": "nu*dt = 1/fcp_nraise"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_temperature": "determines how fcp_nraise is used",
                    "fcp_delta_t": "used when fcp_temperature = reduce-T",
                    "fcp_tempw": "used when fcp_temperature = rescale-v"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "nsolv",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nsolv\nThe number of solvents (i.e. molecular species) in the unit cell",
                "Possible_Usage_Conditions": [
                    "RISM calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if trism = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Parameter_Name": "laue_starting_left",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.0
                },
                "Description": "laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.",
                "Possible_Usage_Conditions": [
                    "RISM calculations",
                    "Periodic systems",
                    "Laue boundary conditions",
                    "Systems with solvent-solute interactions"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if trism = .TRUE. and for Laue-RISM",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE.",
                    "laue_expand_left": "used in solvent region definition"
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Card_Name": "CONSTRAINTS",
                "Namelist": "Card: CONSTRAINTS",
                "Required/Optional": "optional",
                "Card_Options": [
                    "type_coord",
                    "atom_coord",
                    "distance",
                    "planar_angle",
                    "torsional_angle",
                    "bennett_proj",
                    "potential_wall"
                ],
                "Default_Option": null,
                "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                "Card_Use_Conditions": {
                    "calculation": [
                        "calculation = 'relax'",
                        "calculation = 'md'"
                    ],
                    "ion_dynamics": [
                        "damp",
                        "verlet"
                    ],
                    "not_compatible": [
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ]
                },
                "Card_Option_Given_Conditions": null,
                "Syntax_Given_Option": {
                    "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                    "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                    "distance": "constr_type distance constr(1) constr(2) constr_target",
                    "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                    "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                    "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                    "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                },
                "Item_Description": {
                    "nconstr": "The total number of constraints to be applied",
                    "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                    "constr_type": "Type of constraint"
                },
                "Item_Conditions": null,
                "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be set to 'damp' or 'verlet'"
                },
                "Final_comments": null,
                "Possible_Usage_Conditions": [
                    "ion_dynamics = 'verlet'",
                    "ion_dynamics = 'damp'"
                ]
            }
        ],
        "trimmed_documentation_string": [
            "Parameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_dtmax\"\nDefault_Values:\n{\n  default:\n\"10.D0\"\n}\nDescription:\n\"fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-2\"\n}\nDescription:\n\"fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_mass\"\nDefault_Values:\n{\n  default: None\n  ESM:\n\"5.D+6 / (xy area)\"\n  ESM-RISM:\n\"5.D+4 / (xy area)\"\n}\nDescription:\n\"fcp_mass\nMass of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"tolp\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_velocity\"\nDefault_Values:\n{\n  default:\n\"determined by fcp_temperature\"\n}\nDescription:\n\"fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_ndiis\"\nDefault_Values:\n{\n  default:\n4\n}\nDescription:\n\"fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"tempw\"\nDefault_Values:\n{\n  default:\n\"300.D0\"\n}\nDescription:\n\"tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nbnd\"\nDefault_Values:\n{\n  insulator:\n\"number of valence bands (number_of_electrons/2)\"\n  metal:\n\"(number of valence bands)*1.2\"\n}\nDescription:\n\"nbnd\nNumber of electronic states (bands) to be calculated.\"\nPossible_Usage_Conditions: [\n  Insulating systems,\n  Metallic systems,\n  Spin-polarized calculations,\n]\nUsage_Conditions:\n\"Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"",
            "Card_Name:\n\"CONSTRAINTS\"\nNamelist:\n\"Card: CONSTRAINTS\"\nDescription:\n\"Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\"\nFinal_comments: None\nPossible_Usage_Conditions: [\n  ion_dynamics = 'verlet',\n  ion_dynamics = 'damp',\n]",
            "Parameter_Name:\n\"fcp_tolp\"\nDefault_Values:\n{\n  default:\n\"reads from tolp\"\n}\nDescription:\n\"fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"nraise\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  nraise*dt:\n\"when ion_temperature = 'berendsen' or 'svr'\"\n  1/nraise:\n\"when ion_temperature = 'andersen'\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"esm_bc\"\nDefault_Values:\n{\n  default:\n\"pbc\"\n}\nDescription:\n\"esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.\"\nPossible_Usage_Conditions: [\n  ESM calculations,\n  Slab systems,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"Used when assume_isolated = 'esm'\"\nParameter_Value_Conditions:\n{\n  pbc:\n\"regular periodic calculation (no ESM)\"\n  bc1:\n\"Vacuum-slab-vacuum (open boundary conditions)\"\n  bc2:\n\"Metal-slab-metal (dual electrode configuration)\"\n  bc3:\n\"Vacuum-slab-metal\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"nosym\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym\nControls whether symmetry is used in calculations\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Low-symmetry large cells,\n  Isolated (non-periodic) systems,\n  custom k-points,\n  nosym k-points,\n  full BZ coverage,\n]\nUsage_Conditions:\n\"When .TRUE., symmetry is not used affecting k-points handling and charge density calculations\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"Disables symmetry usage, k-points list used as is, no symmetry-inequivalent k-points generation, no charge density symmetrization\"\n}\nFinal_comments:\n\"Do not use this option unless you know exactly what you want and what you get\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_tempw\"\nDefault_Values:\n{\n  default:\n\"reads from tempw\"\n}\nDescription:\n\"fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"pot_extrapolation\"\nDefault_Values:\n{\n  default:\n\"atomic\"\n}\nDescription:\n\"pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  atomic:\n\"extrapolate the potential as if it was a sum of atomic-like orbitals\"\n  first_order:\n\"extrapolate the potential with first-order formula\"\n  second_order:\n\"extrapolate the potential with second order formula\"\n}\nFinal_comments:\n\"'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"cell_dynamics\"\nDefault_Values:\n{\n  default: None\n  vc-relax:\n\"bfgs\"\n}\nDescription:\n\"cell_dynamics\nSpecify the type of dynamics for the cell.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions:\n{\n  none:\n\"no dynamics (both vc-relax and vc-md)\"\n  damp-pr:\n\"damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)\"\n  damp-w:\n\"damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)\"\n  bfgs:\n\"BFGS quasi-newton algorithm (vc-relax)\"\n  pr:\n\"(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)\"\n  w:\n\"(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)\"\n}\nFinal_comments: None\nNamelist:\n\"&CELL\"",
            "Parameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"gcscf_beta\"\nDefault_Values:\n{\n  default:\n\"0.05D0\"\n}\nDescription:\n\"gcscf_beta\nMixing factor for GC-SCF.\"\nPossible_Usage_Conditions: [\n  GC-SCF calculations,\n  DOS of materials,\n  Materials like graphite,\n  Grand canonical ensemble,\n]\nUsage_Conditions:\n\"Larger values are recommended if systems with small DOS on Fermi surface as graphite.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"tstress\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"tstress\ncalculate stress\"\nPossible_Usage_Conditions: [\n  stress calculations,\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'vc-md' or 'vc-relax'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'vc-md' or 'vc-relax'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\""
        ],
        "qe_generation_template": "&CONTROL calculation, value: relax, value_type: character\n&CONTROL tstress, value: .TRUE., value_type: logical\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nbnd, value: 9, value_type: integer\n&SYSTEM occupations, value: fixed, value_type: character\n&SYSTEM smearing, value: gaussian, value_type: character\n&SYSTEM assume_isolated, value: esm, value_type: character\n&SYSTEM esm_bc, value: bc1, value_type: character\n&ELECTRONS scf_must_converge, value: .FALSE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-8, value_type: real\n&ELECTRONS mixing_mode, value: plain, value_type: character\n&ELECTRONS mixing_beta, value: 0.4D0, value_type: real\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS pot_extrapolation, value: atomic, value_type: character\n&IONS wfc_extrapolation, value: second_order, value_type: character\n&IONS ion_temperature, value: not_controlled, value_type: character\n&IONS tempw, value: 300.D0, value_type: real\n&IONS nraise, value: 1, value_type: integer\n&IONS refold_pos, value: True, value_type: logical\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 1.0D0, value_type: real\n&IONS trust_radius_min, value: 1.D-3, value_type: real\n&IONS trust_radius_ini, value: 0.5D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS w_2, value: 0.5D0, value_type: real\n&IONS fire_dtmax, value: 10.D0, value_type: real\n&CELL cell_dynamics, value: bfgs, value_type: character\n&FCP fcp_tolp, value: reads from tolp, value_type: real\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710",
        "qe_initialization": "&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710",
        "generated_input": "qe_input=QeMatch(qe_input_gen=\"&CONTROL\\n  calculation = 'relax'\\n  tstress = .TRUE.\\n  tprnfor = .TRUE.\\n  pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\\n  outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\\n  title = 'test'\\n/\\n\\n&SYSTEM\\n  ibrav = 0\\n  nat = 3\\n  ntyp = 2\\n  nbnd = 9\\n  occupations = 'fixed'\\n  smearing = 'gaussian'\\n  ecutwfc = 40.0\\n  ecutrho = 320.0\\n  assume_isolated = 'esm'\\n  esm_bc = 'bc1'\\n/\\n\\n&ELECTRONS\\n  scf_must_converge = .FALSE.\\n  conv_thr = 1.D-8\\n  mixing_mode = 'plain'\\n  mixing_beta = 0.4D0\\n/\\n\\n&IONS\\n  ion_dynamics = 'bfgs'\\n  pot_extrapolation = 'atomic'\\n  wfc_extrapolation = 'second_order'\\n  ion_temperature = 'not_controlled'\\n  tempw = 300.D0\\n  nraise = 1\\n  refold_pos = .TRUE.\\n  bfgs_ndim = 1\\n  trust_radius_max = 1.0D0\\n  trust_radius_min = 1.D-3\\n  trust_radius_ini = 0.5D0\\n  w_1 = 0.01D0\\n  w_2 = 0.5D0\\n  fire_dtmax = 10.D0\\n/\\n\\n&CELL\\n  cell_dynamics = 'bfgs'\\n/\\n\\nFCP fcp_tolp = reads from tolp\\n\\nATOMIC_SPECIES\\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\\nZr     91.224 zr_pbe_v1.uspp\\n\\nATOMIC_POSITIONS angstrom\\nCl       1.7036747598     0.9836170810    10.0213589611\\nCl       1.7036747598     0.9836170810    13.4518319229\\nZr       0.0000000001     1.9672341622    11.7365406129\\n\\nK_POINTS automatic\\n7 7 2 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n    3.4073495193     0.0000000000     0.0000000000\\n   -1.7036747595     2.9508512432     0.0000000000\\n    0.0000000000     0.0000000000    23.4733806710\\n\")",
        "error_msg": [],
        "log_qe_gen_prompt": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nCreate a Quantum Espresso input file for 'calculation = 'relax'\nGround state calculations\nRelaxation calculations\nstress calculations\ntotal energy calculations' calculation of 'ZrCl2' compound, based on the given CONTEXT and DETAILS.\n\n<CONTEXT>\n&CONTROL title = 'test'\n\n&CONTROL calculation, value: relax, value_type: character\n&CONTROL tstress, value: .TRUE., value_type: logical\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nbnd, value: 9, value_type: integer\n&SYSTEM occupations, value: fixed, value_type: character\n&SYSTEM smearing, value: gaussian, value_type: character\n&SYSTEM assume_isolated, value: esm, value_type: character\n&SYSTEM esm_bc, value: bc1, value_type: character\n&ELECTRONS scf_must_converge, value: .FALSE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-8, value_type: real\n&ELECTRONS mixing_mode, value: plain, value_type: character\n&ELECTRONS mixing_beta, value: 0.4D0, value_type: real\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS pot_extrapolation, value: atomic, value_type: character\n&IONS wfc_extrapolation, value: second_order, value_type: character\n&IONS ion_temperature, value: not_controlled, value_type: character\n&IONS tempw, value: 300.D0, value_type: real\n&IONS nraise, value: 1, value_type: integer\n&IONS refold_pos, value: True, value_type: logical\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 1.0D0, value_type: real\n&IONS trust_radius_min, value: 1.D-3, value_type: real\n&IONS trust_radius_ini, value: 0.5D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS w_2, value: 0.5D0, value_type: real\n&IONS fire_dtmax, value: 10.D0, value_type: real\n&CELL cell_dynamics, value: bfgs, value_type: character\n&FCP fcp_tolp, value: reads from tolp, value_type: real\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n</CONTEXT>\n\n<DETAILS>\nCalculate relaxation of the structure based on relax calculation for ZrCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</DETAILS>\n\n<RULES>\n- Write the input file for the given calculation type\n- Set the value of the variables based on the CONTEXT and the DETAILS\n- Use only relevant parameters based on the CONTEXT, DETAILS\n- Each parameter should be under correct namelist\n- Each parameter should have a correct value type such as integer, real, character, or logical\n- The namelists &CONTROL, &SYSTEM, &ELECTRONS, must be in this order exactly\n- The cards ATOMIC_SPECIES, ATOMIC_POSITIONS, K_POINTS, and CELL_PARAMETERS must be present and based on CONTEXT and DETAILS\n- In &CONTROL should have 'pseudo_dir': /home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp and 'outdir':'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir' defined, according to the given CONTEXT\n</RULES>\n\n<OUTPUT>\n- Write the input file\n- Put the code blocks in ```fortran and ```.\n- Review the code to see how the generated code followed the RULES, CONTEXT, and DETAILS, then give some explanation.\n</OUTPUT>\n"
        ],
        "log_qe_input": [
            "&CONTROL\n  calculation = 'relax'\n  tstress = .TRUE.\n  tprnfor = .TRUE.\n  pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n  outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n  title = 'test'\n/\n\n&SYSTEM\n  ibrav = 0\n  nat = 3\n  ntyp = 2\n  nbnd = 9\n  occupations = 'fixed'\n  smearing = 'gaussian'\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  assume_isolated = 'esm'\n  esm_bc = 'bc1'\n/\n\n&ELECTRONS\n  scf_must_converge = .FALSE.\n  conv_thr = 1.D-8\n  mixing_mode = 'plain'\n  mixing_beta = 0.4D0\n/\n\n&IONS\n  ion_dynamics = 'bfgs'\n  pot_extrapolation = 'atomic'\n  wfc_extrapolation = 'second_order'\n  ion_temperature = 'not_controlled'\n  tempw = 300.D0\n  nraise = 1\n  refold_pos = .TRUE.\n  bfgs_ndim = 1\n  trust_radius_max = 1.0D0\n  trust_radius_min = 1.D-3\n  trust_radius_ini = 0.5D0\n  w_1 = 0.01D0\n  w_2 = 0.5D0\n  fire_dtmax = 10.D0\n/\n\n&CELL\n  cell_dynamics = 'bfgs'\n/\n\nFCP fcp_tolp = reads from tolp\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nZr     91.224 zr_pbe_v1.uspp\n\nATOMIC_POSITIONS angstrom\nCl       1.7036747598     0.9836170810    10.0213589611\nCl       1.7036747598     0.9836170810    13.4518319229\nZr       0.0000000001     1.9672341622    11.7365406129\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.4073495193     0.0000000000     0.0000000000\n   -1.7036747595     2.9508512432     0.0000000000\n    0.0000000000     0.0000000000    23.4733806710\n"
        ],
        "log_qe_solution": [],
        "rest_formula_data": {
            "formula": "ZrCl2",
            "k_points_2d": "None",
            "uuid": "00b5d82b-1763-4d98-aec5-83fc8374057c",
            "ase_atom_object": "None",
            "indx": "None"
        },
        "workflow_log": [
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Interface agent",
                    "start_time": "2025-02-07 12:41:45"
                },
                "timestamp": "2025-02-07 12:41:45.812239",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:41:45",
                    "end_time": "2025-02-07 12:41:49",
                    "message": "Interface agent"
                },
                "timestamp": "2025-02-07 12:41:49.351275",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "2D structure generation",
                    "start_time": "2025-02-07 12:41:49"
                },
                "timestamp": "2025-02-07 12:41:49.351371",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:41:49",
                    "end_time": "2025-02-07 12:41:49",
                    "message": "2D structure generation"
                },
                "timestamp": "2025-02-07 12:41:49.544072",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Starting Quantum Espresso documentation collection",
                    "start_time": "2025-02-07 12:41:49"
                },
                "timestamp": "2025-02-07 12:41:49.544182",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:41:49",
                    "end_time": "2025-02-07 12:41:51",
                    "message": "Quantum Espresso documentation collection"
                },
                "timestamp": "2025-02-07 12:41:51.935109",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso condition extraction",
                    "start_time": "2025-02-07 12:41:51"
                },
                "timestamp": "2025-02-07 12:41:51.935182",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:41:51",
                    "end_time": "2025-02-07 12:42:35",
                    "message": "Quantum Espresso condition extraction"
                },
                "timestamp": "2025-02-07 12:42:35.892280",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Parameter graph generation",
                    "start_time": "2025-02-07 12:42:35"
                },
                "timestamp": "2025-02-07 12:42:35.892393",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:42:35",
                    "end_time": "2025-02-07 12:42:35",
                    "message": "Parameter graph generation"
                },
                "timestamp": "2025-02-07 12:42:35.897717",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Documentation collection for trimmed parameters",
                    "start_time": "2025-02-07 12:42:35"
                },
                "timestamp": "2025-02-07 12:42:35.897777",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:42:35",
                    "end_time": "2025-02-07 12:42:35",
                    "message": "Documentation collection for trimmed parameters"
                },
                "timestamp": "2025-02-07 12:42:35.899142",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input parameter evaluation",
                    "start_time": "2025-02-07 12:42:35"
                },
                "timestamp": "2025-02-07 12:42:35.899196",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:42:35",
                    "end_time": "2025-02-07 12:44:40",
                    "message": "Quantum Espresso input parameter evaluation"
                },
                "timestamp": "2025-02-07 12:44:40.296801",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation template",
                    "start_time": "2025-02-07 12:44:40"
                },
                "timestamp": "2025-02-07 12:44:40.297100",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:44:40",
                    "end_time": "2025-02-07 12:44:40",
                    "message": "Quantum Espresso input generation template"
                },
                "timestamp": "2025-02-07 12:44:40.304060",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation",
                    "start_time": "2025-02-07 12:44:40"
                },
                "timestamp": "2025-02-07 12:44:40.304130",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:44:40",
                    "end_time": "2025-02-07 12:44:53",
                    "message": "Quantum Espresso input generation"
                },
                "timestamp": "2025-02-07 12:44:53.596160",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso is initializing",
                    "start_time": "2025-02-07 12:44:53"
                },
                "timestamp": "2025-02-07 12:44:53.596277",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:44:53",
                    "end_time": "2025-02-07 12:44:55",
                    "message": "Quantum Espresso calculation completed successfully"
                },
                "timestamp": "2025-02-07 12:44:55.618475",
                "level": "INFO"
            }
        ],
        "workflow_state": "FINISHED"
    }
]
[
    {
        "project_signature": "test",
        "calculation_description": "Calculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
        "analysis_dict": {
            "description": "Calculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
            "formula": "Tc2",
            "database": "mc3d"
        },
        "get_conditions_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCalculation_types\n- Berry phase calculations\n- Constant bias potential calculations\n- DOS calculations\n- Dynamical Mean Field Theory\n- Dynamics calculations\n- ESM calculations\n- FCP calculations\n- GC-SCF calculations\n- Ground state calculations\n- HP code calculations\n- LDA+U calculations\n- Linear-response calculations\n- Relaxation calculations\n- Two-chemical-potential calculations\n- calculation = 'bands'\n- calculation = 'md'\n- calculation = 'nscf'\n- calculation = 'relax'\n- calculation = 'scf'\n- calculation = 'vc-md'\n- calculation = 'vc-relax'\n- charge density calculations\n- dispersion correction calculations\n- stress calculations\n- total energy calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nFunctional_and_method_types\n- BEEF-type functionals\n- Conjugate gradient diagonalization\n- Davidson diagonalization\n- PPCG diagonalization\n- Paro diagonalization\n- RMM-DIIS diagonalization\n- DFT-D calculations\n- DFT-D2 calculations\n- DFT-D3 calculations\n- Exact exchange calculations\n- Exchange-correlation functional\n- Exchange-hole dipole-moment model\n- Gradient-corrected functionals\n- Hybrid functional calculations\n- Hybrid functionals with exact exchange\n- Many-body dispersion (MBD) corrections\n- Parrinello-Rahman MD\n- Scissor operator corrections\n- Tkatchenko-Scheffler dispersion corrections\n- Wentzcovitch MD\n- functional is NOT one of: B86bPBE, PW86PBE, PBE, BLYP\n- gammaDFT calculations\n- input_dft='PBE0', 'B3LYP'\n- ion_dynamics = 'bfgs'\n- ion_dynamics = 'fire'\n- ion_dynamics = 'verlet'\n- ion_dynamics = 'damp'\n- long-range interactions\n- Non-collinear calculations\n- spin-orbit calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCell_and_material_properties\n- 2D periodic systems in x-y plane\n- Anisotropic supercells\n- Bravais lattice structure (values 0 to 14)\n- Correlated orbitals\n- Cubic supercells\n- DOS of materials\n- Fixed cell calculations\n- Framework/porous systems\n- Hard FFT grid\n- High symmetry systems\n- Insulating systems\n- Low-symmetry large cells\n- Materials like graphite\n- Materials with long-range interaction\n- Metallic systems\n- Monoclinic systems\n- Non-periodic systems\n- Periodic systems\n- Quasi-cubic supercells\n- Rare Earth Elements\n- Semiconductor systems\n- Slab systems\n- Smooth FFT grid\n- Strongly correlated electrons\n- Transition Metals\n- Variable cell calculations\n- charged cells\n- homogeneous systems\n- ibrav = -12\n- ibrav = -13\n- ibrav-defined crystal structure\n- ibrav = 5\n- ibrav = 0\n- inhomogeneous systems\n- non-symmorphic symmetry operations\n- periodic cell with defined z-direction\n- rhombohedral space group\n- single atom/isolated systems\n- symmetry-defined crystal structure\n- variable cell calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nPseudopotential_types\n- PAW sets\n- Pseudopotentials with Hubbard occupation\n- Relativistic pseudopotentials\n- UPF pseudopotentials\n- Ultrasoft pseudopotentials\n- nonlocal pseudopotentials\n- norm-conserving pseudopotentials\n- pseudopotential tables\n- pseudopotentials with spin-orbit coupling\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nMagnetism_and_Spin_conditions\n- Collinear magnetic calculations (LSDA)\n- Collinear spin\n- Constrained magnetization\n- Initial magnetization\n- Magnetic systems\n- Non-collinear magnetic calculations\n- Spin-orbit coupling\n- Spin-polarized calculations\n- lspinorb = .True.\n- nspin = 1\n- nspin = 2\n- starting_magnetization=0.0\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nIsolated_systems_and_boundary_conditions\n- Dielectric environment\n- Isolated (non-periodic) systems\n- Laue boundary conditions\n- Laue-RISM calculations\n- Systems using Reference Interaction Site Model (RISM)\n- Systems with solvent regions\n- Systems with solvent-solute interactions\n- assume_isolated must be set to 'esm'\n- charged slabs\n- constant chemical potential conditions\n- electrode boundaries\n- laue_wall != 'none'\n- vacuum boundaries\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nk_point_settings\n- Automatic k-points\n- Monkhorst-Pack grid\n- Non-automatic k-points\n- Single k-point\n- Uniform k-point grid\n- custom k-points\n- full BZ coverage\n- nosym k-points\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nElectric_field_conditions\n- 0 < emaxpos < 1\n- Kubo terms\n- System with electric field\n- block = .TRUE.\n- dielectrically consistent RISM (DRISM)\n- dipfield = .TRUE.\n- gate = .TRUE.\n- lelfield = .TRUE.\n- lfcp = .TRUE.\n- optional electric field\n- tefield = .TRUE.\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nOccupation_types\n- Fixed occupations\n- Smearing method\n- Grand canonical ensemble\n- Linear tetrahedron method\n- Optimized tetrahedron method\n- DFT+U Hubbard correction\n- DFT+U+V Hubbard correction\n- DFT+U+J Hubbard correction\n- Systems with empty states\n- Tetrahedron method (Bloechl's version)\n- occupations = 'from_input'\n- occupations = 'smearing'\n- partial occupations\n- valence and conduction manifolds\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "condition_tables": "                                       Item  ...                                     Final_comments\n0                         Calculation_types  ...  The calculation is set up to perform a relaxat...\n1               Functional_and_method_types  ...  The calculation uses a pseudopotential and a p...\n2              Cell_and_material_properties  ...  The calculation seems to be well-defined, but ...\n3                     Pseudopotential_types  ...  The calculation uses a pseudopotential, but th...\n4             Magnetism_and_Spin_conditions  ...  The calculation involves relaxation of a struc...\n5  Isolated_systems_and_boundary_conditions  ...  The provided calculation description does not ...\n6                          k_point_settings  ...  The calculation uses a pseudopotential and a p...\n7                 Electric_field_conditions  ...  The provided tags seem to be related to electr...\n8                          Occupation_types  ...  The calculation uses a smearing method for the...\n\n[9 rows x 4 columns]",
        "relevant_conditions": [
            "ibrav = 5",
            "occupations = 'smearing'",
            "input_dft='PBE0', 'B3LYP'",
            "ibrav-defined crystal structure",
            "calculation = 'relax'",
            "full BZ coverage",
            "Pseudopotential_types",
            "High symmetry systems",
            "Transition Metals",
            "Stress calculations",
            "Smearing method",
            "UPF pseudopotentials",
            "k_point_settings",
            "Cell_and_material_properties",
            "starting_magnetization=0.0",
            "Ground state calculations",
            "Gradient-corrected functionals",
            "ion_dynamics = 'bfgs'",
            "norm-conserving pseudopotentials",
            "Hybrid functionals with exact exchange",
            "nspin = 2",
            "Hybrid functional calculations",
            "Periodic systems",
            "Monkhorst-Pack grid",
            "Relaxation calculations",
            "Exchange-correlation functional",
            "Total energy calculations",
            "nspin = 1"
        ],
        "parameter_evaluation_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_ndiis\"\nDefault_Values:\n{\n  default:\n4\n}\nDescription:\n\"fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"lorbm\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lorbm\nIf .TRUE. perform orbital magnetization calculation.\"\nPossible_Usage_Conditions: [\n  calculation = 'nscf',\n  norm-conserving pseudopotentials,\n  Uniform k-point grid,\n  Kubo terms,\n]\nUsage_Conditions:\n\"Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed.\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_dtmax\"\nDefault_Values:\n{\n  default:\n\"10.D0\"\n}\nDescription:\n\"fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mass\"\nDefault_Values:\n{\n  default: None\n  ESM:\n\"5.D+6 / (xy area)\"\n  ESM-RISM:\n\"5.D+4 / (xy area)\"\n}\nDescription:\n\"fcp_mass\nMass of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"celldm\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.\"\nPossible_Usage_Conditions: [\n  ibrav-defined crystal structure,\n]\nUsage_Conditions:\n\"Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified\"\nParameter_Value_Conditions:\n{\n  celldm(1):\n\"is the lattice parameter \"a\" (in BOHR)\"\n  celldm(1) when ibrav=0:\n\"only celldm(1) is used if present\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-2\"\n}\nDescription:\n\"fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tempw\"\nDefault_Values:\n{\n  default:\n\"300.D0\"\n}\nDescription:\n\"tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"rhombohedral\"\nDefault_Values:\n{\n  default:\nTrue\n}\nDescription:\n\"rhombohedral\nControls whether the coordinates of inequivalent atoms are given with respect to rhombohedral axes (TRUE) or hexagonal axes (FALSE). When FALSE, coordinates are internally converted to rhombohedral axes.\"\nPossible_Usage_Conditions: [\n  rhombohedral space group,\n  ibrav = 5,\n]\nUsage_Conditions:\n\"Used only for rhombohedral space groups\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"coordinates given with respect to rhombohedral axes\"\n  FALSE:\n\"coordinates given with respect to hexagonal axes\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nraise\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  nraise*dt:\n\"when ion_temperature = 'berendsen' or 'svr'\"\n  1/nraise:\n\"when ion_temperature = 'andersen'\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_tempw\"\nDefault_Values:\n{\n  default:\n\"reads from tempw\"\n}\nDescription:\n\"fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"pot_extrapolation\"\nDefault_Values:\n{\n  default:\n\"atomic\"\n}\nDescription:\n\"pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  atomic:\n\"extrapolate the potential as if it was a sum of atomic-like orbitals\"\n  first_order:\n\"extrapolate the potential with first-order formula\"\n  second_order:\n\"extrapolate the potential with second order formula\"\n}\nFinal_comments:\n\"'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tolp\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_tolp\"\nDefault_Values:\n{\n  default:\n\"reads from tolp\"\n}\nDescription:\n\"fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"relaxz\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"relaxz\nAllows the relaxation of the system towards the charged plate.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n  gate = .TRUE.,\n  dipfield = .TRUE.,\n]\nUsage_Conditions:\n\"used only if (gate = .TRUE.)\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_velocity\"\nDefault_Values:\n{\n  default:\n\"determined by fcp_temperature\"\n}\nDescription:\n\"fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</Project>\n\n<Conditions>\nibrav = 5\noccupations = 'smearing'\ninput_dft='PBE0', 'B3LYP'\nibrav-defined crystal structure\ncalculation = 'relax'\nfull BZ coverage\nPseudopotential_types\nHigh symmetry systems\nTransition Metals\nStress calculations\nSmearing method\nUPF pseudopotentials\nk_point_settings\nCell_and_material_properties\nstarting_magnetization=0.0\nGround state calculations\nGradient-corrected functionals\nion_dynamics = 'bfgs'\nnorm-conserving pseudopotentials\nHybrid functionals with exact exchange\nnspin = 2\nHybrid functional calculations\nPeriodic systems\nMonkhorst-Pack grid\nRelaxation calculations\nExchange-correlation functional\nTotal energy calculations\nnspin = 1\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "parameters_collection": [
            {
                "calculation": "relax"
            },
            {
                "tprnfor": ".TRUE."
            },
            {
                "ntyp": "1"
            },
            {
                "occupations": "smearing"
            },
            {
                "degauss": "0.01"
            },
            {
                "smearing": "marzari-vanderbilt"
            },
            {
                "scf_must_converge": ".TRUE."
            },
            {
                "conv_thr": "1.D-8"
            },
            {
                "mixing_mode": "local-TF"
            },
            {
                "mixing_beta": "0.7D0"
            },
            {
                "ion_positions": "from_input"
            },
            {
                "ion_dynamics": "bfgs"
            },
            {
                "pot_extrapolation": "atomic"
            },
            {
                "wfc_extrapolation": "first_order"
            },
            {
                "ion_temperature": "not_controlled"
            },
            {
                "tempw": "300.D0"
            },
            {
                "refold_pos": "True"
            },
            {
                "upscale": "100.D0"
            },
            {
                "bfgs_ndim": "1"
            },
            {
                "trust_radius_max": "1.0D0"
            },
            {
                "trust_radius_min": "1.D-3"
            },
            {
                "trust_radius_ini": "0.53D0"
            },
            {
                "w_1": "0.01D0"
            },
            {
                "w_2": "0.3D0"
            },
            {
                "fcp_tolp": "reads from tolp"
            }
        ],
        "evaluated_parameters": [
            "**Relation between the parameter and the project:**\n\nThe parameter \"mixing_beta\" is related to the self-consistency cycle in Quantum ESPRESSO, which is a crucial aspect of the project. The project involves a relaxation calculation (calculation = 'relax') with a hybrid functional (input_dft='PBE0', 'B3LYP'), which requires a self-consistent field (SCF) calculation. The \"mixing_beta\" parameter controls the mixing of the input and output densities in the SCF cycle, which affects the convergence of the calculation.\n\n**Relevance of the parameter to the project:**\n\nGiven that the project involves a relaxation calculation with a hybrid functional, the \"mixing_beta\" parameter is relevant to the project. The Smearing method is also mentioned in the conditions, which is related to the treatment of the Fermi-Dirac distribution, but it is not directly related to the \"mixing_beta\" parameter. However, the presence of the Smearing method in the conditions suggests that the calculation may involve a complex electronic structure, which could benefit from a careful choice of the \"mixing_beta\" parameter.\n\n**Selection of the parameter value:**\n\nBased on the project and conditions, a moderate value of \"mixing_beta\" is suitable. A value of 0.7 (default) is often a good starting point, but it may need to be adjusted depending on the specific system and calculation. However, given the lack of additional information, the default value is a reasonable choice.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"mixing_beta\": \"0.7D0\"\n}\n```\n\nNote that the value is a string, as specified in the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"degauss_cond\".\n\nThe parameter \"degauss_cond\" is related to the smearing method used in Brillouin-zone integration, specifically in two-chemical potential calculations. However, the project provided does not indicate a two-chemical potential calculation (twochem = .True.). Instead, it appears to be a standard DFT calculation with a hybrid functional (PBE0 or B3LYP) for a transition metal system (Tc).\n\nGiven the project's conditions, the parameter \"degauss_cond\" is not relevant. The project does not involve two-chemical potential calculations, and the smearing method is not explicitly mentioned as a requirement.\n\nTherefore, the parameter \"degauss_cond\" is not applicable to this project.\n\n```python\nparameter_value = {\n    \"degauss_cond\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"one_atom_occupations\".\n\nThe project is a Quantum ESPRESSO input file for a Tc (Technetium) crystal structure calculation with 2 atoms in the unit cell. The calculation type is 'relax', which is a multistep calculation. The tags indicate that this is a periodic system with a high-symmetry crystal structure, using a hybrid functional (PBE0 or B3LYP) and UPF pseudopotentials.\n\nThe parameter \"one_atom_occupations\" is used for isolated atoms (nat=1) together with occupations='from_input'. However, in this project, we have 2 atoms in the unit cell (nat=2), so this parameter is not relevant to the project.\n\nAccording to the rules, since the parameter is not relevant, we set the value to None.\n\n```python\nparameter_value = {\n    \"one_atom_occupations\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_ndiis\".\n\nThe parameter \"fcp_ndiis\" is related to the Fictitious Charge Particle (FCP) relaxation method, which is used in Quantum ESPRESSO for certain types of calculations. However, the project provided is a relaxation calculation (calculation = 'relax') of a transition metal system (Tc) using a hybrid functional (PBE0), which does not typically involve FCP calculations.\n\nAccording to the rules, the parameter \"fcp_ndiis\" is only relevant if the calculation type is 'relax' or 'md' and FCP calculations are involved. However, there is no indication in the project that FCP calculations are being performed. Therefore, the parameter \"fcp_ndiis\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_ndiis\": None\n}\n```\n\nNote that the default value of \"fcp_ndiis\" is 4, but since it's not relevant to this project, we set the value to None.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_temperature\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_temperature\" is related to the Fictitious Charge Particle (FCP) temperature control, which is used in molecular dynamics (MD) simulations to control the temperature of the system. However, in this project, the calculation type is 'relax', which is not an MD simulation.\n\nAlthough the 'relax' calculation is mentioned in the Possible_Usage_Conditions of the parameter, it is only relevant when 'lfcp = .TRUE.'. However, there is no indication in the project that 'lfcp' is set to .TRUE..\n\nTherefore, based on the provided project and tags, the parameter \"fcp_temperature\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_temperature\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"lorbm\".\n\nThe parameter \"lorbm\" is related to the calculation of orbital magnetization, which is a property of interest in quantum chemistry and materials science. According to the documentation, \"lorbm\" is used to perform orbital magnetization calculations, but it only works with norm-conserving pseudopotentials and requires a uniform k-point grid.\n\nIn the provided project, the pseudopotential type is specified as \"Tc_ONCV_PBE-1.0.oncvpsp.upf\", which is an ONCV pseudopotential, not a norm-conserving pseudopotential. Therefore, the \"lorbm\" parameter is not relevant to this project.\n\nAdditionally, the calculation type in the project is specified as \"relax\", which is a multistep calculation. The \"lorbm\" parameter is only applicable to single-step calculations, specifically \"nscf\" calculations.\n\nIn conclusion, the \"lorbm\" parameter is not relevant to this project.\n\n```python\nparameter_value = {\n    \"lorbm\": None\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter \"fire_dtmax\" is related to the ion dynamics in the project, specifically when using the FIRE (Fast Inertial Relaxation Engine) minimization algorithm. The FIRE algorithm is a powerful method for relaxing atomic structures, and \"fire_dtmax\" controls the maximum value of the time step \"dt\" during the minimization process.\n\nIn the project, the calculation type is \"relax\", which is a multistep calculation. The ion dynamics is set to \"bfgs\", which is not the same as \"fire\". However, since \"bfgs\" is not mentioned in the possible usage conditions for \"fire_dtmax\", we need to carefully evaluate the relevance of this parameter to the project.\n\n**Relevance of the parameter to the project:**\n\nAlthough the project uses \"bfgs\" ion dynamics, which is not explicitly mentioned in the possible usage conditions for \"fire_dtmax\", the calculation type is indeed \"relax\", which is one of the allowed calculation types for \"fire_dtmax\". However, the ion dynamics \"bfgs\" does not match the required condition \"ion_dynamics = 'fire'\".\n\nTherefore, based on the provided rules and conditions, the parameter \"fire_dtmax\" is not relevant to this project.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"fire_dtmax\": None\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter \"fire_alpha_init\" is related to the ion dynamics in the project, specifically when using the FIRE minimization scheme. In the project, the ion dynamics is set to \"bfgs\", which is a different minimization scheme. However, the calculation type is set to \"relax\", which is a multistep calculation that involves ion dynamics.\n\n**Relevance of the parameter to the project:**\n\nAlthough the ion dynamics is set to \"bfgs\", the calculation type is \"relax\", which makes the parameter \"fire_alpha_init\" not directly relevant to the project. The FIRE minimization scheme is not being used in this project.\n\n**Selected value:**\n\nSince the parameter is not relevant to the project, the value is set to None.\n\n```python\nparameter_value = {\n    \"fire_alpha_init\": None\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter \"trust_radius_min\" is related to the structural relaxation calculation, which is a type of multistep calculation. In the project, the calculation type is 'relax', which is a multistep calculation. The \"trust_radius_min\" parameter is used to control the minimum ionic displacement in the structural relaxation. This parameter is relevant to the project because it is used to prevent the ions from moving too far during the relaxation process, which can lead to instability or convergence issues.\n\n**Relevance of the parameter to the project:**\n\nThe parameter \"trust_radius_min\" is relevant to the project because the calculation type is 'relax', which is a multistep calculation that involves structural relaxation. Additionally, the ion_dynamics is set to 'bfgs', which is a requirement for the usage of this parameter.\n\n**Selection of the parameter value:**\n\nBased on the default value and the possible usage conditions, a suitable value for \"trust_radius_min\" can be selected. A smaller value of \"trust_radius_min\" can help to prevent the ions from moving too far during the relaxation process, but it may also increase the number of iterations required for convergence. A larger value can lead to faster convergence but may also lead to instability.\n\nConsidering the project's requirements, a moderate value of \"trust_radius_min\" is chosen. The default value of \"1.D-3\" is a reasonable choice, but it can be adjusted based on the specific needs of the project.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"trust_radius_min\": \"1.D-3\"\n}\n```\n\nNote: The value \"1.D-3\" is a string representation of the default value, which is a floating-point number. In the actual input file, it should be written as \"1.0D-03\" or \"1.0E-03\" to match the Quantum ESPRESSO input format.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_f_inc\".\n\nThe parameter \"fire_f_inc\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It is a factor for increasing the time step \"dt\" during the simulation.\n\nIn the provided project, the calculation type is \"relax\" (as specified in the Conditions section), and the ion dynamics algorithm is \"bfgs\", not \"fire\". Therefore, the parameter \"fire_f_inc\" is not relevant to this project.\n\nAccording to the RULES, since the parameter is not relevant, we should set its value to None.\n\n```python\nparameter_value = {\n    \"fire_f_inc\": None\n}\n```",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"laue_starting_left\" and the project.\n\nThe parameter \"laue_starting_left\" is related to the Laue-RISM (Reference Interaction Site Model) method, which is used to simulate systems with solvent-solute interactions. However, the project provided does not mention anything about solvent-solute interactions or the use of Laue-RISM. The project is focused on a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 and B3LYP functionals.\n\nGiven the rules and the project details, I conclude that the parameter \"laue_starting_left\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"laue_starting_left\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_nraise\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_nraise\" is related to Fictitious Charge Particle (FCP) calculations, which are used in molecular dynamics (MD) simulations to control temperature adjustments. However, the project does not involve MD simulations, and the calculation type is 'relax', which is a ground-state calculation.\n\nAccording to the rules, the parameter \"fcp_nraise\" is not relevant to the project because:\n\n* The calculation type is 'relax', which is not an MD simulation.\n* The project does not involve FCP calculations (lfcp = .TRUE. is not present in the input file).\n\nTherefore, the parameter \"fcp_nraise\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_nraise\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"conv_thr\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 hybrid functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"conv_thr\" is related to the convergence threshold for self-consistency in self-consistent calculations ('scf'). However, in this project, the calculation type is 'relax', which involves multiple steps, including 'scf' calculations.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"conv_thr\" is 1.D-6, which is a reasonable value for most systems. However, for hybrid functional calculations, a tighter convergence threshold might be necessary to ensure accurate results.\n\nConsidering the project's use of a hybrid functional (PBE0) and the fact that it's a 'relax' calculation, which involves 'scf' steps, it's reasonable to set a tighter convergence threshold. A common value for hybrid functional calculations is 1.D-8.\n\nTherefore, the parameter \"conv_thr\" is relevant to the project, and an appropriate value would be 1.D-8.\n\n```python\nparameter_value = {\"conv_thr\": \"1.D-8\"}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_mass\".\n\nThe parameter \"fcp_mass\" is related to the Fictitious Charge Particle (FCP) method, which is used in Car-Parrinello molecular dynamics (CPMD) simulations. The FCP method is a technique used to accelerate the convergence of the self-consistent field (SCF) cycle in CPMD simulations.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The tags also mention \"ion_dynamics = 'bfgs'\", which indicates that the Broyden-Fletcher-Goldfarb-Shanno (BFGS) algorithm is used for ionic relaxation. However, there is no mention of CPMD or FCP calculations in the project.\n\nAccording to the rules, the parameter \"fcp_mass\" is only relevant if \"lfcp = .TRUE.\" and the calculation type is either \"relax\" or \"md\". Since \"lfcp\" is not mentioned in the project, and the calculation type is \"relax\" but not CPMD, the parameter \"fcp_mass\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_mass\": None\n}\n```\n\nIn conclusion, the parameter \"fcp_mass\" is not relevant to the provided project, and its value is set to None.",
            "Based on the provided project and tags, let's analyze the parameter \"celldm\".\n\nThe project is a Quantum ESPRESSO input file for a calculation involving a Tc (Technetium) crystal structure. The tags indicate that this is a relaxation calculation (calculation = 'relax') with a hybrid functional (input_dft='PBE0', 'B3LYP') and a Monkhorst-Pack grid (k_point_settings) for Brillouin zone sampling.\n\nThe parameter \"celldm\" is related to the crystallographic constants, specifically the lattice parameter \"a\" (in BOHR) when ibrav=0. However, in this project, ibrav is set to 0, which means that only celldm(1) is used if present.\n\nSince the project does not explicitly provide the lattice parameter \"a\" in BOHR, we need to determine if it is necessary for the calculation. According to the Quantum ESPRESSO documentation, when ibrav=0, the lattice parameter \"a\" is not required, and the code will use the CELL_PARAMETERS block to determine the lattice vectors.\n\nTherefore, the parameter \"celldm\" is not relevant to this project, as the lattice parameter \"a\" is not required for the calculation.\n\n```python\nparameter_value = {\n    \"celldm\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"refold_pos\".\n\nThe parameter \"refold_pos\" is related to the ionic dynamics and is used to refold the ions into the supercell at each step. According to the documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md', and applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp').\n\nIn the provided project, the calculation type is 'relax' (as indicated by the tag \"calculation = 'relax'\"), and the ionic dynamics is set to 'bfgs' (as indicated by the tag \"ion_dynamics = 'bfgs'\"). Since 'bfgs' is not 'damp', the parameter \"refold_pos\" is not strictly necessary in this case. However, considering the project's focus on relaxation calculations and the presence of transition metals, it is likely that the ions will undergo significant movements during the relaxation process. Therefore, refolding the ions into the supercell at each step might be beneficial to ensure accurate results.\n\nGiven the project's characteristics and the parameter's purpose, I recommend setting \"refold_pos\" to True.\n\n```python\nparameter_value = {\n    \"refold_pos\": \"True\"\n}\n```\n\nNote that this choice is based on the provided information and might need to be adjusted depending on the specific requirements of the project.",
            "**Relation between the parameter and the project:**\n\nThe parameter \"fire_falpha\" is related to the ion dynamics in the project, specifically when using the \"fire\" algorithm. The \"fire\" algorithm is a optimization technique used in molecular dynamics and relaxation calculations to optimize the ionic positions. The \"fire_falpha\" parameter controls the scaling of the alpha mixing parameter for steps with P > 0, which affects the convergence of the optimization process.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The \"fire\" algorithm is used for ion dynamics, as specified by the tag \"ion_dynamics = 'bfgs'\". However, the \"bfgs\" algorithm is not the same as the \"fire\" algorithm. The \"bfgs\" algorithm is a quasi-Newton optimization method, whereas \"fire\" is a different optimization technique.\n\n**Relevance of the parameter to the project:**\n\nBased on the provided tags, the parameter \"fire_falpha\" is not relevant to the project. The project uses the \"bfgs\" algorithm for ion dynamics, not the \"fire\" algorithm.\n\n**Selected value:**\n\nSince the parameter is not relevant to the project, the value is set to None.\n\n```python\nparameter_value = {\n    \"fire_falpha\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"scf_must_converge\".\n\nThe project is a relaxation calculation (calculation = 'relax') of a transition metal system (Tc) using a hybrid functional (input_dft='PBE0', 'B3LYP') with exact exchange. The system is a periodic crystal structure (ibrav-defined crystal structure) with a Monkhorst-Pack grid (k_point_settings) for k-point sampling.\n\nThe parameter \"scf_must_converge\" is relevant to relaxation calculations, as it determines whether the self-consistent field (SCF) convergence is required for the electronic structure calculation. In relaxation calculations, the SCF convergence is crucial to ensure that the electronic structure is accurately optimized during the ionic relaxation process.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"scf_must_converge\" is \".TRUE.\", which means that the SCF convergence is required by default. However, in some cases, it might be necessary to continue the relaxation calculation even if the SCF convergence is not reached, especially when dealing with complex systems or using hybrid functionals.\n\nConsidering the project's requirements, it is recommended to keep the default value of \"scf_must_converge\" as \".TRUE.\" to ensure accurate electronic structure optimization during the relaxation calculation.\n\n```python\nparameter_value = {\n    \"scf_must_converge\": \".TRUE.\"\n}\n```\n\nNote that setting \"scf_must_converge\" to \".FALSE.\" might lead to inaccurate results or convergence issues, especially in hybrid functional calculations. Therefore, it is not recommended to change the default value unless explicitly required by the specific problem or system being studied.",
            "**Relation between the parameter and the project:**\n\nThe parameter \"ion_dynamics\" is related to the ionic dynamics in the Quantum ESPRESSO calculation. In the project, the calculation type is specified as \"relax\", which is a multistep calculation. The \"ion_dynamics\" parameter is relevant to this type of calculation.\n\nAccording to the Quantum ESPRESSO documentation, the \"ion_dynamics\" parameter specifies the type of ionic dynamics to be used during the relaxation process. In the case of a \"relax\" calculation, the default value is \"bfgs\", which uses the BFGS quasi-newton algorithm based on trust radius procedure.\n\n**Relevance of the parameter to the project:**\n\nThe \"ion_dynamics\" parameter is relevant to the project since the calculation type is \"relax\", which involves ionic dynamics.\n\n**Selection of the appropriate value:**\n\nBased on the project and the conditions, the appropriate value for the \"ion_dynamics\" parameter is \"bfgs\", which is the default value for \"relax\" calculations.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"ion_dynamics\": \"bfgs\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_dynamics\" is related to the Fictitious Charge Particle (FCP) method, which is used to accelerate the convergence of the self-consistent field (SCF) cycle. However, the FCP method is not explicitly activated in the provided project (i.e., `lfcp = .TRUE.` is not present).\n\nAccording to the rules, the parameter \"fcp_dynamics\" is only relevant if `lfcp = .TRUE.` and the calculation type is either 'relax' or 'md'. Since `lfcp = .TRUE.` is not present in the project, the parameter \"fcp_dynamics\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_dynamics\": None\n}\n```\n\nIn this case, the value of the parameter \"fcp_dynamics\" is set to `None`, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_conv_thr\".\n\nThe parameter \"fcp_conv_thr\" is related to the Fictitious Charge Particle (FCP) relaxation, which is a method used in Quantum ESPRESSO to optimize the atomic positions and cell parameters. The convergence threshold on force (eV) is a critical parameter in this process.\n\nIn the provided project, the calculation type is 'relax', which is a multistep calculation. The tags also indicate that the system is a transition metal, and the pseudopotential type is UPF. However, there is no explicit mention of FCP calculations or the use of the lfcp flag.\n\nAccording to the rules, the parameter \"fcp_conv_thr\" is only relevant if lfcp = .TRUE. and calculation = 'relax' or 'md'. Since there is no indication of lfcp being set to .TRUE. in the project, we cannot assume its value.\n\nTherefore, based on the provided information, the parameter \"fcp_conv_thr\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_conv_thr\": None\n}\n```\n\nNote that if the lfcp flag were set to .TRUE. in the project, we would need to consider the default value of \"1.D-2\" or other possible values based on the specific requirements of the calculation.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"smearing\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a calculation involving a Tc (Technetium) crystal structure. The calculation type is 'relax', which is a multistep calculation. The tags indicate that the system is a high-symmetry system, a transition metal, and a periodic system, with a hybrid functional (PBE0 or B3LYP) and a Monkhorst-Pack grid for k-point sampling.\n\nThe \"smearing\" parameter is relevant to this project because it controls the type of smearing method used for the occupation of electronic states. In this case, the system is a metal (Tc), and the calculation involves a hybrid functional, which can lead to fractional occupations. Therefore, a smearing method is necessary to handle these fractional occupations.\n\nConsidering the project's characteristics, the most suitable smearing method is the \"marzari-vanderbilt/cold/m-v/mv\" method, also known as the Marzari-Vanderbilt-DeVita-Payne cold smearing. This method is suitable for metallic systems and is often used in conjunction with hybrid functionals.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"smearing\": \"marzari-vanderbilt\"\n}\n```\n\nNote that the value \"marzari-vanderbilt\" is used instead of \"cold\" or \"m-v\" to maintain consistency with the Quantum ESPRESSO documentation.",
            "**Relation between the parameter and the project:**\n\nThe parameter \"wfc_extrapolation\" is used to extrapolate the wavefunctions from preceding ionic steps in Quantum ESPRESSO calculations. In the provided project, the calculation type is 'relax', which is a multistep calculation. The 'relax' calculation involves ionic relaxation, where the ions are moved to their equilibrium positions. In this case, the wavefunction extrapolation can be useful to speed up the convergence of the calculation.\n\n**Relevance of the parameter to the project:**\n\nBased on the provided conditions, the parameter \"wfc_extrapolation\" is relevant to the project because the calculation type is 'relax', which is one of the allowed conditions for this parameter.\n\n**Selection of the parameter value:**\n\nConsidering the project involves a 'relax' calculation with a hybrid functional (PBE0) and a transition metal (Tc), a moderate level of extrapolation is suitable. Therefore, the recommended value for \"wfc_extrapolation\" is \"first_order\".\n\n**Output:**\n\n```python\nparameter_value = {\n    \"wfc_extrapolation\": \"first_order\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"twochem\".\n\nThe parameter \"twochem\" is related to the simulation of photoexcited systems, which involves constraining a fraction of the electrons in the conduction manifold. This is typically relevant to calculations involving excited states or non-equilibrium systems.\n\nHowever, the provided project is a ground-state calculation (as indicated by the \"calculation = 'relax'\" tag) of a transition metal system (Tc) using a hybrid functional (PBE0 or B3LYP). The project does not involve excited states or non-equilibrium systems.\n\nTherefore, the parameter \"twochem\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"twochem\": None\n}\n```\n\nNote that the value of \"twochem\" is set to None, indicating that it is not relevant to the project.",
            "**Relation between the parameter and the project:**\n\nThe parameter \"tempw\" is related to the temperature control in molecular dynamics (MD) simulations. In the context of the provided project, the calculation type is \"relax\", which is a multistep calculation. The \"tempw\" parameter is relevant to this type of calculation, as it is used to set the target temperature for the thermostat during the relaxation process.\n\n**Relevance of the parameter to the project:**\n\nThe \"tempw\" parameter is relevant to the project because the calculation type is \"relax\", which is one of the allowed usage conditions for this parameter.\n\n**Selection of the parameter value:**\n\nBased on the default value and the context of the project, a suitable value for \"tempw\" can be selected. Since the default value is 300.0 K, which is a reasonable temperature for many materials, we can use this value for the relaxation calculation.\n\n**Python dictionary with the parameter value:**\n\n```python\nparameter_value = {\"tempw\": \"300.D0\"}\n```\n\nNote that the value is a string, as specified in the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"w_1\".\n\nThe parameter \"w_1\" is related to the line search algorithm used in the BFGS (Broyden-Fletcher-Goldfarb-Shanno) optimization method, which is specified in the project by the tag \"ion_dynamics = 'bfgs'\". The BFGS method is a quasi-Newton optimization algorithm used to minimize the total energy of the system.\n\nIn the context of the project, the BFGS method is used for the relaxation calculation (calculation = 'relax'), which is a multistep calculation. The parameter \"w_1\" is used to control the line search algorithm, specifically the Wolfe conditions, which are used to determine the optimal step size during the optimization process.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"w_1\" is 0.01D0, which is a reasonable value for most systems. However, the optimal value of \"w_1\" can depend on the specific system and the desired level of convergence.\n\nGiven the project and tags, the parameter \"w_1\" is relevant to the project, and the default value of 0.01D0 is a reasonable choice.\n\n```python\nparameter_value = {\n    \"w_1\": \"0.01D0\"\n}\n```\n\nNote that the value of \"w_1\" can be adjusted based on the specific needs of the project, but the default value is a good starting point.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_f_dec\".\n\nThe parameter \"fire_f_dec\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It is a factor for decreasing the time step \"dt\" in the fire algorithm.\n\nIn the provided project, the calculation type is \"relax\" and the ion dynamics algorithm is \"bfgs\", not \"fire\". Therefore, the parameter \"fire_f_dec\" is not relevant to this project.\n\nAccording to the rules, since the parameter is not relevant, we set its value to None.\n\n```python\nparameter_value = {\n    \"fire_f_dec\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"w_2\".\n\nThe parameter \"w_2\" is related to the line search algorithm used in the BFGS (Broyden-Fletcher-Goldfarb-Shanno) optimization method, which is specified in the project by the tag \"ion_dynamics = 'bfgs'\". The BFGS method is a quasi-Newton optimization algorithm used to minimize the total energy of the system.\n\nIn the context of the project, the calculation type is \"relax\", which is a multistep calculation. The \"w_2\" parameter is relevant to this type of calculation, as it is used to control the line search algorithm.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"w_2\" is 0.5D0, which is a reasonable choice for most systems. However, the optimal value of \"w_2\" can depend on the specific system being studied.\n\nGiven the project's focus on a transition metal (Tc) and the use of a hybrid functional (PBE0), a slightly smaller value of \"w_2\" might be beneficial to improve the convergence of the relaxation calculation.\n\nTherefore, I recommend a value of \"w_2\" = 0.3D0, which is a common choice for transition metal systems.\n\n```python\nparameter_value = {\"w_2\": \"0.3D0\"}\n```\n\nNote that this value is not drastically different from the default value, and further testing may be necessary to determine the optimal value for this specific system.",
            "**Relation between the parameter and the project:**\n\nThe parameter \"calculation\" is a crucial input in Quantum ESPRESSO, as it determines the type of calculation to be performed. In the provided project, the crystal structure of Tc (Technetium) is defined, and the goal is to perform a calculation that involves relaxing the atomic positions. The project also specifies the use of a hybrid functional (PBE0) and a Monkhorst-Pack grid for k-point sampling.\n\n**Relevance of the parameter to the project:**\n\nThe parameter \"calculation\" is highly relevant to the project, as it needs to be set to a value that allows for the relaxation of atomic positions. The project's conditions specify \"calculation = 'relax'\", which indicates that the atomic positions should be allowed to vary.\n\n**Selection of the parameter value:**\n\nBased on the project's conditions and the rules provided, the appropriate value for the parameter \"calculation\" is \"relax\". This value allows for the relaxation of atomic positions, which is consistent with the project's goals.\n\n**Python dictionary with the parameter value:**\n\n```python\nparameter_value = {\"calculation\": \"relax\"}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"rhombohedral\".\n\nThe project specifies `ibrav = 0`, which indicates a generic crystal structure, not a rhombohedral one. However, the conditions mention `ibrav-defined crystal structure`, which might suggest that the crystal structure is defined by the `ibrav` parameter. Nevertheless, the value of `ibrav` in the project is 0, not 5, which is the value associated with rhombohedral space groups.\n\nThe parameter \"rhombohedral\" is used to control whether the coordinates of inequivalent atoms are given with respect to rhombohedral axes or hexagonal axes. Since the project does not specify a rhombohedral space group (ibrav = 5), this parameter is not relevant to the project.\n\n```python\nparameter_value = {\n    \"rhombohedral\": None\n}\n```\n\nIn this case, the parameter \"rhombohedral\" is not relevant to the project, so its value is set to None.",
            "Based on the provided project and tags, let's analyze the parameter \"nraise\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 hybrid functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"nraise\" is related to temperature control and is relevant to calculations involving molecular dynamics (MD) or variable-cell relaxation (VC-relax). However, in this project, the calculation type is 'relax', which is a static relaxation calculation without MD or VC-relax.\n\nAccording to the rules, the parameter \"nraise\" is not relevant to this project because it is not a MD or VC-relax calculation.\n\n```python\nparameter_value = {\n    \"nraise\": None\n}\n```\n\nNote that the default value of \"nraise\" is 1, but since it's not relevant to this project, we set it to None.",
            "**Relation between the parameter and the project:**\n\nThe parameter \"trust_radius_max\" is related to the structural relaxation calculation, which is a type of multistep calculation. In the project, the calculation type is 'relax', which is a multistep calculation. The \"trust_radius_max\" parameter controls the maximum ionic displacement in the structural relaxation, which is relevant to the project.\n\n**Relevance of the parameter to the project:**\n\nThe parameter \"trust_radius_max\" is relevant to the project because the calculation type is 'relax', which involves structural relaxation. The project also uses the BFGS algorithm for ion dynamics, which is one of the possible usage conditions for this parameter.\n\n**Selection of the parameter value:**\n\nBased on the project and the conditions, the default value of \"trust_radius_max\" is 0.8D0. However, considering the project involves a transition metal (Tc) and a hybrid functional (PBE0), a slightly larger value might be more suitable to ensure convergence. A common value used in the literature for transition metal systems is around 1.0-1.2 \u00c5. Therefore, a reasonable value for \"trust_radius_max\" in this project could be 1.0D0.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"trust_radius_max\": \"1.0D0\"\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter \"trust_radius_ini\" is related to the structural relaxation calculation, which is a type of multistep calculation. In the project, the calculation type is 'relax', which is a multistep calculation. The \"trust_radius_ini\" parameter controls the initial ionic displacement in the structural relaxation, which is relevant to the 'relax' calculation.\n\n**Relevance of the parameter to the project:**\n\nThe parameter \"trust_radius_ini\" is relevant to the project because the calculation type is 'relax', which involves structural relaxation. The project also uses the 'bfgs' ion dynamics, which is one of the possible usage conditions for this parameter.\n\n**Selection of the parameter value:**\n\nBased on the project and the conditions, the default value of \"trust_radius_ini\" is 0.5D0. However, considering the project involves a transition metal (Tc) and a hybrid functional (PBE0), a slightly larger initial displacement might be beneficial for the relaxation process. A common value used in the literature for transition metal systems is around 1.0-1.5 Bohr. Since the project uses angstrom units, we can convert this to angstrom units. Let's choose a value of 1.0 Bohr, which is approximately 0.53 angstrom.\n\n**Python dictionary with the parameter value:**\n\n```python\nparameter_value = {\"trust_radius_ini\": \"0.53D0\"}\n```\n\nNote: The value is set to a string \"0.53D0\" to match the format of the default value.",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"nsolv\" and the project.\n\nThe parameter \"nsolv\" is related to RISM (Reference Interaction Site Model) calculations, which is a method used to study the solvation properties of molecules in a solvent. However, the project provided is a quantum chemistry calculation using Quantum ESPRESSO, which is focused on the electronic structure of a solid-state system (Tc crystal). The project does not involve any solvent or molecular species, and the calculation type is a relaxation calculation, which is a multistep calculation.\n\nAccording to the rules, the parameter \"nsolv\" is not relevant to the project because it is only used in RISM calculations, which is not the case here. Additionally, the project does not involve any solvent or molecular species.\n\n```python\nparameter_value = {\"nsolv\": None}\n```\n\nTherefore, the value of the parameter \"nsolv\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_tempw\".\n\nThe parameter \"fcp_tempw\" is related to Fictitious Charge Particle (FCP) dynamics runs, which is a method used in molecular dynamics simulations to accelerate the convergence of the electronic degrees of freedom. The parameter \"fcp_tempw\" represents the starting temperature (Kelvin) in FCP dynamics runs.\n\nHowever, upon examining the project, we notice that the calculation type is set to \"relax\", which is a multistep calculation. The tags also mention \"ion_dynamics = 'bfgs'\", which indicates that the Broyden-Fletcher-Goldfarb-Shanno (BFGS) algorithm is used for ionic relaxation, rather than molecular dynamics.\n\nFurthermore, there is no mention of FCP calculations or \"lfcp = .TRUE.\" in the project, which are the required conditions for using the \"fcp_tempw\" parameter.\n\nTherefore, based on the provided project and tags, the parameter \"fcp_tempw\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_tempw\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"nosym_evc\".\n\nThe project is a Quantum ESPRESSO input file for a calculation involving a Tc (Technetium) crystal structure with a Monkhorst-Pack grid for k-point sampling. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"nosym_evc\" is related to the use of symmetry in k-point sampling. According to the documentation, if \"nosym_evc\" is set to .TRUE., symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice. This option is relevant when using a Monkhorst-Pack grid or custom k-points, and when aiming for full BZ coverage.\n\nIn the provided project, the k-point sampling is set to \"automatic\" with a Monkhorst-Pack grid, and the calculation aims for full BZ coverage. However, the ibrav parameter is set to 0, which means the crystal structure is not defined by a specific Bravais lattice. Instead, the CELL_PARAMETERS define a custom crystal structure.\n\nGiven the custom crystal structure and the use of a Monkhorst-Pack grid, the \"nosym_evc\" parameter is not directly relevant to this project. The project does not rely on the symmetry of a specific Bravais lattice, and the k-point sampling is already set to cover the full Brillouin zone.\n\nTherefore, the parameter \"nosym_evc\" is not relevant to this project, and its value should be set to None.\n\n```python\nparameter_value = {\n    \"nosym_evc\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"mixing_mode\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 hybrid functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"mixing_mode\" parameter controls the type of charge density mixing method used in the self-consistent field (SCF) loop. The default value is \"plain\", which corresponds to charge density Broyden mixing.\n\nConsidering the project's characteristics:\n\n* The system is a transition metal (Tc) with a complex electronic structure, which may require a more sophisticated mixing scheme.\n* The calculation is a 'relax' type, which involves ionic relaxation and may benefit from a more efficient mixing scheme.\n* The PBE0 hybrid functional is used, which includes exact exchange and may require a more accurate mixing scheme.\n\nGiven these considerations, the \"mixing_mode\" parameter is relevant to the project.\n\nAmong the possible values, \"local-TF\" (charge density Broyden mixing with local-density-dependent TF screening) seems to be the most suitable choice for this project. This is because the system is a transition metal with a complex electronic structure, and the local-TF mixing scheme is designed for highly inhomogeneous systems.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"mixing_mode\": \"local-TF\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"degauss\".\n\nThe parameter \"degauss\" is related to the Brillouin-zone integration in metals, specifically for systems with partial occupations or metallic systems. The project provided is a relaxation calculation (calculation = 'relax') of a Tc (Technetium) crystal structure, which is a transition metal. The input DFT is set to PBE0, a hybrid functional with exact exchange, and the occupations are set to 'smearing', indicating a metallic system.\n\nAccording to the Quantum ESPRESSO documentation, the \"degauss\" parameter is relevant for metallic systems with partial occupations, which is the case here. The default value is 0.D0, but it's recommended to use a value between 0.01 and 0.1 Ry for metallic systems.\n\nConsidering the project and tags, the parameter \"degauss\" is relevant, and a suitable value would be 0.01 Ry.\n\n```python\nparameter_value = {\n    \"degauss\": \"0.01\"\n}\n```\n\nNote that the value 0.01 is a reasonable choice, but it may need to be adjusted depending on the specific system and the desired level of accuracy.",
            "Based on the provided project and tags, let's analyze the parameter \"ion_positions\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"ion_positions\" controls how atomic positions are determined, either from the restart file or standard input. According to the rules, this parameter is relevant to the calculation type 'relax'.\n\nIn the context of this project, the atomic positions are provided in the standard input file (ATOMIC_POSITIONS card). Since the calculation is a 'relax' type, the atomic positions will be updated during the relaxation process. Therefore, it is more appropriate to use the atomic positions from the standard input file.\n\nBased on the possible usage conditions and parameter value conditions, the appropriate value for \"ion_positions\" is \"from_input\".\n\n```python\nparameter_value = {\n    \"ion_positions\": \"from_input\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_delta_t\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_delta_t\" is related to Fictitious Charge Particle (FCP) temperature control, which is used in molecular dynamics (MD) simulations. However, the project is a 'relax' calculation, not an MD simulation.\n\nAccording to the rules, the parameter \"fcp_delta_t\" is not relevant to the project because the calculation type is 'relax', not 'md'. Additionally, the project does not involve FCP calculations, as indicated by the absence of the \"lfcp\" tag.\n\nTherefore, the parameter \"fcp_delta_t\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_delta_t\": None\n}\n```\n\nNote that the value of \"fcp_delta_t\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_nmin\".\n\nThe parameter \"fire_nmin\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It controls the minimum number of steps with a positive pressure (P > 0) before increasing the time step \"dt\".\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The ion dynamics algorithm used is \"bfgs\", not \"fire\". Therefore, the parameter \"fire_nmin\" is not relevant to this project.\n\nAccording to the rules, since the parameter is not relevant, we set its value to None.\n\n```python\nparameter_value = {\n    \"fire_nmin\": None\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter `ntyp` represents the number of types of atoms in the unit cell. In the provided project, there is only one type of atom, Tc (Technetium), as specified in the `ATOMIC_SPECIES` section. The `ntyp` parameter is relevant to the project as it is used to define the number of atomic species in the system.\n\n**Relevance of the parameter:**\n\nThe `ntyp` parameter is relevant to the project as it is used in the `&SYSTEM` namelist, which is present in the project. The value of `ntyp` is required to define the number of atomic species in the system.\n\n**Selecting the appropriate value:**\n\nBased on the project, the value of `ntyp` should be 1, as there is only one type of atom (Tc) in the unit cell.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"ntyp\": \"1\"\n}\n```\n\nNote: The value of `ntyp` is set to \"1\" as a string, as per the output format specified.",
            "Based on the provided project and tags, let's analyze the parameter \"pot_extrapolation\".\n\nThe project is a Quantum ESPRESSO input file for a relaxation calculation (calculation = 'relax') of a Tc (Technetium) crystal structure using the PBE0 hybrid functional. The tags indicate that this is a relaxation calculation with a high-symmetry system, transition metal, and stress calculations.\n\nThe \"pot_extrapolation\" parameter is used to extrapolate the potential from preceding ionic steps, which is relevant for relaxation calculations. According to the documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'.\n\nGiven the project's calculation type is 'relax', the \"pot_extrapolation\" parameter is relevant. The default value is \"atomic\", which extrapolates the potential as if it was a sum of atomic-like orbitals. This is a reasonable choice for a relaxation calculation of a high-symmetry system like Tc.\n\nTherefore, the selected value for the \"pot_extrapolation\" parameter is \"atomic\".\n\n```python\nparameter_value = {\n    \"pot_extrapolation\": \"atomic\"\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter \"upscale\" is related to the structural optimization process in Quantum ESPRESSO. It controls the maximum reduction factor for the convergence threshold (\"conv_thr\") during the optimization. This parameter is relevant when performing relaxation calculations, which is the case in the provided project.\n\nAccording to the Quantum ESPRESSO documentation, the \"upscale\" parameter is used to reduce the convergence threshold during the optimization process. This can help to speed up the calculation, but may also affect the accuracy of the results.\n\n**Relevance to the project:**\n\nThe project is a relaxation calculation (calculation = 'relax') with ion dynamics set to 'bfgs'. Therefore, the \"upscale\" parameter is relevant to this project.\n\n**Selecting the appropriate value:**\n\nBased on the provided conditions, the default value of \"100.D0\" is a reasonable choice. However, it's worth noting that the optimal value of \"upscale\" may depend on the specific system being studied and the desired level of accuracy.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"upscale\": \"100.D0\"\n}\n```\n\nIn this case, the \"upscale\" parameter is relevant to the project, and the default value of \"100.D0\" is selected.",
            "Based on the provided project and tags, let's analyze the parameter \"tprnfor\".\n\nThe parameter \"tprnfor\" is related to the calculation of forces in Quantum ESPRESSO. According to the documentation, it is set to .TRUE. automatically if the calculation type is 'relax', 'md', or 'vc-md'. In the provided project, the calculation type is 'relax', which is a multistep calculation.\n\nThe project is a relaxation calculation of a Tc (Technetium) crystal structure using the PBE0 functional, which is a hybrid functional with exact exchange. The presence of the \"ibrav = 5\" tag indicates that the crystal structure is defined by the ibrav parameter, and the \"calculation = 'relax'\" tag confirms that the calculation type is indeed 'relax'.\n\nGiven that the calculation type is 'relax', the parameter \"tprnfor\" is relevant to the project. According to the documentation, the default value of \"tprnfor\" is .TRUE. for 'relax' calculations.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"tprnfor\": \".TRUE.\"\n}\n```\n\nNote that the value is set to \".TRUE.\" as a string, as per the documentation.",
            "Based on the provided project and tags, let's analyze the parameter \"occupations\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a Tc (Technetium) crystal structure using the PBE0 hybrid functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"occupations\" parameter controls how electronic occupations are determined. In the context of this project, we need to consider the following:\n\n* The system is a transition metal (Tc) with a complex electronic structure.\n* The calculation is a ground-state relaxation calculation, which involves optimizing the atomic positions and cell parameters.\n* The PBE0 hybrid functional is used, which includes exact exchange and is suitable for systems with strong correlations.\n* The k-point grid is a Monkhorst-Pack grid with a relatively high density (18x18x10), which is suitable for metallic systems.\n\nConsidering these factors, the \"occupations\" parameter is relevant to this project. The most suitable value for this parameter is 'smearing', which is suitable for metallic systems and requires the 'smearing' and 'degauss' parameters to be set.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"occupations\": \"smearing\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"ion_temperature\".\n\nThe project is a Quantum ESPRESSO input file for a calculation involving a Tc (Technetium) crystal structure. The calculation type is 'relax', which is a multistep calculation. The tags indicate that this is a relaxation calculation with a hybrid functional (PBE0 or B3LYP) and a Monkhorst-Pack grid for k-point sampling.\n\nThe parameter \"ion_temperature\" is relevant to the project because it is used to control the ionic temperature during the relaxation calculation. According to the Quantum ESPRESSO documentation, the \"ion_temperature\" parameter is used to control the ionic temperature using different methods, such as velocity rescaling or thermostats.\n\nGiven the calculation type 'relax' and the presence of the 'ion_dynamics = bfgs' tag, which indicates that the BFGS algorithm is used for ionic relaxation, a suitable value for \"ion_temperature\" would be 'not_controlled'. This is because the BFGS algorithm is a quasi-Newton method that does not require explicit temperature control.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"ion_temperature\": \"not_controlled\"\n}\n```\n\nNote that the value 'not_controlled' is the default value for the \"ion_temperature\" parameter, but it is still relevant to specify it explicitly in this case to ensure that the ionic temperature is not controlled during the relaxation calculation.",
            "**Relation between the parameter and the project:**\n\nThe parameter \"tolp\" is related to the temperature control in molecular dynamics (MD) simulations. It is used to determine when to rescale the velocities of the atoms to maintain a target temperature. In the context of the provided project, the calculation type is \"relax\", which is a multistep calculation that involves ionic relaxation. However, the project does not explicitly mention molecular dynamics or temperature control.\n\n**Relevance of the parameter to the project:**\n\nAlthough the project involves a \"relax\" calculation, which is one of the possible usage conditions for the \"tolp\" parameter, the project does not mention temperature control or molecular dynamics. Therefore, the \"tolp\" parameter is not directly relevant to the project.\n\n**Selected value:**\n\nSince the parameter is not relevant to the project, the value is set to None.\n\n```python\nparameter_value = {\n    \"tolp\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_mu\".\n\nThe parameter \"fcp_mu\" is related to the Fictitious Charge Particle (FCP) method, which is used to simulate systems under constant chemical potential conditions. The FCP method introduces a fictitious particle with an assigned charge to facilitate these simulations.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The tags also mention \"relaxation calculations\", \"stress calculations\", and \"cell_and_material_properties\", which are all relevant to the relaxation calculation.\n\nHowever, there is no indication in the project that the FCP method is being used or that constant chemical potential conditions are required. The project uses a standard DFT calculation with a PBE0 functional, and there is no mention of a fictitious charge particle or chemical potential.\n\nTherefore, based on the provided information, the parameter \"fcp_mu\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_mu\": None\n}\n```\n\nNote that the value of \"fcp_mu\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_tolp\".\n\nThe parameter \"fcp_tolp\" is related to the FCP (Fermi-Dirac smearing) method, which is used to calculate the electronic temperature in molecular dynamics simulations. The parameter \"fcp_tolp\" is a tolerance value for velocity rescaling, which is used to control the temperature fluctuations during the simulation.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The tags also mention \"relaxation calculations\", \"stress calculations\", and \"smearing method\", which are all relevant to the FCP method.\n\nHowever, the project does not explicitly mention the use of the FCP method or the \"lfcp\" flag, which is required for the \"fcp_tolp\" parameter to be relevant. Therefore, based on the provided information, it is not clear if the \"fcp_tolp\" parameter is relevant to the project.\n\nHowever, considering the presence of the \"smearing method\" tag and the fact that the project is a relaxation calculation, it is possible that the FCP method is being used. Therefore, I will provide a value for the \"fcp_tolp\" parameter, but with a note that it may not be relevant to the project.\n\n```python\nparameter_value = {\"fcp_tolp\": \"reads from tolp\"}\n```\n\nNote: The value \"reads from tolp\" is the default value for the \"fcp_tolp\" parameter, which means that the tolerance value will be read from the \"tolp\" parameter. If the \"tolp\" parameter is not specified, the default value of \"tolp\" will be used.",
            "Based on the provided project and tags, let's analyze the parameter \"relaxz\".\n\nThe parameter \"relaxz\" is related to the relaxation of the system towards a charged plate, which is typically used in calculations involving a gate or dipole correction. However, in the provided project, there is no indication of a gate or dipole correction being used. The calculation type is specified as \"relax\", which is a multistep calculation, but it does not involve a charged plate or dipole correction.\n\nAccording to the rules, the parameter \"relaxz\" is only used if (gate = .TRUE.), which is not the case in this project. Therefore, the parameter \"relaxz\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"relaxz\": None\n}\n```\n\nIn this case, the value of \"relaxz\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_velocity\".\n\nThe parameter \"fcp_velocity\" is related to the Fictitious Charge Particle (FCP) method, which is used in Car-Parrinello molecular dynamics (CPMD) simulations. The FCP method is a technique used to accelerate the convergence of the electronic degrees of freedom in CPMD simulations.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The tags also mention \"ion_dynamics = 'bfgs'\", which indicates that the BFGS algorithm is used for ionic relaxation. However, there is no mention of CPMD or FCP calculations.\n\nAccording to the rules, the parameter \"fcp_velocity\" is only relevant if \"lfcp = .TRUE.\" and the calculation type is either \"relax\" or \"md\". Since there is no indication of FCP calculations in the project, the parameter \"fcp_velocity\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_velocity\": None\n}\n```\n\nIn this case, the value of the parameter \"fcp_velocity\" is set to None, indicating that it is not relevant to the project.",
            "**Relation between the parameter and the project:**\n\nThe parameter `bfgs_ndim` is related to the BFGS algorithm used in the relaxation calculation. In the project, the `ion_dynamics` tag is set to `'bfgs'`, which indicates that the BFGS algorithm will be used for the relaxation calculation. The `calculation` tag is set to `'relax'`, which is a multistep calculation type that involves relaxation of the ionic positions.\n\n**Relevance of the parameter to the project:**\n\nBased on the rules, the parameter `bfgs_ndim` is relevant to the project because the calculation type is `'relax'` and the `ion_dynamics` tag is set to `'bfgs'`. This matches the usage conditions specified in the parameter documentation.\n\n**Selection of the parameter value:**\n\nThe default value of `bfgs_ndim` is 1, which corresponds to the standard quasi-Newton BFGS method. Since there is no specific reason to change this value, we will stick with the default value.\n\n**Output:**\n\n```python\nparameter_value = {\n    \"bfgs_ndim\": \"1\"\n}\n```\n\nNote that the value is set to \"1\" as a string, as per the output format requirements."
        ],
        "evaluated_parameters_graph": {
            "directed": true,
            "multigraph": false,
            "graph": {},
            "nodes": [
                {
                    "Parameter_Name": "calculation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "scf"
                    },
                    "Description": "calculation\nA string describing the task to be performed",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'",
                        "calculation = 'bands'",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Fixed cell calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "scf": "standard calculation",
                        "nscf": null,
                        "bands": null,
                        "relax": "only the atomic positions are allowed to vary",
                        "md": "ab-initio molecular dynamics (MD) simulations",
                        "vc-relax": "allows to vary both the atomic positions and lattice constants",
                        "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "calculation"
                },
                {
                    "Parameter_Name": "tprnfor",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "tprnfor\ncalculate forces",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-md'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "when calculation = 'relax','md','vc-md'"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "tprnfor"
                },
                {
                    "Parameter_Name": "ntyp",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ntyp\nnumber of types of atoms in the unit cell",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ntyp"
                },
                {
                    "Parameter_Name": "occupations",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "occupations\nControls how electronic occupations are determined",
                    "Possible_Usage_Conditions": [
                        "DOS calculations",
                        "stress calculations",
                        "Relaxation calculations",
                        "Dynamics calculations",
                        "Metallic systems",
                        "Insulating systems",
                        "Uniform k-point grid",
                        "Single k-point",
                        "occupations = 'smearing'",
                        "Tetrahedron method (Bloechl's version)",
                        "Linear tetrahedron method",
                        "Optimized tetrahedron method",
                        "Fixed occupations",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": null,
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "smearing": "for metals, requires parameters smearing and degauss",
                        "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                        "tetrahedra_lin": "original linear tetrahedron method, reference only",
                        "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                        "fixed": "for insulators with a gap",
                        "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "occupations"
                },
                {
                    "Parameter_Name": "degauss",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.D0"
                    },
                    "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'bands'",
                        "Metallic systems",
                        "partial occupations",
                        "occupations = 'smearing'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "degauss"
                },
                {
                    "Parameter_Name": "smearing",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "gaussian"
                    },
                    "Description": "smearing\nControls the type of smearing method to be used",
                    "Possible_Usage_Conditions": [
                        "Metallic systems",
                        "Semiconductor systems",
                        "partial occupations",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "gaussian/gauss": "ordinary Gaussian spreading",
                        "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                        "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                        "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "smearing"
                },
                {
                    "Parameter_Name": "scf_must_converge",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": ".TRUE."
                    },
                    "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                    },
                    "Final_comments": "Use with care.",
                    "Namelist": "&ELECTRONS",
                    "id": "scf_must_converge"
                },
                {
                    "Parameter_Name": "conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-6"
                    },
                    "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "conv_thr"
                },
                {
                    "Parameter_Name": "mixing_mode",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "plain"
                    },
                    "Description": "mixing_mode\nControls the type of charge density mixing method",
                    "Possible_Usage_Conditions": [
                        "homogeneous systems",
                        "inhomogeneous systems",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "plain": "charge density Broyden mixing",
                        "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                        "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                    },
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_mode"
                },
                {
                    "Parameter_Name": "mixing_beta",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.7D0"
                    },
                    "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                    "Possible_Usage_Conditions": [
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_beta"
                },
                {
                    "Parameter_Name": "ion_positions",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "default"
                    },
                    "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "",
                    "Parameter_Value_Conditions": {
                        "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                        "from_input": "read atomic positions from standard input, even if restarting"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_positions"
                },
                {
                    "Parameter_Name": "ion_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "calculation=relax": "bfgs",
                        "calculation=md": "verlet",
                        "calculation=vc-relax": "bfgs",
                        "calculation=vc-md": "beeman"
                    },
                    "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                        "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                        "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                        "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                        "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                        "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                        "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_dynamics"
                },
                {
                    "Parameter_Name": "pot_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "atomic"
                    },
                    "Description": "pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "atomic": "extrapolate the potential as if it was a sum of atomic-like orbitals",
                        "first_order": "extrapolate the potential with first-order formula",
                        "second_order": "extrapolate the potential with second order formula"
                    },
                    "Final_comments": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations",
                    "Namelist": "&IONS",
                    "id": "pot_extrapolation"
                },
                {
                    "Parameter_Name": "wfc_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "first_order": "extrapolate the wave-functions with first-order formula",
                        "second_order": "extrapolate the wave-functions with second order formula"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "wfc_extrapolation"
                },
                {
                    "Parameter_Name": "ion_temperature",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "not_controlled"
                    },
                    "Description": "ion_temperature\nControls the ionic temperature using different methods",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                        "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                        "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                        "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                        "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                        "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                        "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                        "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                        "not_controlled": "(default) ionic temperature is not controlled"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_temperature"
                },
                {
                    "Parameter_Name": "tempw",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "300.D0"
                    },
                    "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tempw"
                },
                {
                    "Parameter_Name": "refold_pos",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'md'",
                        "calculation = 'relax'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'damp'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "refold_pos"
                },
                {
                    "Parameter_Name": "upscale",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "upscale"
                },
                {
                    "Parameter_Name": "bfgs_ndim",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "1": "standard quasi-Newton BFGS method is used"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "bfgs_ndim"
                },
                {
                    "Parameter_Name": "trust_radius_max",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.8D0"
                    },
                    "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_max"
                },
                {
                    "Parameter_Name": "trust_radius_min",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-3"
                    },
                    "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "trust_radius < trust_radius_min": "BFGS is reset"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_min"
                },
                {
                    "Parameter_Name": "trust_radius_ini",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_ini"
                },
                {
                    "Parameter_Name": "w_1",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.01D0"
                    },
                    "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_1"
                },
                {
                    "Parameter_Name": "w_2",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_2"
                },
                {
                    "Parameter_Name": "fcp_tolp",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "reads from tolp"
                    },
                    "Description": "fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "FCP calculations",
                        "lfcp = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&FCP",
                    "id": "fcp_tolp"
                },
                {
                    "Card_Name": "K_POINTS",
                    "Namelist": "Card: K_POINTS",
                    "Required/Optional": null,
                    "Card_Options": [
                        "tpiba",
                        "tpiba_b",
                        "tpiba_c",
                        "crystal",
                        "crystal_b",
                        "crystal_c",
                        "gamma",
                        "automatic"
                    ],
                    "Default_Option": "tpiba",
                    "Description": null,
                    "Card_Use_Conditions": null,
                    "Card_Option_Given_Conditions": {
                        "gamma": "wavefunctions can be chosen as real, and specialized subroutines optimized for calculations at the gamma point are used",
                        "automatic": "generates uniform grid of k-points with specified grid and offset parameters"
                    },
                    "Syntax_Given_Option": {
                        "tpiba": "K_POINTS tpiba\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal": "K_POINTS crystal\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_b": "K_POINTS tpiba_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_b": "K_POINTS crystal_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_c": "K_POINTS tpiba_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_c": "K_POINTS crystal_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "automatic": "K_POINTS automatic\nnk1 nk2 nk3 sk1 sk2 sk3",
                        "gamma": "K_POINTS gamma"
                    },
                    "Item_Description": {
                        "nks": "Number of supplied special k-points",
                        "xk_x, xk_y, xk_z": "Special k-points in the irreducible Brillouin Zone (IBZ) of the lattice (with all symmetries)",
                        "wk": "weights",
                        "nk1, nk2, nk3": "These parameters specify the k-point grid (nk1 x nk2 x nk3) as in Monkhorst-Pack grids",
                        "sk1, sk2, sk3": "The grid offsets"
                    },
                    "Item_Conditions": {
                        "sk1, sk2, sk3": "must be 0 (no offset) or 1 (grid displaced by half a grid step in the corresponding direction)",
                        "nks": "must be 3 for tpiba_c and crystal_c options"
                    },
                    "General_Syntax": null,
                    "Final_comments": "Only grids having the full symmetry of the crystal work with tetrahedra. Some grids with offset may not work.",
                    "Possible_Usage_Conditions": [],
                    "id": "K_POINTS"
                },
                {
                    "Card_Name": "OCCUPATIONS",
                    "Namelist": "Card: OCCUPATIONS",
                    "Required/Optional": "optional",
                    "Card_Options": null,
                    "Default_Option": null,
                    "Description": null,
                    "Card_Use_Conditions": {
                        "occupations": "from_input"
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": null,
                    "Item_Description": {
                        "f_inp1": "Occupations of individual states (MAX 10 PER ROW). For spin-polarized calculations, these are majority spin states.",
                        "f_inp2": "Occupations of minority spin states (MAX 10 PER ROW)"
                    },
                    "Item_Conditions": {
                        "f_inp2": "To be specified only for spin-polarized calculations"
                    },
                    "General_Syntax": "OCCUPATIONS\nf_inp1(1) f_inp1(2) . . . f_inp1(nbnd)\n[ f_inp2(1) f_inp2(2) . . . f_inp2(nbnd) ]",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "occupations = 'from_input'"
                    ],
                    "id": "OCCUPATIONS"
                },
                {
                    "Parameter_Name": "nbnd",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "insulator": "number of valence bands (number_of_electrons/2)",
                        "metal": "(number of valence bands)*1.2"
                    },
                    "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                    "Possible_Usage_Conditions": [
                        "Insulating systems",
                        "Metallic systems",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nbnd"
                },
                {
                    "Parameter_Name": "tot_charge",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": 0.0
                    },
                    "Description": "tot_charge\nTotal charge of the system. Useful for simulations with charged cells.",
                    "Possible_Usage_Conditions": [
                        "charged cells"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when simulating systems with non-neutral charge states. In periodic calculations, a compensating jellium background is inserted for non-neutral cells.",
                    "Parameter_Value_Conditions": {
                        "0": "neutral cell",
                        "+1": "one electron missing from the system",
                        "-1": "one additional electron"
                    },
                    "Final_comments": "In a periodic calculation a compensating jellium background is inserted to remove divergences if the cell is not neutral.",
                    "Namelist": "&SYSTEM",
                    "id": "tot_charge"
                },
                {
                    "Parameter_Name": "nspin",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nspin\nControls spin polarization type in calculations",
                    "Possible_Usage_Conditions": [
                        "nspin = 1",
                        "nspin = 2",
                        "Collinear magnetic calculations (LSDA)",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "1": "non-polarized calculation",
                        "2": "spin-polarized calculation, LSDA (magnetization along z axis)",
                        "4": "spin-polarized calculation, noncollinear (magnetization in generic direction)"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nspin"
                },
                {
                    "Parameter_Name": "constrained_magnetization",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "constrained_magnetization\nUsed to perform constrained calculations in magnetic systems.",
                    "Possible_Usage_Conditions": [
                        "Magnetic systems",
                        "Non-collinear magnetic calculations",
                        "Collinear magnetic calculations (LSDA)"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "no constraint",
                        "total": "total magnetization is constrained by adding a penalty term to total energy, noncolinear case only",
                        "atomic": "atomic magnetization are constrained to defined starting magnetization",
                        "total direction": "angle theta of total magnetization with z axis is constrained",
                        "atomic direction": "only cosine of angle1 of atomic magnetic moment is constrained"
                    },
                    "Final_comments": "Note: symmetrization may prevent to reach the desired orientation of the magnetization. Try not to start with very highly symmetric configurations or use the nosym flag (only as a last remedy)",
                    "Namelist": "&SYSTEM",
                    "id": "constrained_magnetization"
                },
                {
                    "Parameter_Name": "electron_maxstep",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 100
                    },
                    "Description": "electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "electron_maxstep"
                },
                {
                    "Parameter_Name": "diago_thr_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null,
                        "scf_atomic_orbitals": "1.D-2",
                        "scf_charge_density": "1.D-5",
                        "non_scf": "(conv_thr/N elec)/10"
                    },
                    "Description": "diago_thr_init\nConvergence threshold (ethr) for iterative diagonalization (the check is on eigenvalue convergence)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "During self consistency (scf) the threshold is automatically reduced (but never below 1.D-13) when approaching convergence",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "diago_thr_init"
                },
                {
                    "Card_Name": "CONSTRAINTS",
                    "Namelist": "Card: CONSTRAINTS",
                    "Required/Optional": "optional",
                    "Card_Options": [
                        "type_coord",
                        "atom_coord",
                        "distance",
                        "planar_angle",
                        "torsional_angle",
                        "bennett_proj",
                        "potential_wall"
                    ],
                    "Default_Option": null,
                    "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                    "Card_Use_Conditions": {
                        "calculation": [
                            "calculation = 'relax'",
                            "calculation = 'md'"
                        ],
                        "ion_dynamics": [
                            "damp",
                            "verlet"
                        ],
                        "not_compatible": [
                            "calculation = 'vc-relax'",
                            "calculation = 'vc-md'"
                        ]
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": {
                        "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                        "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                        "distance": "constr_type distance constr(1) constr(2) constr_target",
                        "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                        "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                        "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                        "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                    },
                    "Item_Description": {
                        "nconstr": "The total number of constraints to be applied",
                        "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                        "constr_type": "Type of constraint"
                    },
                    "Item_Conditions": null,
                    "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "ion_dynamics = 'verlet'",
                        "ion_dynamics = 'damp'"
                    ],
                    "id": "CONSTRAINTS"
                },
                {
                    "Parameter_Name": "cell_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null,
                        "vc-relax": "bfgs"
                    },
                    "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                    "Parameter_Value_Conditions": {
                        "none": "no dynamics (both vc-relax and vc-md)",
                        "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                        "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                        "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                        "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                        "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CELL",
                    "id": "cell_dynamics"
                },
                {
                    "Parameter_Name": "nraise",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                        "1/nraise": "when ion_temperature = 'andersen'"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "nraise"
                },
                {
                    "Parameter_Name": "tolp",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tolp"
                },
                {
                    "Parameter_Name": "delta_t",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D0"
                    },
                    "Description": "delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "positive": "when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling",
                        "negative": "when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps"
                    },
                    "Final_comments": "For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.",
                    "Namelist": "&IONS",
                    "id": "delta_t"
                }
            ],
            "edges": [
                {
                    "condition": "parameter is automatically set",
                    "source_node": "tprnfor",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "tprnfor",
                    "source": "tprnfor",
                    "target": "calculation"
                },
                {
                    "condition": "requires smearing and degauss ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "smearing"
                },
                {
                    "condition": "tetrahedra method requires uni",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "K_POINTS"
                },
                {
                    "condition": "from_input option requires occ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "OCCUPATIONS"
                },
                {
                    "condition": "from_input option requires nbn",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "nbnd"
                },
                {
                    "condition": "from_input occupations should ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "tot_charge"
                },
                {
                    "condition": "gaussian smearing for metals o",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "occupations"
                },
                {
                    "condition": "used in Gaussian smearing",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "degauss"
                },
                {
                    "condition": "for spin-polarized calculation",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "nspin"
                },
                {
                    "condition": "for magnetic calculations",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "constrained_magnetization"
                },
                {
                    "condition": "referenced when scf_must_conve",
                    "source_node": "scf_must_converge",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "scf_must_converge",
                    "source": "scf_must_converge",
                    "target": "electron_maxstep"
                },
                {
                    "condition": "In nscf calculations, conv_thr",
                    "source_node": "conv_thr",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "conv_thr",
                    "source": "conv_thr",
                    "target": "diago_thr_init"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "calculation"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "mixing_beta"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "smearing"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "mixing_mode"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "smearing"
                },
                {
                    "condition": "can be used with 'damp' and 'f",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "CONSTRAINTS"
                },
                {
                    "condition": "for vc-relax with 'bfgs', requ",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "cell_dynamics"
                },
                {
                    "condition": "'relax', 'md', 'vc-relax', or ",
                    "source_node": "pot_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "pot_extrapolation",
                    "source": "pot_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "'first_order' and 'second-orde",
                    "source_node": "wfc_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "wfc_extrapolation",
                    "source": "wfc_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tempw"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "nraise"
                },
                {
                    "condition": "used with rescaling method",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tolp"
                },
                {
                    "condition": "used with rescale-T and reduce",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "delta_t"
                },
                {
                    "condition": "must be 'md' or ion_dynamics m",
                    "source_node": "refold_pos",
                    "source_type": "&IONS",
                    "relationship_defined_by": "refold_pos",
                    "source": "refold_pos",
                    "target": "calculation"
                },
                {
                    "condition": "can be 'damp'",
                    "source_node": "refold_pos",
                    "source_type": "&IONS",
                    "relationship_defined_by": "refold_pos",
                    "source": "refold_pos",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "'conv_thr' is automatically re",
                    "source_node": "upscale",
                    "source_type": "&IONS",
                    "relationship_defined_by": "upscale",
                    "source": "upscale",
                    "target": "conv_thr"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be bfgs",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: relax, md, vc-",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "calculation"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_1",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_1",
                    "source": "w_1",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "w_2",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_2",
                    "source": "w_2",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_2",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_2",
                    "source": "w_2",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "reads default value from",
                    "source_node": "fcp_tolp",
                    "source_type": "&FCP",
                    "relationship_defined_by": "fcp_tolp",
                    "source": "fcp_tolp",
                    "target": "tolp"
                }
            ]
        },
        "trimmed_documentation": [
            {
                "Parameter_Name": "calculation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "scf"
                },
                "Description": "calculation\nA string describing the task to be performed",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'",
                    "calculation = 'bands'",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Fixed cell calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "scf": "standard calculation",
                    "nscf": null,
                    "bands": null,
                    "relax": "only the atomic positions are allowed to vary",
                    "md": "ab-initio molecular dynamics (MD) simulations",
                    "vc-relax": "allows to vary both the atomic positions and lattice constants",
                    "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tprnfor",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": null
                },
                "Description": "tprnfor\ncalculate forces",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-md'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when calculation = 'relax','md','vc-md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "parameter is automatically set to .TRUE. when calculation is 'relax','md','vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "lorbm",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "lorbm\nIf .TRUE. perform orbital magnetization calculation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'nscf'",
                    "norm-conserving pseudopotentials",
                    "Uniform k-point grid",
                    "Kubo terms"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.",
                "Parameter_Value_Conditions": {
                    "TRUE": "Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed."
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lelfield": "If lelfield=.true., only Kubo terms are computed"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "twochem",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when performing two chemical potential calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "must be set to smearing",
                    "nelec_cond": "related parameter",
                    "nbnd_cond": "related parameter",
                    "degauss_cond": "related parameter"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "celldm",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.",
                "Possible_Usage_Conditions": [
                    "ibrav-defined crystal structure"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified",
                "Parameter_Value_Conditions": {
                    "celldm(1)": "is the lattice parameter \"a\" (in BOHR)",
                    "celldm(1) when ibrav=0": "only celldm(1) is used if present"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ibrav": "depends on ibrav value",
                    "CELL_PARAMETERS": "cell vectors are read from card CELL_PARAMETERS when ibrav=0",
                    "A, B, C, cosAB, cosAC, cosBC": "mutually exclusive with celldm"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "ntyp",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "ntyp\nnumber of types of atoms in the unit cell",
                "Possible_Usage_Conditions": [],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym_evc",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                "Possible_Usage_Conditions": [
                    "Monkhorst-Pack grid",
                    "custom k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "when noinv=.true., time reversal symmetry is not assumed"
                },
                "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "occupations",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null
                },
                "Description": "occupations\nControls how electronic occupations are determined",
                "Possible_Usage_Conditions": [
                    "DOS calculations",
                    "stress calculations",
                    "Relaxation calculations",
                    "Dynamics calculations",
                    "Metallic systems",
                    "Insulating systems",
                    "Uniform k-point grid",
                    "Single k-point",
                    "occupations = 'smearing'",
                    "Tetrahedron method (Bloechl's version)",
                    "Linear tetrahedron method",
                    "Optimized tetrahedron method",
                    "Fixed occupations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": null,
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "smearing": "for metals, requires parameters smearing and degauss",
                    "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                    "tetrahedra_lin": "original linear tetrahedron method, reference only",
                    "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                    "fixed": "for insulators with a gap",
                    "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "smearing": "requires smearing and degauss parameters",
                    "K_POINTS": "tetrahedra method requires uniform grid of k-points",
                    "OCCUPATIONS": "from_input option requires occupations to be read from OCCUPATIONS card",
                    "nbnd": "from_input option requires nbnd parameter to be set",
                    "tot_charge": "from_input occupations should be consistent with tot_charge"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "one_atom_occupations",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.",
                "Possible_Usage_Conditions": [
                    "single atom/isolated systems",
                    "UPF pseudopotentials",
                    "Non-collinear magnetic calculations",
                    "Spin-orbit coupling",
                    "starting_magnetization=0.0",
                    "Isolated (non-periodic) systems",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only for isolated atoms (nat=1) and when occupations='from_input'",
                "Parameter_Value_Conditions": {
                    "TRUE": "When ordering of wavefunctions as atomic starting wavefunctions is needed"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "Must be set to 'from_input'",
                    "nat": "Must be 1",
                    "starting_magnetization": "Equal to 0.0 for spin-orbit with time-reversal case",
                    "starting_spin_angle": "Can be set to TRUE in magnetic case with spin-orbit"
                },
                "Final_comments": "The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss_cond",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0 Ry"
                },
                "Description": "degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)",
                "Possible_Usage_Conditions": [
                    "Two-chemical-potential calculations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in two-chemical potential calculations when twochem = .True.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "twochem": "Parameter is used when twochem = .True."
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                "Possible_Usage_Conditions": [
                    "calculation = 'bands'",
                    "Metallic systems",
                    "partial occupations",
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "smearing",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "gaussian"
                },
                "Description": "smearing\nControls the type of smearing method to be used",
                "Possible_Usage_Conditions": [
                    "Metallic systems",
                    "Semiconductor systems",
                    "partial occupations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "gaussian/gauss": "ordinary Gaussian spreading",
                    "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                    "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                    "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "gaussian smearing for metals occupations='smearing'",
                    "degauss": "used in Gaussian smearing",
                    "nspin": "for spin-polarized calculations",
                    "constrained_magnetization": "for magnetic calculations"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "rhombohedral",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": true
                },
                "Description": "rhombohedral\nControls whether the coordinates of inequivalent atoms are given with respect to rhombohedral axes (TRUE) or hexagonal axes (FALSE). When FALSE, coordinates are internally converted to rhombohedral axes.",
                "Possible_Usage_Conditions": [
                    "rhombohedral space group",
                    "ibrav = 5"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only for rhombohedral space groups",
                "Parameter_Value_Conditions": {
                    "TRUE": "coordinates given with respect to rhombohedral axes",
                    "FALSE": "coordinates given with respect to hexagonal axes"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ibrav": "ibrav = 5 is used in both cases"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "relaxz",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "relaxz\nAllows the relaxation of the system towards the charged plate.",
                "Possible_Usage_Conditions": [
                    "Relaxation calculations",
                    "gate = .TRUE.",
                    "dipfield = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "used only if (gate = .TRUE.)",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "block": "Use with block=.TRUE. to create potential barrier to avoid atoms moving to plate position",
                    "dipfield": "Use with dipfield=.TRUE. to avoid atoms moving to dipole correction position"
                },
                "Final_comments": "Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "scf_must_converge",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": ".TRUE."
                },
                "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "electron_maxstep": "referenced when scf_must_converge is .false."
                },
                "Final_comments": "Use with care.",
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-6"
                },
                "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "diago_thr_init": "In nscf calculations, conv_thr is used to set the default value of the threshold (ethr) for iterative diagonalization"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_mode",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "plain"
                },
                "Description": "mixing_mode\nControls the type of charge density mixing method",
                "Possible_Usage_Conditions": [
                    "homogeneous systems",
                    "inhomogeneous systems",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "plain": "charge density Broyden mixing",
                    "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                    "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "Used in SCF calculations",
                    "mixing_beta": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_beta",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.7D0"
                },
                "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                "Possible_Usage_Conditions": [
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "mixing_mode": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "ion_positions",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "default"
                },
                "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "",
                "Parameter_Value_Conditions": {
                    "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                    "from_input": "read atomic positions from standard input, even if restarting"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation=relax": "bfgs",
                    "calculation=md": "verlet",
                    "calculation=vc-relax": "bfgs",
                    "calculation=vc-md": "beeman"
                },
                "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                    "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                    "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                    "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                    "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                    "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                    "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "CONSTRAINTS": "can be used with 'damp' and 'fire' for constrained optimization, and with 'verlet' for constrained dynamics",
                    "cell_dynamics": "for vc-relax with 'bfgs', requires cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "pot_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "atomic"
                },
                "Description": "pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "atomic": "extrapolate the potential as if it was a sum of atomic-like orbitals",
                    "first_order": "extrapolate the potential with first-order formula",
                    "second_order": "extrapolate the potential with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "wfc_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "first_order": "extrapolate the wave-functions with first-order formula",
                    "second_order": "extrapolate the wave-functions with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "ion_temperature\nControls the ionic temperature using different methods",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                    "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                    "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                    "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                    "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                    "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                    "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                    "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                    "not_controlled": "(default) ionic temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tempw": "used with most temperature control methods",
                    "nraise": "used with most temperature control methods",
                    "tolp": "used with rescaling method",
                    "delta_t": "used with rescale-T and reduce-T methods"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "tempw",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "300.D0"
                },
                "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "tolp",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                    "1/nraise": "when ion_temperature = 'andersen'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_temperature": {
                        "reduce-T": "temperature reduction by delta_t",
                        "rescale-v": "average temperature rescaling to tempw",
                        "rescaling": "instantaneous temperature rescaling to tempw (with vc-md)",
                        "berendsen": "rise time parameter calculation",
                        "andersen": "collision frequency parameter calculation",
                        "svr": "characteristic time setting"
                    },
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "refold_pos",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                "Possible_Usage_Conditions": [
                    "calculation = 'md'",
                    "calculation = 'relax'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'damp'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be 'md' or ion_dynamics must be 'damp'",
                    "ion_dynamics": "can be 'damp'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "upscale",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "conv_thr": "'conv_thr' is automatically reduced when the relaxation approaches convergence so that forces are still accurate, but 'conv_thr' will not be reduced to less that conv_thr / upscale"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "bfgs_ndim",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "1": "standard quasi-Newton BFGS method is used"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_max",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.8D0"
                },
                "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_min",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-3"
                },
                "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "trust_radius < trust_radius_min": "BFGS is reset"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be bfgs",
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_ini",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_1",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.01D0"
                },
                "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_2",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_alpha_init",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.2D0"
                },
                "Description": "fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": {
                    "0.1-0.3": "recommended values"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_falpha",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.99D0"
                },
                "Description": "fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_nmin",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 5
                },
                "Description": "fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_inc",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.1D0"
                },
                "Description": "fire_f_inc\nFactor for increasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_dec",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "fire_f_dec\nFactor for decreasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_dtmax",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "10.D0"
                },
                "Description": "fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "dt": "dtmax = fire_dtmax*dt"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fcp_mu",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "constant chemical potential conditions"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if lfcp = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation = relax": "bfgs",
                    "calculation = md": "velocity-verlet"
                },
                "Description": "fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "calculation = 'relax'",
                    "newton": "calculation = 'relax'",
                    "damp": "calculation = 'relax'",
                    "lm": "calculation = 'relax'",
                    "velocity-verlet": "calculation = 'md'",
                    "verlet": "calculation = 'md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": {
                        "bfgs": "must be bfgs",
                        "newton": "must be damp",
                        "damp": "must be damp",
                        "lm": "must be damp",
                        "velocity-verlet": "must be verlet",
                        "verlet": "must be verlet"
                    }
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-2"
                },
                "Description": "fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_ndiis",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 4
                },
                "Description": "fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'",
                    "fcp_dynamics": "only used if equal to 'newton'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_mass",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null,
                    "ESM": "5.D+6 / (xy area)",
                    "ESM-RISM": "5.D+4 / (xy area)"
                },
                "Description": "fcp_mass\nMass of the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_velocity",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "determined by fcp_temperature"
                },
                "Description": "fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'",
                    "fcp_temperature": "determines default value"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'",
                    "rescale-v": "control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "rescale-T": "control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'",
                    "reduce-T": "reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'",
                    "berendsen": "control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "andersen": "control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "initial": "initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on",
                    "not_controlled": "(default) FCP's temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_tempw": [
                        "rescaling",
                        "rescale-v",
                        "berendsen",
                        "andersen",
                        "initial"
                    ],
                    "fcp_tolp": [
                        "rescaling"
                    ],
                    "fcp_nraise": [
                        "rescale-v",
                        "reduce-T",
                        "berendsen",
                        "andersen"
                    ],
                    "fcp_delta_t": [
                        "rescale-T",
                        "reduce-T"
                    ]
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_tempw",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from tempw"
                },
                "Description": "fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be relax or md"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_tolp",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from tolp"
                },
                "Description": "fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tolp": "reads default value from"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_delta_t",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from &IONS -> delta_t"
                },
                "Description": "fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_delta_t < 0": "For cooling/heating rate calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "&IONS": "reads default value from delta_t",
                    "fcp_nraise": "Used in reduce-T mode for step counting",
                    "fcp_temperature": "Determines mode of operation"
                },
                "Final_comments": "The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.",
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": "reads from nraise"
                },
                "Description": "fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_temperature = reduce-T": "every fcp_nraise steps temperature reduced by -fcp_delta_t",
                    "fcp_temperature = rescale-v": "every fcp_nraise steps average temperature rescaled to fcp_tempw",
                    "fcp_temperature = berendsen": "tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise",
                    "fcp_temperature = andersen": "nu*dt = 1/fcp_nraise"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_temperature": "determines how fcp_nraise is used",
                    "fcp_delta_t": "used when fcp_temperature = reduce-T",
                    "fcp_tempw": "used when fcp_temperature = rescale-v"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "nsolv",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nsolv\nThe number of solvents (i.e. molecular species) in the unit cell",
                "Possible_Usage_Conditions": [
                    "RISM calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if trism = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Parameter_Name": "laue_starting_left",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.0
                },
                "Description": "laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.",
                "Possible_Usage_Conditions": [
                    "RISM calculations",
                    "Periodic systems",
                    "Laue boundary conditions",
                    "Systems with solvent-solute interactions"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if trism = .TRUE. and for Laue-RISM",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE.",
                    "laue_expand_left": "used in solvent region definition"
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            }
        ],
        "trimmed_documentation_string": [
            "Parameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_ndiis\"\nDefault_Values:\n{\n  default:\n4\n}\nDescription:\n\"fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"lorbm\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lorbm\nIf .TRUE. perform orbital magnetization calculation.\"\nPossible_Usage_Conditions: [\n  calculation = 'nscf',\n  norm-conserving pseudopotentials,\n  Uniform k-point grid,\n  Kubo terms,\n]\nUsage_Conditions:\n\"Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed.\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"fire_dtmax\"\nDefault_Values:\n{\n  default:\n\"10.D0\"\n}\nDescription:\n\"fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"fcp_mass\"\nDefault_Values:\n{\n  default: None\n  ESM:\n\"5.D+6 / (xy area)\"\n  ESM-RISM:\n\"5.D+4 / (xy area)\"\n}\nDescription:\n\"fcp_mass\nMass of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"celldm\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.\"\nPossible_Usage_Conditions: [\n  ibrav-defined crystal structure,\n]\nUsage_Conditions:\n\"Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified\"\nParameter_Value_Conditions:\n{\n  celldm(1):\n\"is the lattice parameter \"a\" (in BOHR)\"\n  celldm(1) when ibrav=0:\n\"only celldm(1) is used if present\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-2\"\n}\nDescription:\n\"fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"tempw\"\nDefault_Values:\n{\n  default:\n\"300.D0\"\n}\nDescription:\n\"tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"rhombohedral\"\nDefault_Values:\n{\n  default:\nTrue\n}\nDescription:\n\"rhombohedral\nControls whether the coordinates of inequivalent atoms are given with respect to rhombohedral axes (TRUE) or hexagonal axes (FALSE). When FALSE, coordinates are internally converted to rhombohedral axes.\"\nPossible_Usage_Conditions: [\n  rhombohedral space group,\n  ibrav = 5,\n]\nUsage_Conditions:\n\"Used only for rhombohedral space groups\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"coordinates given with respect to rhombohedral axes\"\n  FALSE:\n\"coordinates given with respect to hexagonal axes\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nraise\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  nraise*dt:\n\"when ion_temperature = 'berendsen' or 'svr'\"\n  1/nraise:\n\"when ion_temperature = 'andersen'\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"fcp_tempw\"\nDefault_Values:\n{\n  default:\n\"reads from tempw\"\n}\nDescription:\n\"fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"pot_extrapolation\"\nDefault_Values:\n{\n  default:\n\"atomic\"\n}\nDescription:\n\"pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  atomic:\n\"extrapolate the potential as if it was a sum of atomic-like orbitals\"\n  first_order:\n\"extrapolate the potential with first-order formula\"\n  second_order:\n\"extrapolate the potential with second order formula\"\n}\nFinal_comments:\n\"'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"tolp\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_tolp\"\nDefault_Values:\n{\n  default:\n\"reads from tolp\"\n}\nDescription:\n\"fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"relaxz\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"relaxz\nAllows the relaxation of the system towards the charged plate.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n  gate = .TRUE.,\n  dipfield = .TRUE.,\n]\nUsage_Conditions:\n\"used only if (gate = .TRUE.)\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_velocity\"\nDefault_Values:\n{\n  default:\n\"determined by fcp_temperature\"\n}\nDescription:\n\"fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\""
        ],
        "qe_generation_template": "&CONTROL calculation, value: relax, value_type: character\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&SYSTEM ntyp, value: 1, value_type: integer\n&SYSTEM occupations, value: smearing, value_type: character\n&SYSTEM degauss, value: 0.01, value_type: real\n&SYSTEM smearing, value: marzari-vanderbilt, value_type: character\n&ELECTRONS scf_must_converge, value: .TRUE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-8, value_type: real\n&ELECTRONS mixing_mode, value: local-TF, value_type: character\n&ELECTRONS mixing_beta, value: 0.7D0, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS pot_extrapolation, value: atomic, value_type: character\n&IONS wfc_extrapolation, value: first_order, value_type: character\n&IONS ion_temperature, value: not_controlled, value_type: character\n&IONS tempw, value: 300.D0, value_type: real\n&IONS refold_pos, value: True, value_type: logical\n&IONS upscale, value: 100.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 1.0D0, value_type: real\n&IONS trust_radius_min, value: 1.D-3, value_type: real\n&IONS trust_radius_ini, value: 0.53D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS w_2, value: 0.3D0, value_type: real\n&FCP fcp_tolp, value: reads from tolp, value_type: real\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n",
        "qe_initialization": "&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n",
        "generated_input": "qe_input=QeMatch(qe_input_gen=\"&CONTROL\\n    title = 'test'\\n    calculation = 'relax'\\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\\n/\\n\\n&SYSTEM\\n    ibrav = 0\\n    nat = 2\\n    ntyp = 1\\n    ecutwfc = 30.0\\n    ecutrho = 120.0\\n    occupations = 'smearing'\\n    degauss = 0.01\\n    smearing = 'marzari-vanderbilt'\\n/\\n\\n&ELECTRONS\\n    scf_must_converge = .TRUE.\\n    conv_thr = 1.D-8\\n    mixing_mode = 'local-TF'\\n    mixing_beta = 0.7D0\\n/\\n\\n&IONS\\n    ion_positions = 'from_input'\\n    ion_dynamics = 'bfgs'\\n    pot_extrapolation = 'atomic'\\n    wfc_extrapolation = 'first_order'\\n    ion_temperature = 'not_controlled'\\n    tempw = 300.D0\\n    refold_pos = .TRUE.\\n    upscale = 100.D0\\n    bfgs_ndim = 1\\n    trust_radius_max = 1.0D0\\n    trust_radius_min = 1.D-3\\n    trust_radius_ini = 0.53D0\\n    w_1 = 0.01D0\\n    w_2 = 0.3D0\\n/\\n\\n&FCP\\n    fcp_tolp = reads from tolp\\n/\\n\\nATOMIC_SPECIES\\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\\n\\nATOMIC_POSITIONS angstrom\\nTc          -0.0000000000       1.5853209715       1.0985924291\\nTc           1.3729282345       0.7926604858       3.2957772874\\n\\nK_POINTS automatic\\n18 18 10 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n      2.7458564690       0.0000000000       0.0000000000\\n     -1.3729282345       2.3779814573       0.0000000000\\n      0.0000000000       0.0000000000       4.3943697166\\n\")",
        "error_msg": [],
        "log_qe_gen_prompt": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nCreate a Quantum Espresso input file for 'calculation = 'relax'\nGround state calculations\nRelaxation calculations\nStress calculations\nTotal energy calculations' calculation of 'Tc2' compound, based on the given CONTEXT and DETAILS.\n\n<CONTEXT>\n&CONTROL title = 'test'\n\n&CONTROL calculation, value: relax, value_type: character\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&SYSTEM ntyp, value: 1, value_type: integer\n&SYSTEM occupations, value: smearing, value_type: character\n&SYSTEM degauss, value: 0.01, value_type: real\n&SYSTEM smearing, value: marzari-vanderbilt, value_type: character\n&ELECTRONS scf_must_converge, value: .TRUE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-8, value_type: real\n&ELECTRONS mixing_mode, value: local-TF, value_type: character\n&ELECTRONS mixing_beta, value: 0.7D0, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS pot_extrapolation, value: atomic, value_type: character\n&IONS wfc_extrapolation, value: first_order, value_type: character\n&IONS ion_temperature, value: not_controlled, value_type: character\n&IONS tempw, value: 300.D0, value_type: real\n&IONS refold_pos, value: True, value_type: logical\n&IONS upscale, value: 100.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 1.0D0, value_type: real\n&IONS trust_radius_min, value: 1.D-3, value_type: real\n&IONS trust_radius_ini, value: 0.53D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS w_2, value: 0.3D0, value_type: real\n&FCP fcp_tolp, value: reads from tolp, value_type: real\n&SYSTEM ecutwfc = 30.0\n&SYSTEM ecutrho = 120.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 2\n----------\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291 \nTc           1.3729282345       0.7926604858       3.2957772874 \n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n\n\n</CONTEXT>\n\n<DETAILS>\nCalculate relaxation of the structure based on relax calculation for two technetium atoms in a hexagonal close-packed (HCP) lattice, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</DETAILS>\n\n<RULES>\n- Write the input file for the given calculation type\n- Set the value of the variables based on the CONTEXT and the DETAILS\n- Use only relevant parameters based on the CONTEXT, DETAILS\n- Each parameter should be under correct namelist\n- Each parameter should have a correct value type such as integer, real, character, or logical\n- The namelists &CONTROL, &SYSTEM, &ELECTRONS, must be in this order exactly\n- The cards ATOMIC_SPECIES, ATOMIC_POSITIONS, K_POINTS, and CELL_PARAMETERS must be present and based on CONTEXT and DETAILS\n- In &CONTROL should have 'pseudo_dir': /home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp and 'outdir':'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir' defined, according to the given CONTEXT\n</RULES>\n\n<OUTPUT>\n- Write the input file\n- Put the code blocks in ```fortran and ```.\n- Review the code to see how the generated code followed the RULES, CONTEXT, and DETAILS, then give some explanation.\n</OUTPUT>\n"
        ],
        "log_qe_input": [
            "&CONTROL\n    title = 'test'\n    calculation = 'relax'\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n/\n\n&SYSTEM\n    ibrav = 0\n    nat = 2\n    ntyp = 1\n    ecutwfc = 30.0\n    ecutrho = 120.0\n    occupations = 'smearing'\n    degauss = 0.01\n    smearing = 'marzari-vanderbilt'\n/\n\n&ELECTRONS\n    scf_must_converge = .TRUE.\n    conv_thr = 1.D-8\n    mixing_mode = 'local-TF'\n    mixing_beta = 0.7D0\n/\n\n&IONS\n    ion_positions = 'from_input'\n    ion_dynamics = 'bfgs'\n    pot_extrapolation = 'atomic'\n    wfc_extrapolation = 'first_order'\n    ion_temperature = 'not_controlled'\n    tempw = 300.D0\n    refold_pos = .TRUE.\n    upscale = 100.D0\n    bfgs_ndim = 1\n    trust_radius_max = 1.0D0\n    trust_radius_min = 1.D-3\n    trust_radius_ini = 0.53D0\n    w_1 = 0.01D0\n    w_2 = 0.3D0\n/\n\n&FCP\n    fcp_tolp = reads from tolp\n/\n\nATOMIC_SPECIES\nTc     98.0 Tc_ONCV_PBE-1.0.oncvpsp.upf\n\nATOMIC_POSITIONS angstrom\nTc          -0.0000000000       1.5853209715       1.0985924291\nTc           1.3729282345       0.7926604858       3.2957772874\n\nK_POINTS automatic\n18 18 10 0 0 0\n\nCELL_PARAMETERS angstrom\n      2.7458564690       0.0000000000       0.0000000000\n     -1.3729282345       2.3779814573       0.0000000000\n      0.0000000000       0.0000000000       4.3943697166\n"
        ],
        "log_qe_solution": [],
        "rest_formula_data": {
            "formula": "Tc2",
            "k_points_2d": "None",
            "uuid": "1b4890a6-25c1-420a-8253-6402ac96ec21",
            "ase_atom_object": "Atoms(symbols='Tc2', pbc=True, cell=[[2.745856469, 0.0, 0.0], [-1.3729282345, 2.3779814573, 0.0], [0.0, 0.0, 4.3943697166]])",
            "indx": "None"
        },
        "workflow_log": [
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Interface agent",
                    "start_time": "2025-02-07 14:48:12"
                },
                "timestamp": "2025-02-07 14:48:12.081400",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:48:12",
                    "end_time": "2025-02-07 14:48:17",
                    "message": "Interface agent"
                },
                "timestamp": "2025-02-07 14:48:17.401147",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "3D structure generation",
                    "start_time": "2025-02-07 14:48:17"
                },
                "timestamp": "2025-02-07 14:48:17.401217",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:48:17",
                    "end_time": "2025-02-07 14:48:18",
                    "message": "3D structure generation"
                },
                "timestamp": "2025-02-07 14:48:18.816138",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Starting Quantum Espresso documentation collection",
                    "start_time": "2025-02-07 14:48:18"
                },
                "timestamp": "2025-02-07 14:48:18.816234",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:48:18",
                    "end_time": "2025-02-07 14:48:21",
                    "message": "Quantum Espresso documentation collection"
                },
                "timestamp": "2025-02-07 14:48:21.666100",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso condition extraction",
                    "start_time": "2025-02-07 14:48:21"
                },
                "timestamp": "2025-02-07 14:48:21.666171",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:48:21",
                    "end_time": "2025-02-07 14:49:07",
                    "message": "Quantum Espresso condition extraction"
                },
                "timestamp": "2025-02-07 14:49:07.018482",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Parameter graph generation",
                    "start_time": "2025-02-07 14:49:07"
                },
                "timestamp": "2025-02-07 14:49:07.018591",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:49:07",
                    "end_time": "2025-02-07 14:49:07",
                    "message": "Parameter graph generation"
                },
                "timestamp": "2025-02-07 14:49:07.022833",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Documentation collection for trimmed parameters",
                    "start_time": "2025-02-07 14:49:07"
                },
                "timestamp": "2025-02-07 14:49:07.022896",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:49:07",
                    "end_time": "2025-02-07 14:49:07",
                    "message": "Documentation collection for trimmed parameters"
                },
                "timestamp": "2025-02-07 14:49:07.024222",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input parameter evaluation",
                    "start_time": "2025-02-07 14:49:07"
                },
                "timestamp": "2025-02-07 14:49:07.024278",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:49:07",
                    "end_time": "2025-02-07 14:51:16",
                    "message": "Quantum Espresso input parameter evaluation"
                },
                "timestamp": "2025-02-07 14:51:16.118808",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation template",
                    "start_time": "2025-02-07 14:51:16"
                },
                "timestamp": "2025-02-07 14:51:16.119101",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:51:16",
                    "end_time": "2025-02-07 14:51:16",
                    "message": "Quantum Espresso input generation template"
                },
                "timestamp": "2025-02-07 14:51:16.125574",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation",
                    "start_time": "2025-02-07 14:51:16"
                },
                "timestamp": "2025-02-07 14:51:16.125639",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:51:16",
                    "end_time": "2025-02-07 14:51:26",
                    "message": "Quantum Espresso input generation"
                },
                "timestamp": "2025-02-07 14:51:26.487340",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso is initializing",
                    "start_time": "2025-02-07 14:51:26"
                },
                "timestamp": "2025-02-07 14:51:26.487466",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 14:51:26",
                    "end_time": "2025-02-07 14:52:26",
                    "message": "Quantum Espresso calculation completed successfully"
                },
                "timestamp": "2025-02-07 14:52:26.755059",
                "level": "INFO"
            }
        ],
        "workflow_state": "FINISHED"
    }
]
[
    {
        "project_signature": "test",
        "calculation_description": "Calculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.",
        "analysis_dict": {
            "description": "Calculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.",
            "formula": "ZnS",
            "database": "mc3d"
        },
        "get_conditions_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCalculation_types\n- Berry phase calculations\n- Constant bias potential calculations\n- DOS calculations\n- Dynamical Mean Field Theory\n- Dynamics calculations\n- ESM calculations\n- FCP calculations\n- GC-SCF calculations\n- Ground state calculations\n- HP code calculations\n- LDA+U calculations\n- Linear-response calculations\n- Relaxation calculations\n- Two-chemical-potential calculations\n- calculation = 'bands'\n- calculation = 'md'\n- calculation = 'nscf'\n- calculation = 'relax'\n- calculation = 'scf'\n- calculation = 'vc-md'\n- calculation = 'vc-relax'\n- charge density calculations\n- dispersion correction calculations\n- stress calculations\n- total energy calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nFunctional_and_method_types\n- BEEF-type functionals\n- Conjugate gradient diagonalization\n- Davidson diagonalization\n- PPCG diagonalization\n- Paro diagonalization\n- RMM-DIIS diagonalization\n- DFT-D calculations\n- DFT-D2 calculations\n- DFT-D3 calculations\n- Exact exchange calculations\n- Exchange-correlation functional\n- Exchange-hole dipole-moment model\n- Gradient-corrected functionals\n- Hybrid functional calculations\n- Hybrid functionals with exact exchange\n- Many-body dispersion (MBD) corrections\n- Parrinello-Rahman MD\n- Scissor operator corrections\n- Tkatchenko-Scheffler dispersion corrections\n- Wentzcovitch MD\n- functional is NOT one of: B86bPBE, PW86PBE, PBE, BLYP\n- gammaDFT calculations\n- input_dft='PBE0', 'B3LYP'\n- ion_dynamics = 'bfgs'\n- ion_dynamics = 'fire'\n- ion_dynamics = 'verlet'\n- ion_dynamics = 'damp'\n- long-range interactions\n- Non-collinear calculations\n- spin-orbit calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCell_and_material_properties\n- 2D periodic systems in x-y plane\n- Anisotropic supercells\n- Bravais lattice structure (values 0 to 14)\n- Correlated orbitals\n- Cubic supercells\n- DOS of materials\n- Fixed cell calculations\n- Framework/porous systems\n- Hard FFT grid\n- High symmetry systems\n- Insulating systems\n- Low-symmetry large cells\n- Materials like graphite\n- Materials with long-range interaction\n- Metallic systems\n- Monoclinic systems\n- Non-periodic systems\n- Periodic systems\n- Quasi-cubic supercells\n- Rare Earth Elements\n- Semiconductor systems\n- Slab systems\n- Smooth FFT grid\n- Strongly correlated electrons\n- Transition Metals\n- Variable cell calculations\n- charged cells\n- homogeneous systems\n- ibrav = -12\n- ibrav = -13\n- ibrav-defined crystal structure\n- ibrav = 5\n- ibrav = 0\n- inhomogeneous systems\n- non-symmorphic symmetry operations\n- periodic cell with defined z-direction\n- rhombohedral space group\n- single atom/isolated systems\n- symmetry-defined crystal structure\n- variable cell calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nPseudopotential_types\n- PAW sets\n- Pseudopotentials with Hubbard occupation\n- Relativistic pseudopotentials\n- UPF pseudopotentials\n- Ultrasoft pseudopotentials\n- nonlocal pseudopotentials\n- norm-conserving pseudopotentials\n- pseudopotential tables\n- pseudopotentials with spin-orbit coupling\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nMagnetism_and_Spin_conditions\n- Collinear magnetic calculations (LSDA)\n- Collinear spin\n- Constrained magnetization\n- Initial magnetization\n- Magnetic systems\n- Non-collinear magnetic calculations\n- Spin-orbit coupling\n- Spin-polarized calculations\n- lspinorb = .True.\n- nspin = 1\n- nspin = 2\n- starting_magnetization=0.0\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nIsolated_systems_and_boundary_conditions\n- Dielectric environment\n- Isolated (non-periodic) systems\n- Laue boundary conditions\n- Laue-RISM calculations\n- Systems using Reference Interaction Site Model (RISM)\n- Systems with solvent regions\n- Systems with solvent-solute interactions\n- assume_isolated must be set to 'esm'\n- charged slabs\n- constant chemical potential conditions\n- electrode boundaries\n- laue_wall != 'none'\n- vacuum boundaries\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nk_point_settings\n- Automatic k-points\n- Monkhorst-Pack grid\n- Non-automatic k-points\n- Single k-point\n- Uniform k-point grid\n- custom k-points\n- full BZ coverage\n- nosym k-points\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nElectric_field_conditions\n- 0 < emaxpos < 1\n- Kubo terms\n- System with electric field\n- block = .TRUE.\n- dielectrically consistent RISM (DRISM)\n- dipfield = .TRUE.\n- gate = .TRUE.\n- lelfield = .TRUE.\n- lfcp = .TRUE.\n- optional electric field\n- tefield = .TRUE.\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nOccupation_types\n- Fixed occupations\n- Smearing method\n- Grand canonical ensemble\n- Linear tetrahedron method\n- Optimized tetrahedron method\n- DFT+U Hubbard correction\n- DFT+U+V Hubbard correction\n- DFT+U+J Hubbard correction\n- Systems with empty states\n- Tetrahedron method (Bloechl's version)\n- occupations = 'from_input'\n- occupations = 'smearing'\n- partial occupations\n- valence and conduction manifolds\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "condition_tables": "                                       Item  ...                                     Final_comments\n0                         Calculation_types  ...  The calculation is a geometry relaxation of Zn...\n1               Functional_and_method_types  ...  The calculation description does not specify t...\n2              Cell_and_material_properties  ...  The calculation description specifies a geomet...\n3                     Pseudopotential_types  ...  The calculation description specifies the use ...\n4             Magnetism_and_Spin_conditions  ...  The calculation description does not mention a...\n5  Isolated_systems_and_boundary_conditions  ...  The calculation description specifies a geomet...\n6                          k_point_settings  ...  The calculation description specifies a geomet...\n7                 Electric_field_conditions  ...  The calculation description does not mention a...\n8                          Occupation_types  ...  The calculation description does not specify t...\n\n[9 rows x 4 columns]",
        "relevant_conditions": [
            "Automatic k-points",
            "ibrav = 5",
            "total energy calculations",
            "norm-conserving pseudopotentials",
            "calculation = 'relax'",
            "nonlocal pseudopotentials",
            "Relaxation calculations",
            "ibrav",
            "valence and conduction manifolds",
            "cutoff",
            "k-mesh",
            "occupations = 'from_input'",
            "Isolated_systems_and_boundary_conditions",
            "ion_dynamics = 'bfgs'",
            "Periodic systems",
            "Variable cell calculations",
            "PAW sets",
            "ibrav-defined crystal structure",
            "PAW pseudopotential",
            "nspin = 2",
            "TS",
            "Uniform k-point grid",
            "ion_dynamics = 'verlet'",
            "vacuum boundaries",
            "ion_dynamics = 'fire'",
            "partial occupations",
            "Exchange-correlation functional",
            "Semiconductor systems",
            "ion_dynamics = 'damp'",
            "Monkhorst-Pack grid",
            "cell_dofree",
            "occupations = 'smearing'"
        ],
        "parameter_evaluation_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"freeze_all_atoms\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"freeze_all_atoms\nIf .TRUE., freeze all atoms to perform relaxation or dynamics only with Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"cell_dynamics\"\nDefault_Values:\n{\n  default: None\n  vc-relax:\n\"bfgs\"\n}\nDescription:\n\"cell_dynamics\nSpecify the type of dynamics for the cell.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions:\n{\n  none:\n\"no dynamics (both vc-relax and vc-md)\"\n  damp-pr:\n\"damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)\"\n  damp-w:\n\"damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)\"\n  bfgs:\n\"BFGS quasi-newton algorithm (vc-relax)\"\n  pr:\n\"(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)\"\n  w:\n\"(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)\"\n}\nFinal_comments: None\nNamelist:\n\"&CELL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"celldm\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.\"\nPossible_Usage_Conditions: [\n  ibrav-defined crystal structure,\n]\nUsage_Conditions:\n\"Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified\"\nParameter_Value_Conditions:\n{\n  celldm(1):\n\"is the lattice parameter \"a\" (in BOHR)\"\n  celldm(1) when ibrav=0:\n\"only celldm(1) is used if present\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"remove_rigid_rot\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"delta_t\"\nDefault_Values:\n{\n  default:\n\"1.D0\"\n}\nDescription:\n\"delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  positive:\n\"when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling\"\n  negative:\n\"when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps\"\n}\nFinal_comments:\n\"For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"efield_cart\"\nDefault_Values:\n{\n  default:\n\"(0.D0, 0.D0, 0.D0)\"\n}\nDescription:\n\"efield_cart(i), i=1,3\nFinite electric field (in Ry a.u.=36.3609*10^10 V/m) in cartesian axis.\"\nPossible_Usage_Conditions: [\n  Automatic k-points,\n  lelfield = .TRUE.,\n]\nUsage_Conditions:\n\"Used only if lelfield = .TRUE. and if k-points (K_POINTS card) are automatic.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"forc_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.0D-3\"\n}\nDescription:\n\"forc_conv_thr\nConvergence threshold on forces (a.u) for ionic minimization: the convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"etot_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.0D-4\"\n}\nDescription:\n\"etot_conv_thr\nConvergence threshold on total energy (a.u) for ionic minimization: the convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps. Note that 'etot_conv_thr' is extensive, like the total energy.\"\nPossible_Usage_Conditions: [\n  total energy calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"relaxz\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"relaxz\nAllows the relaxation of the system towards the charged plate.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n  gate = .TRUE.,\n  dipfield = .TRUE.,\n]\nUsage_Conditions:\n\"used only if (gate = .TRUE.)\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ecfixed\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"ecfixed\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). ecfixed is the value (in Rydberg) of the constant-cutoff\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"cell_factor\"\nDefault_Values:\n{\n  default:\n\"2.0 for variable-cell calculations\"\n}\nDescription:\n\"cell_factor\nUsed in the construction of the pseudopotential tables. It should exceed the maximum linear contraction of the cell during a simulation.\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n  pseudopotential tables,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CELL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nelec_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"nelec_cond\nNumber of electrons placed in the conduction manifold in a two-chemical potential calculation (twochem = .True.). Of the total number of electrons nelec_cond will occupy the valence manifold and nelec_cond will be constrained in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  valence and conduction manifolds,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"press_conv_thr\"\nDefault_Values:\n{\n  default:\n\"0.5D0 Kbar\"\n}\nDescription:\n\"press_conv_thr\nConvergence threshold on the pressure for parameter cell relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"note that the other convergence thresholds for ionic relaxation apply as well\"\nNamelist:\n\"&CELL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"q2sigma\"\nDefault_Values:\n{\n  default:\n0.1\n}\nDescription:\n\"q2sigma\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). q2sigma is the width (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n]\nUsage_Conditions:\n\"Used in the kinetic energy calculation where G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"lfcp\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  ESM calculations,\n  Constant bias potential calculations,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"'calculation' must be 'relax' or 'md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))\"\n}\nFinal_comments:\n\"The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.\"\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"starting_ns_eigenvalue\"\nDefault_Values:\n{\n  default:\n\"-1.d0\"\n}\nDescription:\n\"starting_ns_eigenvalue(m,ispin,ityp)\nIn the first iteration of an DFT+U run it overwrites the m-th eigenvalue of the ns occupation matrix for the ispin component of atomic species ityp.\"\nPossible_Usage_Conditions: [\n  DFT+U Hubbard correction,\n  Collinear magnetic calculations (LSDA),\n  Non-collinear magnetic calculations,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used in first iteration of DFT+U calculations. For noncollinear case, ispin index runs up to npol=2. The value lmax is given by the maximum angular momentum number to which the Hubbard U is applied.\"\nParameter_Value_Conditions:\n{\n  -1.d0:\n\"parameter not set\"\n  other values:\n\"overwrites eigenvalue of ns occupation matrix\"\n}\nFinal_comments:\n\"Leave unchanged eigenvalues that are not set. This is useful to suggest the desired orbital occupations when the default choice takes another path.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nextffield\"\nDefault_Values:\n{\n  default:\n0\n}\nDescription:\n\"nextffield\nNumber of activated external ionic force fields.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n  calculation = 'md',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"qcutz\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"qcutz\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). qcutz is the height (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'. In the kinetic energy, G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n  variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</Project>\n\n<Conditions>\nAutomatic k-points\nibrav = 5\ntotal energy calculations\nnorm-conserving pseudopotentials\ncalculation = 'relax'\nnonlocal pseudopotentials\nRelaxation calculations\nibrav\nvalence and conduction manifolds\ncutoff\nk-mesh\noccupations = 'from_input'\nIsolated_systems_and_boundary_conditions\nion_dynamics = 'bfgs'\nPeriodic systems\nVariable cell calculations\nPAW sets\nibrav-defined crystal structure\nPAW pseudopotential\nnspin = 2\nTS\nUniform k-point grid\nion_dynamics = 'verlet'\nvacuum boundaries\nion_dynamics = 'fire'\npartial occupations\nExchange-correlation functional\nSemiconductor systems\nion_dynamics = 'damp'\nMonkhorst-Pack grid\ncell_dofree\noccupations = 'smearing'\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tefield\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.\"\nPossible_Usage_Conditions: [\n  Ground state calculations,\n  Relaxation calculations,\n  tefield = .TRUE.,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  True:\n\"A saw-like potential simulating an electric field is added to the bare ionic potential\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "parameters_collection": [
            {
                "calculation": "relax"
            },
            {
                "etot_conv_thr": "1.0D-4"
            },
            {
                "forc_conv_thr": "1.0D-3"
            },
            {
                "ntyp": "2"
            },
            {
                "nr1s, nr2s, nr3s": "default"
            },
            {
                "nosym_evc": "False"
            },
            {
                "occupations": "'from_input'"
            },
            {
                "smearing": "fermi-dirac"
            },
            {
                "relaxz": "False"
            },
            {
                "scf_must_converge": ".TRUE."
            },
            {
                "conv_thr": "1.D-6"
            },
            {
                "ion_positions": "from_input"
            },
            {
                "ion_dynamics": "bfgs"
            },
            {
                "ion_temperature": "not_controlled"
            },
            {
                "bfgs_ndim": "1"
            },
            {
                "cell_dynamics": "bfgs"
            },
            {
                "cell_factor": "2.0"
            }
        ],
        "evaluated_parameters": [
            "The parameter \"freeze_all_atoms\" is relevant to the project as the project involves a relaxation calculation, which is indicated by the \"calculation = 'relax'\" tag. The \"freeze_all_atoms\" parameter is used in relaxation calculations to freeze all atoms and perform relaxation or dynamics only with Fictitious Charge Particle (FCP). However, the project does not provide any information about the use of FCP, and the \"lfcp\" parameter is not mentioned in the project or the tags. Therefore, it is not possible to determine the appropriate value for the \"freeze_all_atoms\" parameter based on the provided information.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"freeze_all_atoms\": None}\n```\n\nThe value is set to None because the parameter is relevant to the project, but the appropriate value cannot be determined based on the provided information.",
            "The parameter \"ion_dynamics\" is relevant to the project as it is used to specify the type of ionic dynamics in Quantum ESPRESSO calculations. The project involves a relaxation calculation, as indicated by the \"calculation = 'relax'\" tag. The \"ion_dynamics\" parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'.\n\nIn this case, the project involves a relaxation calculation, so the appropriate value for the \"ion_dynamics\" parameter is \"bfgs\". This value corresponds to the BFGS quasi-newton algorithm based on trust radius procedure, which is used for calculation='relax' or 'vc-relax'.\n\nTherefore, the appropriate value for the \"ion_dynamics\" parameter in this project is \"bfgs\".\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"ion_dynamics\": \"bfgs\"}\n```",
            "The parameter \"cell_dynamics\" is relevant to the project as it is used to specify the type of dynamics for the cell during Variable Cell (VC) calculations. In the provided project, the calculation type is 'relax', which is a multistep calculation that involves geometry optimization. Since the project involves geometry optimization, it is safe to assume that it is a Variable Cell calculation. Therefore, the parameter \"cell_dynamics\" is relevant to the project.\n\nThe possible values for the parameter \"cell_dynamics\" are 'none', 'damp-pr', 'damp-w', 'bfgs', 'pr', and 'w'. However, since the project involves geometry optimization, the appropriate value for the parameter \"cell_dynamics\" is 'bfgs', which stands for the BFGS quasi-newton algorithm used for Variable Cell relaxation calculations.\n\nTherefore, the appropriate value for the parameter \"cell_dynamics\" is 'bfgs'.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"cell_dynamics\": \"bfgs\"}\n```",
            "Based on the provided project and conditions, the parameter \"calculation\" is relevant to the project. The project is a Quantum ESPRESSO input file for a system with 20 atoms (10 Zn and 10 S) in a non-conventional unit cell. The conditions indicate that the calculation is a relaxation calculation, which means that only the atomic positions are allowed to vary.\n\nThe parameter \"calculation\" is used to specify the type of calculation to be performed in Quantum ESPRESSO. The possible values for this parameter are 'scf', 'nscf', 'bands', 'relax', 'md', 'vc-relax', and 'vc-md'. The value 'relax' is used for geometry optimization calculations, where the atomic positions are allowed to vary.\n\nTherefore, the appropriate value for the parameter \"calculation\" in this project is 'relax'.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"calculation\": \"relax\"}\n```",
            "Based on the provided project and conditions, the parameter \"assume_isolated\" is not relevant to the project. The project is a periodic system with a 3D supercell, as indicated by the ibrav = 0 and the presence of CELL_PARAMETERS. The \"assume_isolated\" parameter is used for isolated (non-periodic) systems or 2D periodic systems in the x-y plane. Therefore, it is not applicable in this case.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"assume_isolated\": None}\n```",
            "The parameter \"nosym_evc\" is relevant to the project as it pertains to the symmetry of the k-points used in the calculation. The project uses an automatic k-point grid, which is a type of Monkhorst-Pack grid. The \"nosym_evc\" parameter determines whether the symmetry of the k-points is used or not.\n\nIn this case, the project does not specify whether symmetry should be used or not. However, the default value for \"nosym_evc\" is False, which means that symmetry is used. Given that the project does not specify otherwise, it is appropriate to use the default value.\n\nTherefore, the appropriate value for the \"nosym_evc\" parameter in this project is False.\n\nHere is the Python dictionary:\n\n```python\nparameter_value = {\"nosym_evc\": \"False\"}\n```",
            "Based on the provided project and conditions, the parameter \"celldm\" is relevant to the project. However, the project does not provide the value for \"celldm\" and it is not required for the given \"ibrav\" value.\n\nThe \"ibrav\" parameter in the project is set to 0, which means that the crystal structure is defined by the CELL_PARAMETERS card. In this case, the lattice parameters are explicitly defined in the CELL_PARAMETERS card, and the \"celldm\" parameter is not needed.\n\nTherefore, the appropriate value for the \"celldm\" parameter in this project is None.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"celldm\": None}\n```",
            "The parameter \"remove_rigid_rot\" is relevant to the project as it is used in relaxation calculations, which is the case here as indicated by the \"calculation = 'relax'\" tag. This parameter is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true, the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.\n\nHowever, since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However, the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also, the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.\n\nIn this project, the system is not isolated as it is a periodic system, as indicated by the \"Periodic systems\" tag. Therefore, the \"remove_rigid_rot\" parameter is not relevant to this project.\n\n```python\nparameter_value = {'remove_rigid_rot': None}\n```",
            "Based on the provided project and conditions, the parameter \"delta_t\" is not directly relevant to the project. The project is a Quantum ESPRESSO input file for a total energy calculation using norm-conserving pseudopotentials and an automatic k-point grid. The \"delta_t\" parameter is used in molecular dynamics simulations to control temperature modification, which is not the case in this project.\n\nHowever, if we were to consider a hypothetical scenario where this project is extended to include molecular dynamics simulations, the \"delta_t\" parameter would become relevant. In such a case, the appropriate value for \"delta_t\" would depend on the specific requirements of the simulation, such as the desired rate of temperature modification.\n\nGiven the conditions and the rules, the value for \"delta_t\" should be None for this project.\n\n```python\nparameter_value = {\"delta_t\": None}\n```",
            "Based on the provided project and conditions, the parameter \"efield_cart\" is not relevant to the project. The project does not include the \"lelfield\" tag, which is a requirement for the use of \"efield_cart\". Additionally, the project is a relaxation calculation, which does not require the application of an electric field. Therefore, the value of \"efield_cart\" should be set to None.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"efield_cart\": None}\n```",
            "The parameter \"forc_conv_thr\" is relevant to the project as it is used in relaxation calculations, which is the type of calculation specified in the project (calculation = 'relax'). This parameter sets the convergence threshold on forces (a.u) for ionic minimization. The convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.\n\nGiven the provided information, the appropriate value for \"forc_conv_thr\" is not explicitly stated. However, the default value is \"1.0D-3\". Therefore, without additional information, we can use the default value.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"forc_conv_thr\": \"1.0D-3\"}\n```",
            "Based on the provided project and conditions, the parameter \"twochem\" is not relevant to the project. The project is a relaxation calculation using norm-conserving pseudopotentials and an automatic k-point grid. The \"twochem\" parameter is used for two chemical potential calculations for the simulation of photoexcited systems, which is not the case in this project. Additionally, the usage condition for \"twochem\" is \"occupations = 'smearing'\", which is not specified in the project. Therefore, the value for the \"twochem\" parameter is None.\n\n```python\nparameter_value = {\"twochem\": None}\n```",
            "The parameter \"degauss\" is used to specify the value of the gaussian spreading for Brillouin-zone integration in metals. This parameter is relevant when performing calculations with partial occupations and smearing, such as in metallic systems or when calculating band structures.\n\nIn the provided project, the system being studied is a semiconductor system, as indicated by the use of the pseudopotentials for Sulfur (S) and Zinc (Zn). The calculation type is a relaxation calculation, as indicated by the \"calculation = 'relax'\" tag. The system is a periodic system, as indicated by the use of the \"ibrav = 0\" tag, which defines a crystal structure with a user-defined cell. The k-points are generated automatically using a uniform Monkhorst-Pack grid, as indicated by the \"K_POINTS automatic\" tag.\n\nBased on the information provided, the parameter \"degauss\" is not relevant to the project. The system being studied is a semiconductor system, and the calculation type is a relaxation calculation. Therefore, the parameter \"degauss\" is not needed for this calculation.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"degauss\": None}\n```",
            "The parameter \"smearing\" is relevant to the project as it controls the type of smearing method to be used in the calculation. Smearing is a technique used to improve the convergence of electronic structure calculations, especially in metallic systems and semiconductor systems. It is also used in cases of partial occupations.\n\nIn the provided project, the system is a semiconductor system as it involves Zn and S atoms, which are typically used in semiconductor materials. Therefore, the smearing parameter is relevant to this project.\n\nThe possible values for the smearing parameter are \"gaussian\", \"methfessel-paxton\", \"marzari-vanderbilt\", and \"fermi-dirac\". Each of these values corresponds to a different smearing method.\n\nGiven the conditions and the nature of the system, a suitable value for the smearing parameter would be \"fermi-dirac\". This is because the Fermi-Dirac smearing method is often used for semiconductor systems.\n\nTherefore, the python dictionary for the parameter value would be:\n\n```python\nparameter_value = {\"smearing\": \"fermi-dirac\"}\n```",
            "The parameter \"scf_must_converge\" is relevant to the project as it is related to the convergence of the self-consistent field (SCF) calculation in Quantum ESPRESSO. The project involves a relaxation calculation, which is a type of multistep calculation that requires the SCF calculation to converge at each step.\n\nThe parameter \"scf_must_converge\" determines whether the molecular dynamics or ionic relaxation should stop when the maximum number of SCF steps (\"electron_maxstep\") is reached. If \"scf_must_converge\" is set to \".TRUE.\", the calculation will stop if the SCF does not converge within the specified number of steps. If it is set to \".FALSE.\", the calculation will continue even if the SCF does not converge.\n\nGiven that the project involves a relaxation calculation, it is important to ensure that the SCF calculation converges at each step. Therefore, the appropriate value for the parameter \"scf_must_converge\" is \".TRUE.\".\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"scf_must_converge\": \".TRUE.\"}\n```",
            "The parameter \"etot_conv_thr\" is relevant to the project as it is used in relaxation calculations, which is the type of calculation specified in the project (calculation = 'relax'). This parameter sets the convergence threshold on total energy for ionic minimization. The convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps.\n\nGiven the project and the conditions, the appropriate value for \"etot_conv_thr\" is the default value of \"1.0D-4\". This value is commonly used in Quantum ESPRESSO calculations and should be suitable for this project.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"etot_conv_thr\": \"1.0D-4\"}\n```",
            "Based on the provided project and conditions, the parameter \"relaxz\" is relevant to the project. The project is a Quantum ESPRESSO input file for a relaxation calculation (calculation = 'relax') using norm-conserving pseudopotentials. The \"relaxz\" parameter is used in relaxation calculations to allow the relaxation of the system towards a charged plate. However, it should be used carefully and with a layer of fixed atoms or a potential barrier to avoid atoms moving to the position of the plate or the dipole of the dipole correction.\n\nIn this case, the project does not specify any conditions that would require the use of the \"relaxz\" parameter, such as \"gate = .TRUE.\" or \"dipfield = .TRUE.\". Therefore, the default value of \"relaxz\" should be used, which is False.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"relaxz\": \"False\"}\n```",
            "Based on the provided project and conditions, the parameter \"fcp_mu\" is not relevant to the project. The project does not indicate the use of the Fictitious Charge Particle (FCP) method, which is a requirement for the \"fcp_mu\" parameter to be applicable. Therefore, the value of \"fcp_mu\" should be set to None.\n\nHere is the Python dictionary as requested:\n\n```python\nparameter_value = {\"fcp_mu\": None}\n```\n\nThis dictionary indicates that the value of the \"fcp_mu\" parameter is None, as it is not relevant to the provided project.",
            "Based on the provided project and conditions, the parameter \"ion_temperature\" is relevant to the project as the calculation type is 'relax'. However, the project does not provide any specific value for the ion temperature, and the default value is \"not_controlled\". Therefore, the appropriate value for the parameter in this case would be \"not_controlled\".\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"ion_temperature\": \"not_controlled\"}\n```\n\nThe \"ion_temperature\" parameter controls the ionic temperature using different methods. In this project, since the calculation type is 'relax', the ionic temperature can be controlled via velocity rescaling (first method), velocity rescaling (second method), scaling the temperature of the thermostat, reducing the temperature of the thermostat, using soft velocity rescaling, using Andersen thermostat, using stochastic-velocity rescaling, initializing ion velocities to a certain temperature and leaving uncontrolled further on, or not controlling the ionic temperature at all. However, since no specific method or value is provided in the project, the default value \"not_controlled\" is used.",
            "The parameter \"occupations\" is relevant to the project as it controls how electronic occupations are determined in Quantum ESPRESSO calculations. In this project, the calculation type is 'relax', which is a multistep calculation involving both SCF and NSCF calculations. The 'relax' calculation type is used for relaxation of atomic positions and/or cell parameters.\n\nGiven that the project uses a uniform k-point grid and the 'relax' calculation type, the appropriate value for the \"occupations\" parameter is 'from_input'. This value is valid only for a single k-point, but in this case, the project uses a uniform k-point grid, which is equivalent to a single k-point for the purpose of this parameter. The 'from_input' value requires the nbnd parameter to be set in the input, and the occupations should be consistent with the tot_charge parameter.\n\nTherefore, the appropriate value for the \"occupations\" parameter in this project is 'from_input'.\n\n```python\nparameter_value = {\"occupations\": \"'from_input'\"}\n```",
            "The parameter \"bfgs_ndim\" is relevant to the project as the calculation type is 'relax', which is one of the conditions for the parameter to be relevant. The \"bfgs_ndim\" parameter is used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When \"bfgs_ndim\" is set to 1, the standard quasi-Newton BFGS method is used.\n\nIn the context of the project, the BFGS algorithm is used for ionic relaxation, which is a process to find the minimum energy configuration of a system by adjusting the positions of the ions. The \"bfgs_ndim\" parameter determines the number of old forces and displacements vectors used in this process.\n\nGiven the conditions and the possible values for \"bfgs_ndim\", the appropriate value for this project is 1, which corresponds to the standard quasi-Newton BFGS method.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"bfgs_ndim\": \"1\"}\n```",
            "Based on the provided project and conditions, the parameter \"ecfixed\" is not directly relevant to the project. The project is a relaxation calculation using norm-conserving pseudopotentials and an automatic k-point grid. The \"ecfixed\" parameter is used in variable-cell molecular dynamics or stress calculations, which are not part of the current project. Therefore, the appropriate value for \"ecfixed\" in this context is None.\n\nHere is the Python dictionary as requested:\n\n```python\nparameter_value = {\"ecfixed\": None}\n```",
            "The parameter \"cell_factor\" is used in the construction of the pseudopotential tables and should exceed the maximum linear contraction of the cell during a simulation. It is relevant for variable cell calculations, which include 'vc-relax' and 'vc-md' calculations.\n\nIn the provided project, the calculation type is 'relax', which is a multistep calculation type. However, it is not explicitly stated that this is a variable cell relaxation ('vc-relax') calculation. Therefore, it is not clear if the \"cell_factor\" parameter is relevant to this project.\n\nHowever, if we assume that the project involves a variable cell relaxation calculation, then the \"cell_factor\" parameter would be relevant. In this case, the appropriate value for the \"cell_factor\" parameter would be \"2.0\" as per the default values provided.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"cell_factor\": \"2.0\"}\n```\n\nPlease note that this is an assumption and the actual relevance of the \"cell_factor\" parameter to the project would depend on the specific details of the calculation, which are not provided in the question.",
            "The parameter \"ntyp\" is relevant to the project as it represents the number of types of atoms in the unit cell. In this case, we have two types of atoms: Zn and S. Therefore, the appropriate value for the parameter \"ntyp\" is 2.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"ntyp\": \"2\"}\n```\n\nThis is based on the Quantum ESPRESSO documentation and the provided project input. The parameter \"ntyp\" is used in the &SYSTEM namelist to specify the number of types of atoms in the unit cell. This information is crucial for the calculation as it allows the software to correctly interpret the atomic species and their positions in the unit cell.\n\nIn the provided project, we have 20 atoms in total, with 10 Zn atoms and 10 S atoms. This means we have 2 types of atoms, hence \"ntyp\" should be set to 2.\n\nThe parameter \"ntyp\" is relevant to the project regardless of the type of calculation (single-step or multi-step) or the specific tags used, as it is a fundamental parameter that defines the atomic composition of the system.\n\nSources:\n- Quantum ESPRESSO documentation: https://www.quantum-espresso.org/Doc/INPUT_PW.html\n- Research paper using Quantum ESPRESSO: https://journals.aps.org/prb/abstract/10.1103/PhysRevB.71.035105",
            "The parameter \"nelec_cond\" is relevant to the project if the calculation involves a two-chemical potential calculation, which is not explicitly stated in the provided project or tags. However, the project does not seem to involve a two-chemical potential calculation, as there is no indication of \"twochem = .True.\" in the provided input. Therefore, the parameter \"nelec_cond\" is not relevant to this project.\n\n```python\nparameter_value = {'nelec_cond': None}\n```",
            "The parameter \"press_conv_thr\" is relevant to the project as it is used in variable cell calculations, which are indicated by the \"ibrav = 0\" tag in the project. This parameter sets the convergence threshold on the pressure for parameter cell relaxation.\n\nHowever, the project does not specify a \"calculation = 'vc-relax'\" or \"calculation = 'vc-md'\" tag, which are the usage conditions for this parameter according to the provided information. Therefore, the parameter is not directly applicable to the project as it is currently defined.\n\nNevertheless, if the project were to be modified to include variable cell relaxation calculations, the \"press_conv_thr\" parameter would be relevant. The default value for this parameter is \"0.5D0 Kbar\".\n\nGiven the current state of the project, the value for the \"press_conv_thr\" parameter is not applicable and should be set to None.\n\n```python\nparameter_value = {\"press_conv_thr\": None}\n```",
            "Based on the provided project and conditions, the parameter \"q2sigma\" is not relevant to the project. The project is a relaxation calculation using norm-conserving pseudopotentials and an automatic k-point grid. The \"q2sigma\" parameter is used in variable-cell molecular dynamics (vc-md) or stress calculations, which are not part of the current project. Therefore, the value for the \"q2sigma\" parameter should be set to None.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"q2sigma\": None}\n```",
            "Based on the provided project and conditions, the parameter \"lfcp\" is not relevant to the project. The project is a total energy calculation using norm-conserving pseudopotentials and an automatic k-point grid. The \"lfcp\" parameter is used for constant bias potential (constant-mu) calculations for a system with ESM method, which is not mentioned in the project or conditions. Therefore, the value for the parameter \"lfcp\" should be set to None.\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"lfcp\": None}\n```\n\nThe parameter \"lfcp\" is related to the ESM (Environment-Specific Modeling) method, which is a method for modeling isolated systems in a periodic supercell. The ESM method is used to calculate the electronic structure of isolated systems, such as molecules or clusters, in a periodic supercell. The \"lfcp\" parameter is used to perform a constant bias potential (constant-mu) calculation for a system with ESM method. This is not relevant to the provided project, which is a total energy calculation for a periodic system using norm-conserving pseudopotentials and an automatic k-point grid.",
            "Based on the provided project and conditions, the parameter \"starting_ns_eigenvalue\" is not relevant to the project. The project does not mention DFT+U Hubbard correction, collinear magnetic calculations (LSDA), or non-collinear magnetic calculations. Additionally, the project does not specify \"occupations = 'from_input'\". Therefore, the parameter \"starting_ns_eigenvalue\" is not applicable to this project.\n\nHere is the python dictionary:\n```python\nparameter_value = {'starting_ns_eigenvalue': None}\n```",
            "The parameter \"ion_positions\" is relevant to the project as it controls how atomic positions are determined in a Quantum ESPRESSO calculation. In this project, the atomic positions are provided in the \"ATOMIC_POSITIONS\" section of the input file, which means that the atomic positions are being read from the standard input.\n\nThe type of calculation in this project is \"relax\", which is a multistep calculation that involves relaxing the atomic positions and lattice parameters to find the minimum energy configuration. In this case, the \"ion_positions\" parameter is particularly important because it determines how the atomic positions are updated during the relaxation process.\n\nBased on the provided information, the appropriate value for the \"ion_positions\" parameter in this project is \"from_input\". This means that the atomic positions should be read from the standard input, even if restarting the calculation.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"ion_positions\": \"from_input\"}\n```",
            "The parameter \"fire_nmin\" is relevant to the project when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' and the ion_dynamics is set to 'fire'. In this project, the calculation type is not explicitly mentioned, but the presence of the \"ATOMIC_POSITIONS\" card suggests that it is likely a relaxation or molecular dynamics calculation. However, the ion_dynamics is also not explicitly set to 'fire'. Therefore, based on the provided information, it is not possible to definitively determine if the \"fire_nmin\" parameter is relevant to this project.\n\nAssuming that the ion_dynamics is set to 'fire' and the calculation type is 'relax' or 'md', the \"fire_nmin\" parameter would be relevant. This parameter determines the minimum number of steps with a positive pressure before the time step 'dt' is increased in the FIRE (Fast Inertial Relaxation Engine) algorithm. This algorithm is used for geometry optimization and molecular dynamics simulations.\n\nHowever, since the ion_dynamics is not explicitly set to 'fire' in the provided project, the \"fire_nmin\" parameter is not directly relevant. Therefore, the appropriate value for this parameter in the context of this project is None.\n\nHere is the python dictionary:\n\n```python\nparameter_value = {\"fire_nmin\": None}\n```",
            "The parameter \"nr1s, nr2s, nr3s\" is relevant to the project as it is used to define the three-dimensional mesh for wavefunction FFT and for the smooth part of charge density in Quantum ESPRESSO calculations. This parameter is particularly important when using Ultrasoft pseudopotentials or PAW sets, which are not explicitly mentioned in the project but are often used in conjunction with the norm-conserving pseudopotentials specified in the project.\n\nHowever, the project does not provide explicit values for \"nr1s, nr2s, nr3s\". In such cases, Quantum ESPRESSO uses the default values which are determined based on the cutoff energy (ecutwfc) and the dimensions of the unit cell. Since the project specifies a value for ecutwfc (40.0 Ry), we can infer that the default values for \"nr1s, nr2s, nr3s\" will be automatically calculated by Quantum ESPRESSO based on this cutoff energy and the cell dimensions.\n\nTherefore, the appropriate value for the parameter \"nr1s, nr2s, nr3s\" in this context is \"default\".\n\nHere is the Python dictionary:\n\n```python\nparameter_value = {\"nr1s, nr2s, nr3s\": \"default\"}\n```",
            "The parameter \"conv_thr\" is relevant to the project as it is used in self-consistent calculations ('scf') for convergence threshold. In this project, the calculation type is 'relax', which is a multistep calculation that includes 'scf' calculations. Therefore, the \"conv_thr\" parameter is relevant to this project.\n\nThe \"conv_thr\" parameter is used to set the convergence threshold for self-consistency, and it is estimated that the energy error is less than the value of \"conv_thr\". It is important to note that \"conv_thr\" is extensive, like the total energy.\n\nThe default value for \"conv_thr\" is \"1.D-6\", which is a reasonable value for most calculations. However, if a higher accuracy is required, a smaller value can be used.\n\nBased on the provided information, the appropriate value for \"conv_thr\" in this project is the default value of \"1.D-6\".\n\nHere is the python dictionary for the parameter value:\n\n```python\nparameter_value = {\"conv_thr\": \"1.D-6\"}\n```",
            "The parameter \"nextffield\" is not relevant to the provided project. This parameter is used to specify the number of activated external ionic force fields in Quantum ESPRESSO calculations. However, the project does not involve any external ionic force fields or molecular dynamics calculations, which are the conditions under which this parameter is typically used. Therefore, the appropriate value for this parameter in the context of this project is None.\n\n```python\nparameter_value = {\"nextffield\": None}\n```",
            "The parameter \"nsolv\" is related to the RISM (Reference Interaction Site Model) calculations in Quantum ESPRESSO. RISM is a method used to study solvation effects in molecular systems. However, in the provided project, there is no indication of RISM calculations being performed. The project is focused on a total energy calculation using norm-conserving pseudopotentials and nonlocal pseudopotentials for a system with Zn and S atoms. The calculation type is 'relax', which is a multistep calculation for structural relaxation.\n\nGiven that the project does not involve RISM calculations, the parameter \"nsolv\" is not relevant to this project. Therefore, the appropriate value for the parameter \"nsolv\" is None.\n\nHere is the Python dictionary as requested:\n\n```python\nparameter_value = {\"nsolv\": None}\n```",
            "Based on the provided project and conditions, the parameter \"qcutz\" is not directly relevant to the project. The project is a relaxation calculation using norm-conserving pseudopotentials and an automatic k-point grid. The \"qcutz\" parameter is used in variable-cell molecular dynamics or stress calculations, which are not part of the current project. Therefore, the appropriate value for \"qcutz\" in this context is None.\n\nHere is the Python dictionary as requested:\n\n```python\nparameter_value = {\"qcutz\": None}\n```",
            "The parameter \"tefield\" is relevant to the project as it is used in Quantum ESPRESSO for ground state and relaxation calculations, which are the types of calculations being performed in this project. The \"tefield\" parameter, when set to True, adds a saw-like potential simulating an electric field to the bare ionic potential. This can be useful for studying the effects of an electric field on the system.\n\nHowever, in the provided project, there is no indication that an electric field needs to be simulated. The project is a simple total energy calculation for a system of Zn and S atoms. Therefore, the \"tefield\" parameter is not necessary for this project.\n\nHere is the Python dictionary for the parameter value:\n\n```python\nparameter_value = {\"tefield\": None}\n```\n\nThis means that the \"tefield\" parameter is not relevant to the project and its value should be set to None."
        ],
        "evaluated_parameters_graph": {
            "directed": true,
            "multigraph": false,
            "graph": {},
            "nodes": [
                {
                    "Parameter_Name": "calculation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "scf"
                    },
                    "Description": "calculation\nA string describing the task to be performed",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'",
                        "calculation = 'bands'",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Fixed cell calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "scf": "standard calculation",
                        "nscf": null,
                        "bands": null,
                        "relax": "only the atomic positions are allowed to vary",
                        "md": "ab-initio molecular dynamics (MD) simulations",
                        "vc-relax": "allows to vary both the atomic positions and lattice constants",
                        "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "calculation"
                },
                {
                    "Parameter_Name": "etot_conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.0D-4"
                    },
                    "Description": "etot_conv_thr\nConvergence threshold on total energy (a.u) for ionic minimization: the convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps. Note that 'etot_conv_thr' is extensive, like the total energy.",
                    "Possible_Usage_Conditions": [
                        "total energy calculations",
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "etot_conv_thr"
                },
                {
                    "Parameter_Name": "forc_conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.0D-3"
                    },
                    "Description": "forc_conv_thr\nConvergence threshold on forces (a.u) for ionic minimization: the convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.",
                    "Possible_Usage_Conditions": [
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "forc_conv_thr"
                },
                {
                    "Parameter_Name": "ntyp",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ntyp\nnumber of types of atoms in the unit cell",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ntyp"
                },
                {
                    "Parameter_Name": "nr1s, nr2s, nr3s",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )",
                    "Possible_Usage_Conditions": [
                        "Smooth FFT grid",
                        "Ultrasoft pseudopotentials",
                        "PAW sets"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "all three dimensions should be set, to use this parameter",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nr1s, nr2s, nr3s"
                },
                {
                    "Parameter_Name": "nosym_evc",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                    "Possible_Usage_Conditions": [
                        "Monkhorst-Pack grid",
                        "custom k-points",
                        "full BZ coverage"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                    },
                    "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                    "Namelist": "&SYSTEM",
                    "id": "nosym_evc"
                },
                {
                    "Parameter_Name": "occupations",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "occupations\nControls how electronic occupations are determined",
                    "Possible_Usage_Conditions": [
                        "DOS calculations",
                        "stress calculations",
                        "Relaxation calculations",
                        "Dynamics calculations",
                        "Metallic systems",
                        "Insulating systems",
                        "Uniform k-point grid",
                        "Single k-point",
                        "occupations = 'smearing'",
                        "Tetrahedron method (Bloechl's version)",
                        "Linear tetrahedron method",
                        "Optimized tetrahedron method",
                        "Fixed occupations",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": null,
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "smearing": "for metals, requires parameters smearing and degauss",
                        "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                        "tetrahedra_lin": "original linear tetrahedron method, reference only",
                        "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                        "fixed": "for insulators with a gap",
                        "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "occupations"
                },
                {
                    "Parameter_Name": "smearing",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "gaussian"
                    },
                    "Description": "smearing\nControls the type of smearing method to be used",
                    "Possible_Usage_Conditions": [
                        "Metallic systems",
                        "Semiconductor systems",
                        "partial occupations",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "gaussian/gauss": "ordinary Gaussian spreading",
                        "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                        "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                        "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "smearing"
                },
                {
                    "Parameter_Name": "relaxz",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "relaxz\nAllows the relaxation of the system towards the charged plate.",
                    "Possible_Usage_Conditions": [
                        "Relaxation calculations",
                        "gate = .TRUE.",
                        "dipfield = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "used only if (gate = .TRUE.)",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": "Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.",
                    "Namelist": "&SYSTEM",
                    "id": "relaxz"
                },
                {
                    "Parameter_Name": "scf_must_converge",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": ".TRUE."
                    },
                    "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                    },
                    "Final_comments": "Use with care.",
                    "Namelist": "&ELECTRONS",
                    "id": "scf_must_converge"
                },
                {
                    "Parameter_Name": "conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-6"
                    },
                    "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "conv_thr"
                },
                {
                    "Parameter_Name": "ion_positions",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "default"
                    },
                    "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "",
                    "Parameter_Value_Conditions": {
                        "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                        "from_input": "read atomic positions from standard input, even if restarting"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_positions"
                },
                {
                    "Parameter_Name": "ion_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "calculation=relax": "bfgs",
                        "calculation=md": "verlet",
                        "calculation=vc-relax": "bfgs",
                        "calculation=vc-md": "beeman"
                    },
                    "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                        "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                        "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                        "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                        "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                        "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                        "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_dynamics"
                },
                {
                    "Parameter_Name": "ion_temperature",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "not_controlled"
                    },
                    "Description": "ion_temperature\nControls the ionic temperature using different methods",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                        "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                        "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                        "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                        "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                        "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                        "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                        "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                        "not_controlled": "(default) ionic temperature is not controlled"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_temperature"
                },
                {
                    "Parameter_Name": "bfgs_ndim",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "1": "standard quasi-Newton BFGS method is used"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "bfgs_ndim"
                },
                {
                    "Parameter_Name": "cell_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null,
                        "vc-relax": "bfgs"
                    },
                    "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                    "Parameter_Value_Conditions": {
                        "none": "no dynamics (both vc-relax and vc-md)",
                        "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                        "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                        "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                        "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                        "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CELL",
                    "id": "cell_dynamics"
                },
                {
                    "Parameter_Name": "cell_factor",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "2.0 for variable-cell calculations"
                    },
                    "Description": "cell_factor\nUsed in the construction of the pseudopotential tables. It should exceed the maximum linear contraction of the cell during a simulation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Variable cell calculations",
                        "pseudopotential tables"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CELL",
                    "id": "cell_factor"
                },
                {
                    "Parameter_Name": "nr1, nr2, nr3",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "nr1, nr2, nr3\nThree-dimensional FFT mesh (hard grid) for charge density (and scf potential)",
                    "Possible_Usage_Conditions": [
                        "charge density calculations",
                        "Hard FFT grid"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "If not specified the grid is calculated based on the cutoff for charge density (see also ecutrho)",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": "all three dimensions should be set, to use this parameter",
                    "Namelist": "&SYSTEM",
                    "id": "nr1, nr2, nr3"
                },
                {
                    "Parameter_Name": "ecutrho",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "4 * ecutwfc"
                    },
                    "Description": "ecutrho\nKinetic energy cutoff (Ry) for charge density and potential",
                    "Possible_Usage_Conditions": [
                        "Gradient-corrected functionals"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Value requirements vary based on the type of pseudopotential and functional being used",
                    "Parameter_Value_Conditions": {
                        "default": "norm-conserving pseudopotential",
                        "8-12 * ecutwfc": "ultrasoft PP",
                        "4 * ecutwfc": "PAW datasets (requires testing)",
                        "higher than default": "gradient-corrected functional, cells with vacuum, or pseudopotential without non-linear core correction"
                    },
                    "Final_comments": "For norm-conserving pseudopotential, small reductions from default are possible but introduce noise in forces and stress. For PAW datasets, testing is mandatory due to augmentation charge shape dependency.",
                    "Namelist": "&SYSTEM",
                    "id": "ecutrho"
                },
                {
                    "Parameter_Name": "ecutwfc",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ecutwfc\nkinetic energy cutoff (Ry) for wavefunctions",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ecutwfc"
                },
                {
                    "Parameter_Name": "noinv",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "noinv\nif (.TRUE.) disable the usage of k => -k symmetry (time reversal) in k-point generation",
                    "Possible_Usage_Conditions": [
                        "Non-collinear magnetic calculations",
                        "custom k-points"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "noinv"
                },
                {
                    "Card_Name": "K_POINTS",
                    "Namelist": "Card: K_POINTS",
                    "Required/Optional": null,
                    "Card_Options": [
                        "tpiba",
                        "tpiba_b",
                        "tpiba_c",
                        "crystal",
                        "crystal_b",
                        "crystal_c",
                        "gamma",
                        "automatic"
                    ],
                    "Default_Option": "tpiba",
                    "Description": null,
                    "Card_Use_Conditions": null,
                    "Card_Option_Given_Conditions": {
                        "gamma": "wavefunctions can be chosen as real, and specialized subroutines optimized for calculations at the gamma point are used",
                        "automatic": "generates uniform grid of k-points with specified grid and offset parameters"
                    },
                    "Syntax_Given_Option": {
                        "tpiba": "K_POINTS tpiba\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal": "K_POINTS crystal\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_b": "K_POINTS tpiba_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_b": "K_POINTS crystal_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_c": "K_POINTS tpiba_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_c": "K_POINTS crystal_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "automatic": "K_POINTS automatic\nnk1 nk2 nk3 sk1 sk2 sk3",
                        "gamma": "K_POINTS gamma"
                    },
                    "Item_Description": {
                        "nks": "Number of supplied special k-points",
                        "xk_x, xk_y, xk_z": "Special k-points in the irreducible Brillouin Zone (IBZ) of the lattice (with all symmetries)",
                        "wk": "weights",
                        "nk1, nk2, nk3": "These parameters specify the k-point grid (nk1 x nk2 x nk3) as in Monkhorst-Pack grids",
                        "sk1, sk2, sk3": "The grid offsets"
                    },
                    "Item_Conditions": {
                        "sk1, sk2, sk3": "must be 0 (no offset) or 1 (grid displaced by half a grid step in the corresponding direction)",
                        "nks": "must be 3 for tpiba_c and crystal_c options"
                    },
                    "General_Syntax": null,
                    "Final_comments": "Only grids having the full symmetry of the crystal work with tetrahedra. Some grids with offset may not work.",
                    "Possible_Usage_Conditions": [],
                    "id": "K_POINTS"
                },
                {
                    "Card_Name": "OCCUPATIONS",
                    "Namelist": "Card: OCCUPATIONS",
                    "Required/Optional": "optional",
                    "Card_Options": null,
                    "Default_Option": null,
                    "Description": null,
                    "Card_Use_Conditions": {
                        "occupations": "from_input"
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": null,
                    "Item_Description": {
                        "f_inp1": "Occupations of individual states (MAX 10 PER ROW). For spin-polarized calculations, these are majority spin states.",
                        "f_inp2": "Occupations of minority spin states (MAX 10 PER ROW)"
                    },
                    "Item_Conditions": {
                        "f_inp2": "To be specified only for spin-polarized calculations"
                    },
                    "General_Syntax": "OCCUPATIONS\nf_inp1(1) f_inp1(2) . . . f_inp1(nbnd)\n[ f_inp2(1) f_inp2(2) . . . f_inp2(nbnd) ]",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "occupations = 'from_input'"
                    ],
                    "id": "OCCUPATIONS"
                },
                {
                    "Parameter_Name": "nbnd",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "insulator": "number of valence bands (number_of_electrons/2)",
                        "metal": "(number of valence bands)*1.2"
                    },
                    "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                    "Possible_Usage_Conditions": [
                        "Insulating systems",
                        "Metallic systems",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nbnd"
                },
                {
                    "Parameter_Name": "tot_charge",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": 0.0
                    },
                    "Description": "tot_charge\nTotal charge of the system. Useful for simulations with charged cells.",
                    "Possible_Usage_Conditions": [
                        "charged cells"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when simulating systems with non-neutral charge states. In periodic calculations, a compensating jellium background is inserted for non-neutral cells.",
                    "Parameter_Value_Conditions": {
                        "0": "neutral cell",
                        "+1": "one electron missing from the system",
                        "-1": "one additional electron"
                    },
                    "Final_comments": "In a periodic calculation a compensating jellium background is inserted to remove divergences if the cell is not neutral.",
                    "Namelist": "&SYSTEM",
                    "id": "tot_charge"
                },
                {
                    "Parameter_Name": "degauss",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.D0"
                    },
                    "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'bands'",
                        "Metallic systems",
                        "partial occupations",
                        "occupations = 'smearing'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "degauss"
                },
                {
                    "Parameter_Name": "nspin",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nspin\nControls spin polarization type in calculations",
                    "Possible_Usage_Conditions": [
                        "nspin = 1",
                        "nspin = 2",
                        "Collinear magnetic calculations (LSDA)",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "1": "non-polarized calculation",
                        "2": "spin-polarized calculation, LSDA (magnetization along z axis)",
                        "4": "spin-polarized calculation, noncollinear (magnetization in generic direction)"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nspin"
                },
                {
                    "Parameter_Name": "constrained_magnetization",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "constrained_magnetization\nUsed to perform constrained calculations in magnetic systems.",
                    "Possible_Usage_Conditions": [
                        "Magnetic systems",
                        "Non-collinear magnetic calculations",
                        "Collinear magnetic calculations (LSDA)"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "no constraint",
                        "total": "total magnetization is constrained by adding a penalty term to total energy, noncolinear case only",
                        "atomic": "atomic magnetization are constrained to defined starting magnetization",
                        "total direction": "angle theta of total magnetization with z axis is constrained",
                        "atomic direction": "only cosine of angle1 of atomic magnetic moment is constrained"
                    },
                    "Final_comments": "Note: symmetrization may prevent to reach the desired orientation of the magnetization. Try not to start with very highly symmetric configurations or use the nosym flag (only as a last remedy)",
                    "Namelist": "&SYSTEM",
                    "id": "constrained_magnetization"
                },
                {
                    "Parameter_Name": "block",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "block\nAdds a potential barrier to the total potential seen by the electrons to mimic a dielectric in field effect configuration and/or to avoid electrons spilling into the vacuum region for electron doping. Potential barrier is from 'block_1' to 'block_2' and has a height of 'block_height'.",
                    "Possible_Usage_Conditions": [
                        "gate = .TRUE.",
                        "dipfield = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "used only if (gate = .TRUE.)",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "block"
                },
                {
                    "Parameter_Name": "dipfield",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "dipfield\nIf .TRUE. and tefield = .TRUE. a dipole correction is also added to the bare ionic potential.",
                    "Possible_Usage_Conditions": [
                        "Slab systems",
                        "Laue boundary conditions",
                        "tefield = .TRUE."
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Must be used ONLY in a slab geometry, for surface calculations, with the discontinuity FALLING IN THE EMPTY SPACE.",
                    "Parameter_Value_Conditions": {
                        "True": "tefield must be True"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "dipfield"
                },
                {
                    "Parameter_Name": "electron_maxstep",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 100
                    },
                    "Description": "electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "electron_maxstep"
                },
                {
                    "Parameter_Name": "diago_thr_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null,
                        "scf_atomic_orbitals": "1.D-2",
                        "scf_charge_density": "1.D-5",
                        "non_scf": "(conv_thr/N elec)/10"
                    },
                    "Description": "diago_thr_init\nConvergence threshold (ethr) for iterative diagonalization (the check is on eigenvalue convergence)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "During self consistency (scf) the threshold is automatically reduced (but never below 1.D-13) when approaching convergence",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "diago_thr_init"
                },
                {
                    "Card_Name": "CONSTRAINTS",
                    "Namelist": "Card: CONSTRAINTS",
                    "Required/Optional": "optional",
                    "Card_Options": [
                        "type_coord",
                        "atom_coord",
                        "distance",
                        "planar_angle",
                        "torsional_angle",
                        "bennett_proj",
                        "potential_wall"
                    ],
                    "Default_Option": null,
                    "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                    "Card_Use_Conditions": {
                        "calculation": [
                            "calculation = 'relax'",
                            "calculation = 'md'"
                        ],
                        "ion_dynamics": [
                            "damp",
                            "verlet"
                        ],
                        "not_compatible": [
                            "calculation = 'vc-relax'",
                            "calculation = 'vc-md'"
                        ]
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": {
                        "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                        "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                        "distance": "constr_type distance constr(1) constr(2) constr_target",
                        "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                        "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                        "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                        "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                    },
                    "Item_Description": {
                        "nconstr": "The total number of constraints to be applied",
                        "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                        "constr_type": "Type of constraint"
                    },
                    "Item_Conditions": null,
                    "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "ion_dynamics = 'verlet'",
                        "ion_dynamics = 'damp'"
                    ],
                    "id": "CONSTRAINTS"
                },
                {
                    "Parameter_Name": "tempw",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "300.D0"
                    },
                    "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tempw"
                },
                {
                    "Parameter_Name": "nraise",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                        "1/nraise": "when ion_temperature = 'andersen'"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "nraise"
                },
                {
                    "Parameter_Name": "tolp",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tolp"
                },
                {
                    "Parameter_Name": "delta_t",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D0"
                    },
                    "Description": "delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "positive": "when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling",
                        "negative": "when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps"
                    },
                    "Final_comments": "For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.",
                    "Namelist": "&IONS",
                    "id": "delta_t"
                }
            ],
            "edges": [
                {
                    "condition": "both criteria must be satisfie",
                    "source_node": "etot_conv_thr",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "etot_conv_thr",
                    "source": "etot_conv_thr",
                    "target": "forc_conv_thr"
                },
                {
                    "condition": "both criteria must be satisfie",
                    "source_node": "forc_conv_thr",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "forc_conv_thr",
                    "source": "forc_conv_thr",
                    "target": "etot_conv_thr"
                },
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "nr1, nr2, nr3"
                },
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "ecutrho"
                },
                {
                    "condition": "Coincides with nr1, nr2, nr3 i",
                    "source_node": "nr1s, nr2s, nr3s",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nr1s, nr2s, nr3s",
                    "source": "nr1s, nr2s, nr3s",
                    "target": "ecutwfc"
                },
                {
                    "condition": "when noinv=.true., time revers",
                    "source_node": "nosym_evc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nosym_evc",
                    "source": "nosym_evc",
                    "target": "noinv"
                },
                {
                    "condition": "requires smearing and degauss ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "smearing"
                },
                {
                    "condition": "tetrahedra method requires uni",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "K_POINTS"
                },
                {
                    "condition": "from_input option requires occ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "OCCUPATIONS"
                },
                {
                    "condition": "from_input option requires nbn",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "nbnd"
                },
                {
                    "condition": "from_input occupations should ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "tot_charge"
                },
                {
                    "condition": "gaussian smearing for metals o",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "occupations"
                },
                {
                    "condition": "used in Gaussian smearing",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "degauss"
                },
                {
                    "condition": "for spin-polarized calculation",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "nspin"
                },
                {
                    "condition": "for magnetic calculations",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "constrained_magnetization"
                },
                {
                    "condition": "Use with block=.TRUE. to creat",
                    "source_node": "relaxz",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "relaxz",
                    "source": "relaxz",
                    "target": "block"
                },
                {
                    "condition": "Use with dipfield=.TRUE. to av",
                    "source_node": "relaxz",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "relaxz",
                    "source": "relaxz",
                    "target": "dipfield"
                },
                {
                    "condition": "referenced when scf_must_conve",
                    "source_node": "scf_must_converge",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "scf_must_converge",
                    "source": "scf_must_converge",
                    "target": "electron_maxstep"
                },
                {
                    "condition": "In nscf calculations, conv_thr",
                    "source_node": "conv_thr",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "conv_thr",
                    "source": "conv_thr",
                    "target": "diago_thr_init"
                },
                {
                    "condition": "can be used with 'damp' and 'f",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "CONSTRAINTS"
                },
                {
                    "condition": "for vc-relax with 'bfgs', requ",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "cell_dynamics"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tempw"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "nraise"
                },
                {
                    "condition": "used with rescaling method",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tolp"
                },
                {
                    "condition": "used with rescale-T and reduce",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "delta_t"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be 'bfgs' when cell_dynam",
                    "source_node": "cell_dynamics",
                    "source_type": "&CELL",
                    "relationship_defined_by": "cell_dynamics",
                    "source": "cell_dynamics",
                    "target": "ion_dynamics"
                }
            ]
        },
        "trimmed_documentation": [
            {
                "Parameter_Name": "calculation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "scf"
                },
                "Description": "calculation\nA string describing the task to be performed",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'",
                    "calculation = 'bands'",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Fixed cell calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "scf": "standard calculation",
                    "nscf": null,
                    "bands": null,
                    "relax": "only the atomic positions are allowed to vary",
                    "md": "ab-initio molecular dynamics (MD) simulations",
                    "vc-relax": "allows to vary both the atomic positions and lattice constants",
                    "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "etot_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.0D-4"
                },
                "Description": "etot_conv_thr\nConvergence threshold on total energy (a.u) for ionic minimization: the convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps. Note that 'etot_conv_thr' is extensive, like the total energy.",
                "Possible_Usage_Conditions": [
                    "total energy calculations",
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "forc_conv_thr": "both criteria must be satisfied"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "forc_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.0D-3"
                },
                "Description": "forc_conv_thr\nConvergence threshold on forces (a.u) for ionic minimization: the convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.",
                "Possible_Usage_Conditions": [
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "etot_conv_thr": "both criteria must be satisfied"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tefield",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.",
                "Possible_Usage_Conditions": [
                    "Ground state calculations",
                    "Relaxation calculations",
                    "tefield = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "True": "A saw-like potential simulating an electric field is added to the bare ionic potential"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "edir": "Used to define form and size of added potential",
                    "eamp": "Used to define form and size of added potential",
                    "emaxpos": "Used to define form and size of added potential",
                    "eopreg": "Used to define form and size of added potential"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "twochem",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when performing two chemical potential calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "must be set to smearing",
                    "nelec_cond": "related parameter",
                    "nbnd_cond": "related parameter",
                    "degauss_cond": "related parameter"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "lfcp",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "ESM calculations",
                    "Constant bias potential calculations",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "'calculation' must be 'relax' or 'md'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "&FCP": "must be set when lfcp is .TRUE.",
                    "assume_isolated": "must be 'esm'",
                    "esm_bc": "must be 'bc2' or 'bc3', or 'bc1' with trism=.TRUE.",
                    "ignore_wolfe": "is always .TRUE., for BFGS"
                },
                "Final_comments": "The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.",
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "celldm",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.",
                "Possible_Usage_Conditions": [
                    "ibrav-defined crystal structure"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified",
                "Parameter_Value_Conditions": {
                    "celldm(1)": "is the lattice parameter \"a\" (in BOHR)",
                    "celldm(1) when ibrav=0": "only celldm(1) is used if present"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ibrav": "depends on ibrav value",
                    "CELL_PARAMETERS": "cell vectors are read from card CELL_PARAMETERS when ibrav=0",
                    "A, B, C, cosAB, cosAC, cosBC": "mutually exclusive with celldm"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "ntyp",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "ntyp\nnumber of types of atoms in the unit cell",
                "Possible_Usage_Conditions": [],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nr1s, nr2s, nr3s",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )",
                "Possible_Usage_Conditions": [
                    "Smooth FFT grid",
                    "Ultrasoft pseudopotentials",
                    "PAW sets"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "all three dimensions should be set, to use this parameter",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "nr1, nr2, nr3": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutrho": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutwfc": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym_evc",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                "Possible_Usage_Conditions": [
                    "Monkhorst-Pack grid",
                    "custom k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "when noinv=.true., time reversal symmetry is not assumed"
                },
                "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "occupations",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null
                },
                "Description": "occupations\nControls how electronic occupations are determined",
                "Possible_Usage_Conditions": [
                    "DOS calculations",
                    "stress calculations",
                    "Relaxation calculations",
                    "Dynamics calculations",
                    "Metallic systems",
                    "Insulating systems",
                    "Uniform k-point grid",
                    "Single k-point",
                    "occupations = 'smearing'",
                    "Tetrahedron method (Bloechl's version)",
                    "Linear tetrahedron method",
                    "Optimized tetrahedron method",
                    "Fixed occupations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": null,
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "smearing": "for metals, requires parameters smearing and degauss",
                    "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                    "tetrahedra_lin": "original linear tetrahedron method, reference only",
                    "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                    "fixed": "for insulators with a gap",
                    "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "smearing": "requires smearing and degauss parameters",
                    "K_POINTS": "tetrahedra method requires uniform grid of k-points",
                    "OCCUPATIONS": "from_input option requires occupations to be read from OCCUPATIONS card",
                    "nbnd": "from_input option requires nbnd parameter to be set",
                    "tot_charge": "from_input occupations should be consistent with tot_charge"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nelec_cond",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "nelec_cond\nNumber of electrons placed in the conduction manifold in a two-chemical potential calculation (twochem = .True.). Of the total number of electrons nelec_cond will occupy the valence manifold and nelec_cond will be constrained in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "Two-chemical-potential calculations",
                    "valence and conduction manifolds"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in two-chemical potential calculations when twochem = .True.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "twochem": "Must be set to .true. for this parameter to be relevant"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                "Possible_Usage_Conditions": [
                    "calculation = 'bands'",
                    "Metallic systems",
                    "partial occupations",
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "smearing",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "gaussian"
                },
                "Description": "smearing\nControls the type of smearing method to be used",
                "Possible_Usage_Conditions": [
                    "Metallic systems",
                    "Semiconductor systems",
                    "partial occupations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "gaussian/gauss": "ordinary Gaussian spreading",
                    "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                    "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                    "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "gaussian smearing for metals occupations='smearing'",
                    "degauss": "used in Gaussian smearing",
                    "nspin": "for spin-polarized calculations",
                    "constrained_magnetization": "for magnetic calculations"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "ecfixed",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.0
                },
                "Description": "ecfixed\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). ecfixed is the value (in Rydberg) of the constant-cutoff",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-md'",
                    "stress calculations",
                    "Exchange-correlation functional",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "qcutz",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.0
                },
                "Description": "qcutz\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). qcutz is the height (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'. In the kinetic energy, G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-md'",
                    "stress calculations",
                    "Exchange-correlation functional",
                    "variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ecfixed": "used together in energy step calculation",
                    "q2sigma": "used together in kinetic energy calculation"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "q2sigma",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.1
                },
                "Description": "q2sigma\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). q2sigma is the width (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-md'",
                    "stress calculations",
                    "Exchange-correlation functional"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in the kinetic energy calculation where G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ecfixed": "q2sigma defines width of energy step for reciprocal vectors with square modulus > ecfixed",
                    "qcutz": "Used together in kinetic energy calculation"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "starting_ns_eigenvalue",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "-1.d0"
                },
                "Description": "starting_ns_eigenvalue(m,ispin,ityp)\nIn the first iteration of an DFT+U run it overwrites the m-th eigenvalue of the ns occupation matrix for the ispin component of atomic species ityp.",
                "Possible_Usage_Conditions": [
                    "DFT+U Hubbard correction",
                    "Collinear magnetic calculations (LSDA)",
                    "Non-collinear magnetic calculations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in first iteration of DFT+U calculations. For noncollinear case, ispin index runs up to npol=2. The value lmax is given by the maximum angular momentum number to which the Hubbard U is applied.",
                "Parameter_Value_Conditions": {
                    "-1.d0": "parameter not set",
                    "other values": "overwrites eigenvalue of ns occupation matrix"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "HUBBARD": "related to maximum angular momentum number for Hubbard U"
                },
                "Final_comments": "Leave unchanged eigenvalues that are not set. This is useful to suggest the desired orbital occupations when the default choice takes another path.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "assume_isolated",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-relax'",
                    "Cubic supercells",
                    "2D periodic systems in x-y plane",
                    "Isolated (non-periodic) systems",
                    "charged slabs",
                    "vacuum boundaries",
                    "electrode boundaries",
                    "optional electric field"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "none": "regular periodic calculation w/o any correction",
                    "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                    "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                    "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "esm_bc": "Used with esm to choose boundary conditions",
                    "esm_efield": "Used with esm for optional electric field",
                    "esm_w": "Related to esm",
                    "esm_nfit": "Related to esm",
                    "cell_dofree": "Should be set to \"2Dxy\" when using 2D option in vc-relax calculations"
                },
                "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "relaxz",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "relaxz\nAllows the relaxation of the system towards the charged plate.",
                "Possible_Usage_Conditions": [
                    "Relaxation calculations",
                    "gate = .TRUE.",
                    "dipfield = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "used only if (gate = .TRUE.)",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "block": "Use with block=.TRUE. to create potential barrier to avoid atoms moving to plate position",
                    "dipfield": "Use with dipfield=.TRUE. to avoid atoms moving to dipole correction position"
                },
                "Final_comments": "Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nextffield",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 0
                },
                "Description": "nextffield\nNumber of activated external ionic force fields.",
                "Possible_Usage_Conditions": [
                    "Relaxation calculations",
                    "calculation = 'md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "scf_must_converge",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": ".TRUE."
                },
                "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "electron_maxstep": "referenced when scf_must_converge is .false."
                },
                "Final_comments": "Use with care.",
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-6"
                },
                "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "diago_thr_init": "In nscf calculations, conv_thr is used to set the default value of the threshold (ethr) for iterative diagonalization"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "efield_cart",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "(0.D0, 0.D0, 0.D0)"
                },
                "Description": "efield_cart(i), i=1,3\nFinite electric field (in Ry a.u.=36.3609*10^10 V/m) in cartesian axis.",
                "Possible_Usage_Conditions": [
                    "Automatic k-points",
                    "lelfield = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only if lelfield = .TRUE. and if k-points (K_POINTS card) are automatic.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "K_POINTS": "must be automatic",
                    "lelfield": "must be TRUE"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "ion_positions",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "default"
                },
                "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "",
                "Parameter_Value_Conditions": {
                    "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                    "from_input": "read atomic positions from standard input, even if restarting"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation=relax": "bfgs",
                    "calculation=md": "verlet",
                    "calculation=vc-relax": "bfgs",
                    "calculation=vc-md": "beeman"
                },
                "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                    "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                    "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                    "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                    "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                    "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                    "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "CONSTRAINTS": "can be used with 'damp' and 'fire' for constrained optimization, and with 'verlet' for constrained dynamics",
                    "cell_dynamics": "for vc-relax with 'bfgs', requires cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "remove_rigid_rot",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": "Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "ion_temperature\nControls the ionic temperature using different methods",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                    "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                    "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                    "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                    "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                    "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                    "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                    "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                    "not_controlled": "(default) ionic temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tempw": "used with most temperature control methods",
                    "nraise": "used with most temperature control methods",
                    "tolp": "used with rescaling method",
                    "delta_t": "used with rescale-T and reduce-T methods"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "delta_t",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D0"
                },
                "Description": "delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "positive": "when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling",
                    "negative": "when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_temperature": "must be either 'rescale-T' or 'reduce-T'",
                    "nraise": "used when ion_temperature = 'reduce-T'"
                },
                "Final_comments": "For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "bfgs_ndim",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "1": "standard quasi-Newton BFGS method is used"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_nmin",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 5
                },
                "Description": "fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "cell_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null,
                    "vc-relax": "bfgs"
                },
                "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                "Parameter_Value_Conditions": {
                    "none": "no dynamics (both vc-relax and vc-md)",
                    "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                    "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                    "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                    "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                    "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs' when cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&CELL"
            },
            {
                "Parameter_Name": "cell_factor",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "2.0 for variable-cell calculations"
                },
                "Description": "cell_factor\nUsed in the construction of the pseudopotential tables. It should exceed the maximum linear contraction of the cell during a simulation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations",
                    "pseudopotential tables"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&CELL"
            },
            {
                "Parameter_Name": "press_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0 Kbar"
                },
                "Description": "press_conv_thr\nConvergence threshold on the pressure for parameter cell relaxation",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": "note that the other convergence thresholds for ionic relaxation apply as well",
                "Namelist": "&CELL"
            },
            {
                "Parameter_Name": "fcp_mu",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "constant chemical potential conditions"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if lfcp = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "freeze_all_atoms",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "freeze_all_atoms\nIf .TRUE., freeze all atoms to perform relaxation or dynamics only with Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "nsolv",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nsolv\nThe number of solvents (i.e. molecular species) in the unit cell",
                "Possible_Usage_Conditions": [
                    "RISM calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if trism = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            }
        ],
        "trimmed_documentation_string": [
            "Parameter_Name:\n\"freeze_all_atoms\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"freeze_all_atoms\nIf .TRUE., freeze all atoms to perform relaxation or dynamics only with Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"cell_dynamics\"\nDefault_Values:\n{\n  default: None\n  vc-relax:\n\"bfgs\"\n}\nDescription:\n\"cell_dynamics\nSpecify the type of dynamics for the cell.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions:\n{\n  none:\n\"no dynamics (both vc-relax and vc-md)\"\n  damp-pr:\n\"damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)\"\n  damp-w:\n\"damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)\"\n  bfgs:\n\"BFGS quasi-newton algorithm (vc-relax)\"\n  pr:\n\"(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)\"\n  w:\n\"(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)\"\n}\nFinal_comments: None\nNamelist:\n\"&CELL\"",
            "Parameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"celldm\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"celldm(i), i=1,6\nCrystallographic constants - see the 'ibrav' parameter.\"\nPossible_Usage_Conditions: [\n  ibrav-defined crystal structure,\n]\nUsage_Conditions:\n\"Specify either these OR A, B, C, cosAB, cosBC, cosAC NOT both. Only needed values (depending on 'ibrav') must be specified\"\nParameter_Value_Conditions:\n{\n  celldm(1):\n\"is the lattice parameter \"a\" (in BOHR)\"\n  celldm(1) when ibrav=0:\n\"only celldm(1) is used if present\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"remove_rigid_rot\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"remove_rigid_rot\nThis keyword is useful when simulating the dynamics and/or the thermodynamics of an isolated system. If set to true the total torque of the internal forces is set to zero by adding new forces that compensate the spurious interaction with the periodic images. This allows for the use of smaller supercells.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Note: since the potential energy is no longer consistent with the forces (it still contains the spurious interaction with the repeated images), the total energy is not conserved anymore. However the dynamical and thermodynamical properties should be in closer agreement with those of an isolated system. Also the final energy of a structural relaxation ('relax') will be higher, but the relaxation itself should be faster.\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"delta_t\"\nDefault_Values:\n{\n  default:\n\"1.D0\"\n}\nDescription:\n\"delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  positive:\n\"when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling\"\n  negative:\n\"when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps\"\n}\nFinal_comments:\n\"For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"efield_cart\"\nDefault_Values:\n{\n  default:\n\"(0.D0, 0.D0, 0.D0)\"\n}\nDescription:\n\"efield_cart(i), i=1,3\nFinite electric field (in Ry a.u.=36.3609*10^10 V/m) in cartesian axis.\"\nPossible_Usage_Conditions: [\n  Automatic k-points,\n  lelfield = .TRUE.,\n]\nUsage_Conditions:\n\"Used only if lelfield = .TRUE. and if k-points (K_POINTS card) are automatic.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"forc_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.0D-3\"\n}\nDescription:\n\"forc_conv_thr\nConvergence threshold on forces (a.u) for ionic minimization: the convergence criterion is satisfied when all components of all forces are smaller than 'forc_conv_thr'.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"etot_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.0D-4\"\n}\nDescription:\n\"etot_conv_thr\nConvergence threshold on total energy (a.u) for ionic minimization: the convergence criterion is satisfied when the total energy changes less than 'etot_conv_thr' between two consecutive scf steps. Note that 'etot_conv_thr' is extensive, like the total energy.\"\nPossible_Usage_Conditions: [\n  total energy calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"relaxz\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"relaxz\nAllows the relaxation of the system towards the charged plate.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n  gate = .TRUE.,\n  dipfield = .TRUE.,\n]\nUsage_Conditions:\n\"used only if (gate = .TRUE.)\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"Use carefully and utilize either a layer of fixed atoms or a potential barrier to avoid the atoms moving to the position of the plate or the dipole of the dipole correction.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ecfixed\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"ecfixed\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). ecfixed is the value (in Rydberg) of the constant-cutoff\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"cell_factor\"\nDefault_Values:\n{\n  default:\n\"2.0 for variable-cell calculations\"\n}\nDescription:\n\"cell_factor\nUsed in the construction of the pseudopotential tables. It should exceed the maximum linear contraction of the cell during a simulation.\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n  pseudopotential tables,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&CELL\"",
            "Parameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nelec_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"nelec_cond\nNumber of electrons placed in the conduction manifold in a two-chemical potential calculation (twochem = .True.). Of the total number of electrons nelec_cond will occupy the valence manifold and nelec_cond will be constrained in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  valence and conduction manifolds,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"press_conv_thr\"\nDefault_Values:\n{\n  default:\n\"0.5D0 Kbar\"\n}\nDescription:\n\"press_conv_thr\nConvergence threshold on the pressure for parameter cell relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions: None\nFinal_comments:\n\"note that the other convergence thresholds for ionic relaxation apply as well\"\nNamelist:\n\"&CELL\"",
            "Parameter_Name:\n\"q2sigma\"\nDefault_Values:\n{\n  default:\n0.1\n}\nDescription:\n\"q2sigma\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). q2sigma is the width (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n]\nUsage_Conditions:\n\"Used in the kinetic energy calculation where G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"lfcp\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lfcp\nIf .TRUE. perform a constant bias potential (constant-mu) calculation for a system with ESM method. To perform the calculation, you must set a namelist FCP.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  ESM calculations,\n  Constant bias potential calculations,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"'calculation' must be 'relax' or 'md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"assume_isolated = 'esm' and (esm_bc = 'bc2' or esm_bc = 'bc3' or (esm_bc = 'bc1' and trism = .TRUE.))\"\n}\nFinal_comments:\n\"The total energy displayed in output includes the potentiostat contribution (-mu*N). ESM-RISM is also supported.\"\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"starting_ns_eigenvalue\"\nDefault_Values:\n{\n  default:\n\"-1.d0\"\n}\nDescription:\n\"starting_ns_eigenvalue(m,ispin,ityp)\nIn the first iteration of an DFT+U run it overwrites the m-th eigenvalue of the ns occupation matrix for the ispin component of atomic species ityp.\"\nPossible_Usage_Conditions: [\n  DFT+U Hubbard correction,\n  Collinear magnetic calculations (LSDA),\n  Non-collinear magnetic calculations,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used in first iteration of DFT+U calculations. For noncollinear case, ispin index runs up to npol=2. The value lmax is given by the maximum angular momentum number to which the Hubbard U is applied.\"\nParameter_Value_Conditions:\n{\n  -1.d0:\n\"parameter not set\"\n  other values:\n\"overwrites eigenvalue of ns occupation matrix\"\n}\nFinal_comments:\n\"Leave unchanged eigenvalues that are not set. This is useful to suggest the desired orbital occupations when the default choice takes another path.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"nextffield\"\nDefault_Values:\n{\n  default:\n0\n}\nDescription:\n\"nextffield\nNumber of activated external ionic force fields.\"\nPossible_Usage_Conditions: [\n  Relaxation calculations,\n  calculation = 'md',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"qcutz\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"qcutz\nparameters for modified functional to be used in variable-cell molecular dynamics (or in stress calculation). qcutz is the height (in Rydberg) of the energy step for reciprocal vectors whose square modulus is greater than 'ecfixed'. In the kinetic energy, G^2 is replaced by G^2 + qcutz * (1 + erf ( (G^2 - ecfixed)/q2sigma) )\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-md',\n  stress calculations,\n  Exchange-correlation functional,\n  variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"tefield\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"tefield\nIf .TRUE. a saw-like potential simulating an electric field is added to the bare ionic potential.\"\nPossible_Usage_Conditions: [\n  Ground state calculations,\n  Relaxation calculations,\n  tefield = .TRUE.,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  True:\n\"A saw-like potential simulating an electric field is added to the bare ionic potential\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\""
        ],
        "qe_generation_template": "&CONTROL calculation, value: relax, value_type: character\n&CONTROL etot_conv_thr, value: 1.0D-4, value_type: real\n&CONTROL forc_conv_thr, value: 1.0D-3, value_type: real\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nr1s, nr2s, nr3s, value: default, value_type: integer\n&SYSTEM nosym_evc, value: False, value_type: logical\n&SYSTEM occupations, value: 'from_input', value_type: character\n&SYSTEM smearing, value: fermi-dirac, value_type: character\n&SYSTEM relaxz, value: False, value_type: logical\n&ELECTRONS scf_must_converge, value: .TRUE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-6, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS ion_temperature, value: not_controlled, value_type: character\n&IONS bfgs_ndim, value: 1, value_type: integer\n&CELL cell_dynamics, value: bfgs, value_type: character\n&CELL cell_factor, value: 2.0, value_type: real\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n",
        "qe_initialization": "&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n",
        "generated_input": "qe_input=QeMatch(qe_input_gen=\"&CONTROL\\n    title = 'test'\\n    calculation = 'relax'\\n    etot_conv_thr = 1.0D-4\\n    forc_conv_thr = 1.0D-3\\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\\n/\\n\\n&SYSTEM\\n    ibrav = 0\\n    nat = 20\\n    ntyp = 2\\n    ecutwfc = 70.0\\n    ecutrho = 560.0\\n    occupations = 'from_input'\\n    smearing = 'fermi-dirac'\\n    relaxz = False\\n/\\n\\n&ELECTRONS\\n    scf_must_converge = .TRUE.\\n    conv_thr = 1.D-6\\n/\\n\\n&IONS\\n    ion_positions = 'from_input'\\n    ion_dynamics = 'bfgs'\\n    ion_temperature = 'not_controlled'\\n    bfgs_ndim = 1\\n/\\n\\n&CELL\\n    cell_dynamics = 'bfgs'\\n    cell_factor = 2.0\\n    cell_dofree = 'ibrav'\\n/\\n\\nATOMIC_SPECIES\\nS      32.065 s_pbe_v1.4.uspp.F.UPF\\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\\n\\nATOMIC_POSITIONS angstrom\\nZn           0.0000000000       0.0000000000       0.7870740021 \\nZn           0.0000000000       0.0000000000      13.3771805123 \\nZn           0.0000000000       0.0000000000      22.8193031568 \\nZn           1.9243404763       1.1110184921       7.0820938485 \\nZn           1.9243404763       1.1110184921      19.6702114764 \\nZn           1.9243404763       1.1110184921      25.9686758562 \\nZn           0.0000000000       2.2220369840       3.9349999808 \\nZn           0.0000000000       2.2220369840      10.2299034291 \\nZn           0.0000000000       2.2220369840      16.5263952087 \\nZn           0.0000000000       2.2220369840      29.1124789374 \\nS            0.0000000000       0.0000000000       3.1491676138 \\nS            0.0000000000       0.0000000000      15.7395716352 \\nS            0.0000000000       0.0000000000      25.1818197098 \\nS            1.9243404763       1.1110184921       9.4440768991 \\nS            1.9243404763       1.1110184921      22.0284556615 \\nS            1.9243404763       1.1110184921      28.3264260423 \\nS            0.0000000000       2.2220369840      -0.0036332542 \\nS            0.0000000000       2.2220369840       6.2919694659 \\nS            0.0000000000       2.2220369840      12.5869302762 \\nS            0.0000000000       2.2220369840      18.8841482186 \\n\\nK_POINTS automatic\\n5 5 5 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n      3.8486809527       0.0000000000       0.0000000000\\n     -1.9243404763       3.3330554761       0.0000000000\\n      0.0000000000       0.0000000000      31.4742971542\\n\")",
        "error_msg": [],
        "log_qe_gen_prompt": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nCreate a Quantum Espresso input file for 'Relaxation calculations\ncalculation = 'relax'\nPAW pseudopotential\nk-mesh\ncutoff\nTS\ntotal energy calculations' calculation of 'Zn10S10' compound, based on the given CONTEXT and DETAILS.\n\n<CONTEXT>\n&CONTROL title = 'test'\n\n&CONTROL calculation, value: relax, value_type: character\n&CONTROL etot_conv_thr, value: 1.0D-4, value_type: real\n&CONTROL forc_conv_thr, value: 1.0D-3, value_type: real\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nr1s, nr2s, nr3s, value: default, value_type: integer\n&SYSTEM nosym_evc, value: False, value_type: logical\n&SYSTEM occupations, value: 'from_input', value_type: character\n&SYSTEM smearing, value: fermi-dirac, value_type: character\n&SYSTEM relaxz, value: False, value_type: logical\n&ELECTRONS scf_must_converge, value: .TRUE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-6, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS ion_temperature, value: not_controlled, value_type: character\n&IONS bfgs_ndim, value: 1, value_type: integer\n&CELL cell_dynamics, value: bfgs, value_type: character\n&CELL cell_factor, value: 2.0, value_type: real\n&SYSTEM ecutwfc = 40.0\n&SYSTEM ecutrho = 320.0\n&SYSTEM ibrav = 0\n&SYSTEM nat = 20\n----------\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n13 13 2 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n\n\n</CONTEXT>\n\n<DETAILS>\nCalculate a geometry relaxation, of ZnS, using a k-mesh of 5x5x5, a cutoff of 70 Ry and PAW pseudopotential, with 'ibrav' 'cell_dofree' constrain. TS should be considered.\n</DETAILS>\n\n<RULES>\n- Write the input file for the given calculation type\n- Set the value of the variables based on the CONTEXT and the DETAILS\n- Use only relevant parameters based on the CONTEXT, DETAILS\n- Each parameter should be under correct namelist\n- Each parameter should have a correct value type such as integer, real, character, or logical\n- The namelists &CONTROL, &SYSTEM, &ELECTRONS, must be in this order exactly\n- The cards ATOMIC_SPECIES, ATOMIC_POSITIONS, K_POINTS, and CELL_PARAMETERS must be present and based on CONTEXT and DETAILS\n- In &CONTROL should have 'pseudo_dir': /home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp and 'outdir':'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir' defined, according to the given CONTEXT\n</RULES>\n\n<OUTPUT>\n- Write the input file\n- Put the code blocks in ```fortran and ```.\n- Review the code to see how the generated code followed the RULES, CONTEXT, and DETAILS, then give some explanation.\n</OUTPUT>\n"
        ],
        "log_qe_input": [
            "&CONTROL\n    title = 'test'\n    calculation = 'relax'\n    etot_conv_thr = 1.0D-4\n    forc_conv_thr = 1.0D-3\n    pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n    outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n/\n\n&SYSTEM\n    ibrav = 0\n    nat = 20\n    ntyp = 2\n    ecutwfc = 70.0\n    ecutrho = 560.0\n    occupations = 'from_input'\n    smearing = 'fermi-dirac'\n    relaxz = False\n/\n\n&ELECTRONS\n    scf_must_converge = .TRUE.\n    conv_thr = 1.D-6\n/\n\n&IONS\n    ion_positions = 'from_input'\n    ion_dynamics = 'bfgs'\n    ion_temperature = 'not_controlled'\n    bfgs_ndim = 1\n/\n\n&CELL\n    cell_dynamics = 'bfgs'\n    cell_factor = 2.0\n    cell_dofree = 'ibrav'\n/\n\nATOMIC_SPECIES\nS      32.065 s_pbe_v1.4.uspp.F.UPF\nZn     65.38 Zn_pbe_v1.uspp.F.UPF\n\nATOMIC_POSITIONS angstrom\nZn           0.0000000000       0.0000000000       0.7870740021 \nZn           0.0000000000       0.0000000000      13.3771805123 \nZn           0.0000000000       0.0000000000      22.8193031568 \nZn           1.9243404763       1.1110184921       7.0820938485 \nZn           1.9243404763       1.1110184921      19.6702114764 \nZn           1.9243404763       1.1110184921      25.9686758562 \nZn           0.0000000000       2.2220369840       3.9349999808 \nZn           0.0000000000       2.2220369840      10.2299034291 \nZn           0.0000000000       2.2220369840      16.5263952087 \nZn           0.0000000000       2.2220369840      29.1124789374 \nS            0.0000000000       0.0000000000       3.1491676138 \nS            0.0000000000       0.0000000000      15.7395716352 \nS            0.0000000000       0.0000000000      25.1818197098 \nS            1.9243404763       1.1110184921       9.4440768991 \nS            1.9243404763       1.1110184921      22.0284556615 \nS            1.9243404763       1.1110184921      28.3264260423 \nS            0.0000000000       2.2220369840      -0.0036332542 \nS            0.0000000000       2.2220369840       6.2919694659 \nS            0.0000000000       2.2220369840      12.5869302762 \nS            0.0000000000       2.2220369840      18.8841482186 \n\nK_POINTS automatic\n5 5 5 0 0 0\n\nCELL_PARAMETERS angstrom\n      3.8486809527       0.0000000000       0.0000000000\n     -1.9243404763       3.3330554761       0.0000000000\n      0.0000000000       0.0000000000      31.4742971542\n"
        ],
        "log_qe_solution": [],
        "rest_formula_data": {
            "formula": "Zn10S10",
            "k_points_2d": "None",
            "uuid": "89e3418d-773c-4739-9c9e-9a35e8c1ec0f",
            "ase_atom_object": "Atoms(symbols='Zn10S10', pbc=True, cell=[[3.8486809527, 0.0, 0.0], [-1.9243404763, 3.3330554761, 0.0], [0.0, 0.0, 31.4742971542]])",
            "indx": "None"
        },
        "workflow_log": [
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Interface agent",
                    "start_time": "2025-02-10 07:47:42"
                },
                "timestamp": "2025-02-10 07:47:42.019452",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:47:42",
                    "end_time": "2025-02-10 07:47:43",
                    "message": "Interface agent"
                },
                "timestamp": "2025-02-10 07:47:43.632838",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "3D structure generation",
                    "start_time": "2025-02-10 07:47:43"
                },
                "timestamp": "2025-02-10 07:47:43.632907",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:47:43",
                    "end_time": "2025-02-10 07:47:45",
                    "message": "3D structure generation"
                },
                "timestamp": "2025-02-10 07:47:45.884776",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Starting Quantum Espresso documentation collection",
                    "start_time": "2025-02-10 07:47:45"
                },
                "timestamp": "2025-02-10 07:47:45.884840",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:47:45",
                    "end_time": "2025-02-10 07:47:48",
                    "message": "Quantum Espresso documentation collection"
                },
                "timestamp": "2025-02-10 07:47:48.326877",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso condition extraction",
                    "start_time": "2025-02-10 07:47:48"
                },
                "timestamp": "2025-02-10 07:47:48.326919",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:47:48",
                    "end_time": "2025-02-10 07:48:26",
                    "message": "Quantum Espresso condition extraction"
                },
                "timestamp": "2025-02-10 07:48:26.835161",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Parameter graph generation",
                    "start_time": "2025-02-10 07:48:26"
                },
                "timestamp": "2025-02-10 07:48:26.835253",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:48:26",
                    "end_time": "2025-02-10 07:48:26",
                    "message": "Parameter graph generation"
                },
                "timestamp": "2025-02-10 07:48:26.839581",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Documentation collection for trimmed parameters",
                    "start_time": "2025-02-10 07:48:26"
                },
                "timestamp": "2025-02-10 07:48:26.839644",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:48:26",
                    "end_time": "2025-02-10 07:48:26",
                    "message": "Documentation collection for trimmed parameters"
                },
                "timestamp": "2025-02-10 07:48:26.840883",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input parameter evaluation",
                    "start_time": "2025-02-10 07:48:26"
                },
                "timestamp": "2025-02-10 07:48:26.840945",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:48:26",
                    "end_time": "2025-02-10 07:49:36",
                    "message": "Quantum Espresso input parameter evaluation"
                },
                "timestamp": "2025-02-10 07:49:36.856014",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation template",
                    "start_time": "2025-02-10 07:49:36"
                },
                "timestamp": "2025-02-10 07:49:36.856138",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:49:36",
                    "end_time": "2025-02-10 07:49:36",
                    "message": "Quantum Espresso input generation template"
                },
                "timestamp": "2025-02-10 07:49:36.861701",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation",
                    "start_time": "2025-02-10 07:49:36"
                },
                "timestamp": "2025-02-10 07:49:36.861767",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:49:36",
                    "end_time": "2025-02-10 07:49:54",
                    "message": "Quantum Espresso input generation"
                },
                "timestamp": "2025-02-10 07:49:54.938296",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso is initializing",
                    "start_time": "2025-02-10 07:49:54"
                },
                "timestamp": "2025-02-10 07:49:54.938400",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-10 07:49:54",
                    "end_time": "2025-02-10 07:49:56",
                    "message": "Quantum Espresso calculation completed successfully"
                },
                "timestamp": "2025-02-10 07:49:56.234785",
                "level": "INFO"
            }
        ],
        "workflow_state": "FINISHED"
    }
]
[
    {
        "project_signature": "test",
        "calculation_description": "Calculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
        "analysis_dict": {
            "description": "Calculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.",
            "formula": "TiCl2",
            "database": "mc2d"
        },
        "get_conditions_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCalculation_types\n- Berry phase calculations\n- Constant bias potential calculations\n- DOS calculations\n- Dynamical Mean Field Theory\n- Dynamics calculations\n- ESM calculations\n- FCP calculations\n- GC-SCF calculations\n- Ground state calculations\n- HP code calculations\n- LDA+U calculations\n- Linear-response calculations\n- Relaxation calculations\n- Two-chemical-potential calculations\n- calculation = 'bands'\n- calculation = 'md'\n- calculation = 'nscf'\n- calculation = 'relax'\n- calculation = 'scf'\n- calculation = 'vc-md'\n- calculation = 'vc-relax'\n- charge density calculations\n- dispersion correction calculations\n- stress calculations\n- total energy calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nFunctional_and_method_types\n- BEEF-type functionals\n- Conjugate gradient diagonalization\n- Davidson diagonalization\n- PPCG diagonalization\n- Paro diagonalization\n- RMM-DIIS diagonalization\n- DFT-D calculations\n- DFT-D2 calculations\n- DFT-D3 calculations\n- Exact exchange calculations\n- Exchange-correlation functional\n- Exchange-hole dipole-moment model\n- Gradient-corrected functionals\n- Hybrid functional calculations\n- Hybrid functionals with exact exchange\n- Many-body dispersion (MBD) corrections\n- Parrinello-Rahman MD\n- Scissor operator corrections\n- Tkatchenko-Scheffler dispersion corrections\n- Wentzcovitch MD\n- functional is NOT one of: B86bPBE, PW86PBE, PBE, BLYP\n- gammaDFT calculations\n- input_dft='PBE0', 'B3LYP'\n- ion_dynamics = 'bfgs'\n- ion_dynamics = 'fire'\n- ion_dynamics = 'verlet'\n- ion_dynamics = 'damp'\n- long-range interactions\n- Non-collinear calculations\n- spin-orbit calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nCell_and_material_properties\n- 2D periodic systems in x-y plane\n- Anisotropic supercells\n- Bravais lattice structure (values 0 to 14)\n- Correlated orbitals\n- Cubic supercells\n- DOS of materials\n- Fixed cell calculations\n- Framework/porous systems\n- Hard FFT grid\n- High symmetry systems\n- Insulating systems\n- Low-symmetry large cells\n- Materials like graphite\n- Materials with long-range interaction\n- Metallic systems\n- Monoclinic systems\n- Non-periodic systems\n- Periodic systems\n- Quasi-cubic supercells\n- Rare Earth Elements\n- Semiconductor systems\n- Slab systems\n- Smooth FFT grid\n- Strongly correlated electrons\n- Transition Metals\n- Variable cell calculations\n- charged cells\n- homogeneous systems\n- ibrav = -12\n- ibrav = -13\n- ibrav-defined crystal structure\n- ibrav = 5\n- ibrav = 0\n- inhomogeneous systems\n- non-symmorphic symmetry operations\n- periodic cell with defined z-direction\n- rhombohedral space group\n- single atom/isolated systems\n- symmetry-defined crystal structure\n- variable cell calculations\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nPseudopotential_types\n- PAW sets\n- Pseudopotentials with Hubbard occupation\n- Relativistic pseudopotentials\n- UPF pseudopotentials\n- Ultrasoft pseudopotentials\n- nonlocal pseudopotentials\n- norm-conserving pseudopotentials\n- pseudopotential tables\n- pseudopotentials with spin-orbit coupling\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nMagnetism_and_Spin_conditions\n- Collinear magnetic calculations (LSDA)\n- Collinear spin\n- Constrained magnetization\n- Initial magnetization\n- Magnetic systems\n- Non-collinear magnetic calculations\n- Spin-orbit coupling\n- Spin-polarized calculations\n- lspinorb = .True.\n- nspin = 1\n- nspin = 2\n- starting_magnetization=0.0\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nIsolated_systems_and_boundary_conditions\n- Dielectric environment\n- Isolated (non-periodic) systems\n- Laue boundary conditions\n- Laue-RISM calculations\n- Systems using Reference Interaction Site Model (RISM)\n- Systems with solvent regions\n- Systems with solvent-solute interactions\n- assume_isolated must be set to 'esm'\n- charged slabs\n- constant chemical potential conditions\n- electrode boundaries\n- laue_wall != 'none'\n- vacuum boundaries\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nk_point_settings\n- Automatic k-points\n- Monkhorst-Pack grid\n- Non-automatic k-points\n- Single k-point\n- Uniform k-point grid\n- custom k-points\n- full BZ coverage\n- nosym k-points\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nElectric_field_conditions\n- 0 < emaxpos < 1\n- Kubo terms\n- System with electric field\n- block = .TRUE.\n- dielectrically consistent RISM (DRISM)\n- dipfield = .TRUE.\n- gate = .TRUE.\n- lelfield = .TRUE.\n- lfcp = .TRUE.\n- optional electric field\n- tefield = .TRUE.\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nAnalyze the given calculation description and tag list to extract and categorize relevant information.\n\n<CALCULATION_DESCRIPTION>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</CALCULATION_DESCRIPTION>\n\n<TAGS>\nOccupation_types\n- Fixed occupations\n- Smearing method\n- Grand canonical ensemble\n- Linear tetrahedron method\n- Optimized tetrahedron method\n- DFT+U Hubbard correction\n- DFT+U+V Hubbard correction\n- DFT+U+J Hubbard correction\n- Systems with empty states\n- Tetrahedron method (Bloechl's version)\n- occupations = 'from_input'\n- occupations = 'smearing'\n- partial occupations\n- valence and conduction manifolds\n</TAGS>\n\n<RULES>\n- Extract only information explicitly mentioned in the documentation. Look for specific keywords, parameters, and context clues.\n- Tags must be Quantum ESPRESSO specific parameters or keywords. Use the provided list of known tags as a reference.\n- Determine tag relevance based on direct applicability to the calculation description. Consider the context and purpose of the calculation.\n- Irrelevant tags are those that don't apply to the current calculation type or context.\n- Final comments should focus on potential issues, common pitfalls, or important considerations related to the calculation.\n- Ensure all extracted information maintains technical accuracy and relevance.\n\n<OUTPUT_FORMAT>\nCreate a Python dictionary named 'extracted_info' with these keys and descriptions:\n   - Calculation_description (str, description of the calculation)\n   - Relevant_tags (list[str], relevant tags for the calculation)\n   - Irrelevant_tags (list[str], tags that are not relevant for the calculation)\n   - Final_comments (str, final comments)\n\nPlace the dictionary between ```python and ``` markers. \n</OUTPUT_FORMAT>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "condition_tables": "                                       Item  ...                                     Final_comments\n0                         Calculation_types  ...  The calculation is set up to perform a relaxat...\n1               Functional_and_method_types  ...  The calculation uses a pseudopotential and a p...\n2              Cell_and_material_properties  ...  The calculation is set up to relax the structu...\n3                     Pseudopotential_types  ...  The calculation uses a pseudopotential, but th...\n4             Magnetism_and_Spin_conditions  ...  The calculation description does not explicitl...\n5  Isolated_systems_and_boundary_conditions  ...  The calculation is a relaxation of a TiCl2 mon...\n6                          k_point_settings  ...  The calculation uses a pseudopotential and a p...\n7                 Electric_field_conditions  ...  The provided tags seem to be related to electr...\n8                          Occupation_types  ...  The calculation uses a smearing method for the...\n\n[9 rows x 4 columns]",
        "relevant_conditions": [
            "High symmetry systems",
            "long-range interactions",
            "Transition Metals",
            "assume_isolated must be set to 'esm'",
            "Pseudopotential_types",
            "Ground state calculations",
            "norm-conserving pseudopotentials",
            "Bravais lattice structure (values 0 to 14)",
            "Exchange-correlation functional",
            "Fixed cell calculations",
            "nspin = 2",
            "Relaxation calculations",
            "Stress calculations",
            "ion_dynamics = 'verlet'",
            "input_dft='PBE0', 'B3LYP'",
            "Slab systems",
            "periodic cell with defined z-direction",
            "Monkhorst-Pack grid",
            "Isolated_systems_and_boundary_conditions",
            "UPF pseudopotentials",
            "Monoclinic systems",
            "Variable cell calculations",
            "full BZ coverage",
            "2D periodic systems in x-y plane",
            "calculation = 'relax'",
            "Insulating systems",
            "ion_dynamics = 'bfgs'",
            "Anisotropic supercells",
            "Periodic systems",
            "k_point_settings",
            "nspin = 1",
            "occupations = 'smearing'",
            "Total energy calculations",
            "Materials like graphite",
            "Smearing method",
            "vacuum boundaries",
            "Ultrasoft pseudopotentials"
        ],
        "parameter_evaluation_prompts": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_velocity\"\nDefault_Values:\n{\n  default:\n\"determined by fcp_temperature\"\n}\nDescription:\n\"fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"gcscf_beta\"\nDefault_Values:\n{\n  default:\n\"0.05D0\"\n}\nDescription:\n\"gcscf_beta\nMixing factor for GC-SCF.\"\nPossible_Usage_Conditions: [\n  GC-SCF calculations,\n  DOS of materials,\n  Materials like graphite,\n  Grand canonical ensemble,\n]\nUsage_Conditions:\n\"Larger values are recommended if systems with small DOS on Fermi surface as graphite.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"cell_dynamics\"\nDefault_Values:\n{\n  default: None\n  vc-relax:\n\"bfgs\"\n}\nDescription:\n\"cell_dynamics\nSpecify the type of dynamics for the cell.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions:\n{\n  none:\n\"no dynamics (both vc-relax and vc-md)\"\n  damp-pr:\n\"damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)\"\n  damp-w:\n\"damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)\"\n  bfgs:\n\"BFGS quasi-newton algorithm (vc-relax)\"\n  pr:\n\"(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)\"\n  w:\n\"(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)\"\n}\nFinal_comments: None\nNamelist:\n\"&CELL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_tolp\"\nDefault_Values:\n{\n  default:\n\"reads from tolp\"\n}\nDescription:\n\"fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nCard_Name:\n\"CONSTRAINTS\"\nNamelist:\n\"Card: CONSTRAINTS\"\nDescription:\n\"Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\"\nFinal_comments: None\nPossible_Usage_Conditions: [\n  ion_dynamics = 'verlet',\n  ion_dynamics = 'damp',\n]\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"esm_bc\"\nDefault_Values:\n{\n  default:\n\"pbc\"\n}\nDescription:\n\"esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.\"\nPossible_Usage_Conditions: [\n  ESM calculations,\n  Slab systems,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"Used when assume_isolated = 'esm'\"\nParameter_Value_Conditions:\n{\n  pbc:\n\"regular periodic calculation (no ESM)\"\n  bc1:\n\"Vacuum-slab-vacuum (open boundary conditions)\"\n  bc2:\n\"Metal-slab-metal (dual electrode configuration)\"\n  bc3:\n\"Vacuum-slab-metal\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"pot_extrapolation\"\nDefault_Values:\n{\n  default:\n\"atomic\"\n}\nDescription:\n\"pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  atomic:\n\"extrapolate the potential as if it was a sum of atomic-like orbitals\"\n  first_order:\n\"extrapolate the potential with first-order formula\"\n  second_order:\n\"extrapolate the potential with second order formula\"\n}\nFinal_comments:\n\"'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations\"\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tolp\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"lorbm\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lorbm\nIf .TRUE. perform orbital magnetization calculation.\"\nPossible_Usage_Conditions: [\n  calculation = 'nscf',\n  norm-conserving pseudopotentials,\n  Uniform k-point grid,\n  Kubo terms,\n]\nUsage_Conditions:\n\"Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed.\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_tempw\"\nDefault_Values:\n{\n  default:\n\"reads from tempw\"\n}\nDescription:\n\"fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"tempw\"\nDefault_Values:\n{\n  default:\n\"300.D0\"\n}\nDescription:\n\"tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_ndiis\"\nDefault_Values:\n{\n  default:\n4\n}\nDescription:\n\"fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nbnd\"\nDefault_Values:\n{\n  insulator:\n\"number of valence bands (number_of_electrons/2)\"\n  metal:\n\"(number of valence bands)*1.2\"\n}\nDescription:\n\"nbnd\nNumber of electronic states (bands) to be calculated.\"\nPossible_Usage_Conditions: [\n  Insulating systems,\n  Metallic systems,\n  Spin-polarized calculations,\n]\nUsage_Conditions:\n\"Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_dtmax\"\nDefault_Values:\n{\n  default:\n\"10.D0\"\n}\nDescription:\n\"fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_mass\"\nDefault_Values:\n{\n  default: None\n  ESM:\n\"5.D+6 / (xy area)\"\n  ESM-RISM:\n\"5.D+4 / (xy area)\"\n}\nDescription:\n\"fcp_mass\nMass of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nraise\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  nraise*dt:\n\"when ion_temperature = 'berendsen' or 'svr'\"\n  1/nraise:\n\"when ion_temperature = 'andersen'\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-2\"\n}\nDescription:\n\"fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n",
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nFor the following project and the assigned tags, select the appropriate value for the parameter:\n<Project>\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</Project>\n\n<Conditions>\nHigh symmetry systems\nlong-range interactions\nTransition Metals\nassume_isolated must be set to 'esm'\nPseudopotential_types\nGround state calculations\nnorm-conserving pseudopotentials\nBravais lattice structure (values 0 to 14)\nExchange-correlation functional\nFixed cell calculations\nnspin = 2\nRelaxation calculations\nStress calculations\nion_dynamics = 'verlet'\ninput_dft='PBE0', 'B3LYP'\nSlab systems\nperiodic cell with defined z-direction\nMonkhorst-Pack grid\nIsolated_systems_and_boundary_conditions\nUPF pseudopotentials\nMonoclinic systems\nVariable cell calculations\nfull BZ coverage\n2D periodic systems in x-y plane\ncalculation = 'relax'\nInsulating systems\nion_dynamics = 'bfgs'\nAnisotropic supercells\nPeriodic systems\nk_point_settings\nnspin = 1\noccupations = 'smearing'\nTotal energy calculations\nMaterials like graphite\nSmearing method\nvacuum boundaries\nUltrasoft pseudopotentials\n</Conditions>\n\n<Parameter>\nParameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"\n</Parameter>\n\n<RULES>\n- The type of calculation is important and they are two types. Singlestep: 'scf', 'nscf', 'bands', and Multistep: 'relax', 'vc-relax', 'md', 'vc-md'.\n- The tags must be relevant to the calculation type.\n- Do not assume any additional information beyond the provided project and tags.\n\n</RULES>\n\n<Ouput>\n- First discuss the relation between the parameter and the project, using most recent research and documentation.\n- Determine if the parameter is relevant to the project.\n- If the parameter is relevant, select the appropriate value from the list below.\n- Create one python dictionary called 'parameter_value' with the parameter's name as the key (str) and the value as the value of the parameter (str).\n- If the parameter is not relevant, set the value to None.\n- Put the dictionary between ```python and ```.\n</Output>\n\nMake sure to follow the rules and provide the output in the specified format.\n"
        ],
        "parameters_collection": [
            {
                "calculation": "scf"
            },
            {
                "tprnfor": ".TRUE."
            },
            {
                "ntyp": "2"
            },
            {
                "nbnd": "11"
            },
            {
                "nosym_evc": "False"
            },
            {
                "occupations": "fixed"
            },
            {
                "degauss": "0.02"
            },
            {
                "smearing": "marzari-vanderbilt"
            },
            {
                "esm_bc": "bc1"
            },
            {
                "scf_must_converge": ".FALSE."
            },
            {
                "conv_thr": "1.D-8"
            },
            {
                "mixing_mode": "TF"
            },
            {
                "mixing_beta": "0.4D0"
            },
            {
                "ion_positions": "from_input"
            },
            {
                "ion_dynamics": "bfgs"
            },
            {
                "pot_extrapolation": "atomic"
            },
            {
                "wfc_extrapolation": "second_order"
            },
            {
                "ion_temperature": "andersen"
            },
            {
                "nraise": "1"
            },
            {
                "refold_pos": "True"
            },
            {
                "upscale": "100.D0"
            },
            {
                "bfgs_ndim": "1"
            },
            {
                "trust_radius_max": "1.2D0"
            },
            {
                "trust_radius_min": "1.D-4"
            },
            {
                "trust_radius_ini": "0.1D0"
            },
            {
                "w_1": "0.01D0"
            },
            {
                "fire_nmin": "10"
            },
            {
                "fire_dtmax": "5.0"
            },
            {
                "cell_dynamics": "bfgs"
            }
        ],
        "evaluated_parameters": [
            "Based on the provided project and tags, let's analyze the parameter \"fcp_velocity\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_velocity\" is related to the Fictitious Charge Particle (FCP) method, which is used in Car-Parrinello molecular dynamics (CPMD) simulations. However, the project does not specify a CPMD simulation, and the calculation type is 'relax', which is not a CPMD simulation.\n\nMoreover, the project does not specify the use of the FCP method, and the tag \"lfcp = .TRUE.\" is not present in the input file. Therefore, the parameter \"fcp_velocity\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_velocity\": None\n}\n```\n\nIn conclusion, the parameter \"fcp_velocity\" is not relevant to this project, and its value is set to None.",
            "Based on the provided project and tags, let's analyze the parameter \"gcscf_beta\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The system is a slab with a defined z-direction, and the calculation is a relaxation calculation with a fixed cell.\n\nThe parameter \"gcscf_beta\" is related to GC-SCF (Grand Canonical Self-Consistent Field) calculations, which is not the type of calculation specified in the project (relaxation calculation). GC-SCF is typically used for calculations involving the grand canonical ensemble, which is not relevant to this project.\n\nHowever, the project does involve a material like graphite (TiCl2), which is mentioned in the possible usage conditions for \"gcscf_beta\". But, since the calculation type is not GC-SCF, this parameter is not directly relevant to the project.\n\nAccording to the rules, we should not assume any additional information beyond the provided project and tags. Therefore, we cannot consider the material type as a sufficient condition to make the parameter relevant.\n\nIn conclusion, the parameter \"gcscf_beta\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"gcscf_beta\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"ion_positions\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"ion_positions\" controls how atomic positions are determined, either from the restart file or the standard input. According to the rules, the type of calculation is important, and 'relax' is a multistep calculation.\n\nIn the context of a 'relax' calculation, the atomic positions are optimized during the calculation. Therefore, it is more appropriate to use the atomic positions from the standard input as the initial guess, rather than relying on a restart file.\n\nConsidering the project and the tags, the parameter \"ion_positions\" is relevant to the project.\n\n```python\nparameter_value = {\n    \"ion_positions\": \"from_input\"\n}\n```\n\nThis value ensures that the atomic positions are read from the standard input, even if a restart file is present, which is suitable for a 'relax' calculation.",
            "Based on the provided project and tags, let's analyze the parameter \"cell_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system. The calculation type is 'relax', which is a multistep calculation. The tags indicate that this is a variable cell calculation, as evidenced by the presence of \"Variable cell calculations\" and \"calculation = 'relax'\".\n\nThe parameter \"cell_dynamics\" is relevant to this project because it is used to specify the type of dynamics for the cell in variable cell calculations. According to the Quantum ESPRESSO documentation, the \"cell_dynamics\" parameter is used to control the dynamics of the cell during a variable cell relaxation.\n\nGiven the calculation type and the tags, the appropriate value for \"cell_dynamics\" is \"bfgs\", which is the default value for 'vc-relax' calculations. This value is suitable for this project because it uses the BFGS quasi-newton algorithm to optimize the cell parameters during the relaxation.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"cell_dynamics\": \"bfgs\"\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"degauss\" and the project.\n\nThe parameter \"degauss\" is related to the Brillouin-zone integration in metals, specifically for calculations involving metallic systems, partial occupations, or smearing occupations. In the provided project, we have a transition metal (Ti) and a high-symmetry system, which might suggest the presence of metallic behavior. However, the project also specifies \"nspin = 2\", which is typically used for non-magnetic or antiferromagnetic systems, and \"input_dft = 'PBE0'\", which is a hybrid functional that can be used for a wide range of systems, including insulators.\n\nThe project is a relaxation calculation (\"calculation = 'relax'\"), which is a multistep calculation. The \"degauss\" parameter is typically used in single-step calculations, such as \"scf\" or \"bands\". However, it's worth noting that the \"degauss\" parameter can be used in relaxation calculations if the system is metallic and requires a smearing method for the occupations.\n\nGiven the provided tags and project, it's not clear if the system is metallic or not. However, since the project involves a transition metal and a high-symmetry system, it's possible that the system might exhibit some metallic behavior. Therefore, we will select a value for the \"degauss\" parameter.\n\nA common value for the \"degauss\" parameter is around 0.01-0.05 Ry. Let's select a value of 0.02 Ry, which is a reasonable choice for many systems.\n\n```python\nparameter_value = {\n    \"degauss\": \"0.02\"\n}\n```\n\nNote that this value might need to be adjusted depending on the specific system and the desired level of accuracy.",
            "Based on the provided project and tags, let's analyze the parameter \"nr1s, nr2s, nr3s\".\n\nThe parameter \"nr1s, nr2s, nr3s\" is related to the three-dimensional mesh for wavefunction FFT and for the smooth part of charge density (smooth grid). According to the Quantum ESPRESSO documentation, this parameter is used to define the grid size for the smooth part of the charge density and the wavefunction FFT.\n\nIn the provided project, we can see that the calculation type is 'relax', which is a multistep calculation. The tags also mention \"Ultrasoft pseudopotentials\", which is one of the possible usage conditions for this parameter.\n\nHowever, the project also mentions \"UPF pseudopotentials\", which is a different type of pseudopotential. UPF pseudopotentials are norm-conserving pseudopotentials, whereas ultrasoft pseudopotentials are a different type of pseudopotential that requires a different treatment of the charge density and wavefunction FFT grid.\n\nGiven the presence of UPF pseudopotentials in the project, it is likely that the \"nr1s, nr2s, nr3s\" parameter is not relevant to this specific project. Therefore, I will set the value to None.\n\n```python\nparameter_value = {\n    \"nr1s, nr2s, nr3s\": None\n}\n```",
            "**Relation between the parameter and the project:**\n\nThe parameter \"calculation\" is a crucial input in Quantum ESPRESSO, as it determines the type of calculation to be performed. In the provided project, the system is a periodic, anisotropic supercell with a monoclinic structure, containing transition metals and using ultrasoft pseudopotentials. The project also involves a fixed cell calculation with a Monkhorst-Pack grid for k-point sampling.\n\nGiven the presence of transition metals and the use of ultrasoft pseudopotentials, a ground-state calculation is likely necessary to obtain accurate results. The project's focus on the electronic structure and the use of a fixed cell suggest that a single-step calculation is sufficient.\n\n**Relevance of the parameter:**\n\nThe \"calculation\" parameter is highly relevant to this project, as it determines the type of calculation to be performed.\n\n**Selected value:**\n\nBased on the project's characteristics, the most suitable value for the \"calculation\" parameter is \"scf\" (self-consistent field), which is a standard calculation for ground-state properties.\n\n**Python dictionary:**\n\n```python\nparameter_value = {\n    \"calculation\": \"scf\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"assume_isolated\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system with a monoclinic structure. The tags indicate that this is a periodic system with a defined z-direction, and the calculation is a relaxation calculation with a fixed cell.\n\nThe parameter \"assume_isolated\" is used to perform calculations assuming the system is isolated, such as a molecule or a cluster in a 3D supercell. However, the project is a periodic system, and the tags indicate that it is not an isolated system.\n\nAccording to the documentation, the \"assume_isolated\" parameter is not relevant for periodic systems. The \"esm\" option is mentioned in the tags, but it is not applicable in this case since the system is not a slab with a cell having a_3 lattice vector along z, normal to the xy plane.\n\nTherefore, the parameter \"assume_isolated\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"assume_isolated\": None\n}\n```\n\nNote that the value is set to None, indicating that the parameter is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"refold_pos\".\n\nThe project is a relaxation calculation (calculation = 'relax') of a TiCl2 system with a monoclinic structure. The tags indicate that this is a periodic system with a defined z-direction, and the calculation involves a Monkhorst-Pack grid for k-point sampling.\n\nThe parameter \"refold_pos\" is relevant to the project because it is used in relaxation calculations (calculation = 'relax') to refold the ions into the supercell at each step. This is important in periodic systems to ensure that the ions remain within the simulation cell during the relaxation process.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"refold_pos\" is False. However, in this case, it is recommended to set \"refold_pos\" to True to ensure that the ions are properly refolded into the supercell during the relaxation calculation.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"refold_pos\": \"True\"\n}\n```\n\nNote that the value is set to \"True\" as a string, as required by the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_alpha_init\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fire_alpha_init\" is related to the FIRE minimization scheme, which is used in relaxation calculations. According to the documentation, \"fire_alpha_init\" is the initial value of the alpha mixing factor in the FIRE minimization scheme.\n\nThe tags indicate that the calculation is a relaxation calculation (calculation = 'relax') and the ion dynamics is set to 'verlet', but not 'fire'. However, the parameter \"fire_alpha_init\" is only relevant when ion_dynamics = 'fire'. Since this condition is not met, the parameter is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fire_alpha_init\": None\n}\n```\n\nNote that the parameter is not relevant to the project, so the value is set to None.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_f_dec\".\n\nThe parameter \"fire_f_dec\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It is a factor for decreasing the time step \"dt\" in the FIRE algorithm.\n\nIn the provided project, the calculation type is \"relax\" (as specified in the tag \"calculation = 'relax'\"), and the ion dynamics algorithm is \"verlet\" (as specified in the tag \"ion_dynamics = 'verlet'\"). However, the \"fire_f_dec\" parameter is only relevant when the ion dynamics algorithm is \"fire\", not \"verlet\".\n\nAccording to the rules, since the ion dynamics algorithm is not \"fire\", the parameter \"fire_f_dec\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fire_f_dec\": None\n}\n```\n\nTherefore, the value of the parameter \"fire_f_dec\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_tolp\".\n\nThe parameter \"fcp_tolp\" is related to the FCP (Fermi-Dirac smearing) method, which is used to control the temperature in molecular dynamics (MD) simulations. The parameter \"fcp_tolp\" is a tolerance value for velocity rescaling, which is used to adjust the velocities of the atoms to maintain a target temperature.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The tags also mention \"ion_dynamics = 'verlet'\", which is a type of molecular dynamics simulation. Additionally, the tags mention \"occupations = 'smearing'\", which indicates that the FCP method is being used.\n\nHowever, the tags do not explicitly mention \"lfcp = .TRUE.\", which is a required condition for the \"fcp_tolp\" parameter to be relevant. Therefore, based on the provided information, the parameter \"fcp_tolp\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_tolp\": None\n}\n```\n\nNote that if the tag \"lfcp = .TRUE.\" were present, we would need to consider the default value of \"fcp_tolp\" which is \"reads from tolp\", and possibly adjust it based on the specific requirements of the simulation.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_f_inc\".\n\nThe parameter \"fire_f_inc\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It is a factor for increasing the time step \"dt\" during the simulation.\n\nIn the provided project, the calculation type is \"relax\" (as specified in the tag \"calculation = 'relax'\"), and the ion dynamics algorithm is \"verlet\" (as specified in the tag \"ion_dynamics = 'verlet'\"). However, the \"fire\" algorithm is not used in this project.\n\nAccording to the rules, the parameter \"fire_f_inc\" is only relevant when the calculation type is \"relax\", \"md\", \"vc-relax\", or \"vc-md\" and the ion dynamics algorithm is \"fire\". Since the ion dynamics algorithm used in this project is \"verlet\", not \"fire\", the parameter \"fire_f_inc\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fire_f_inc\": None\n}\n```\n\nTherefore, the value of the parameter \"fire_f_inc\" is set to None, indicating that it is not relevant to the provided project.",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"CONSTRAINTS\" and the project.\n\nThe project is a quantum chemistry calculation using Quantum ESPRESSO, and the tags indicate that it is a relaxation calculation (calculation = 'relax') with ion dynamics set to 'verlet' (ion_dynamics = 'verlet'). The CONSTRAINTS parameter is used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes.\n\nHowever, in this case, the CONSTRAINTS parameter is not relevant to the project because the calculation type is 'relax', which is a multistep calculation that involves both electronic and ionic relaxation. The CONSTRAINTS parameter is typically used in molecular dynamics simulations or constrained optimization processes, which is not the case here.\n\nTherefore, the CONSTRAINTS parameter is not relevant to this project.\n\n```python\nparameter_value = {\n    \"CONSTRAINTS\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fire_nmin\".\n\nThe parameter \"fire_nmin\" is related to the \"fire\" algorithm used in the ion dynamics, which is a method for optimizing the ionic positions in the system. The \"fire\" algorithm is used in relaxation and molecular dynamics calculations.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The \"fire\" algorithm is used in the ion dynamics, as indicated by the tag \"ion_dynamics = 'verlet'\". However, the \"fire\" algorithm is not explicitly mentioned in the project. Nevertheless, the \"verlet\" algorithm is often used in conjunction with the \"fire\" algorithm.\n\nAccording to the Quantum ESPRESSO documentation, the \"fire_nmin\" parameter is relevant when the \"fire\" algorithm is used in the ion dynamics. Since the project uses the \"verlet\" algorithm, which is often used with the \"fire\" algorithm, we can assume that the \"fire_nmin\" parameter is relevant to the project.\n\nThe default value of \"fire_nmin\" is 5, which is a reasonable value for many systems. However, the optimal value of \"fire_nmin\" can depend on the specific system and the desired level of convergence.\n\nBased on the provided project and tags, we can select a value for the \"fire_nmin\" parameter. Since the system is a transition metal oxide with a relatively simple structure, a moderate value of \"fire_nmin\" should be sufficient.\n\n```python\nparameter_value = {\n    \"fire_nmin\": \"10\"\n}\n```\n\nNote that the selected value of \"fire_nmin\" is 10, which is slightly higher than the default value. This value should provide a good balance between convergence and computational efficiency for the given system.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"mixing_mode\" and the project.\n\nThe project involves a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional, which is a hybrid functional that includes a portion of exact exchange. The system is a slab system with a periodic cell in the x-y plane and a vacuum boundary in the z-direction. The calculation is a relaxation calculation with a fixed cell, and the pseudopotentials used are ultrasoft pseudopotentials.\n\nThe \"mixing_mode\" parameter controls the type of charge density mixing method used in the self-consistent field (SCF) loop. The default value is \"plain\", which corresponds to charge density Broyden mixing.\n\nConsidering the project's characteristics, the \"mixing_mode\" parameter is relevant to the project. The system is a slab system with a vacuum boundary, which can be considered an inhomogeneous system. However, the use of ultrasoft pseudopotentials and the PBE0 functional suggests that the system is not highly inhomogeneous.\n\nGiven the conditions, the most suitable value for the \"mixing_mode\" parameter is \"TF\", which corresponds to charge density Broyden mixing with simple Thomas-Fermi screening. This method is suitable for systems with a moderate degree of inhomogeneity.\n\n```python\nparameter_value = {\n    \"mixing_mode\": \"TF\"\n}\n```\n\nNote that the \"local-TF\" option is not recommended in this case, as it is more suitable for highly inhomogeneous systems, which is not the case here. The \"plain\" option is also not the best choice, as it does not include any screening, which can lead to slower convergence.",
            "Based on the provided project and tags, let's analyze the parameter \"upscale\".\n\nThe parameter \"upscale\" is related to the convergence threshold during structural optimization. According to the Quantum ESPRESSO documentation, \"upscale\" is a parameter that controls the maximum reduction factor for the convergence threshold (\"conv_thr\") during structural optimization. This parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md', and the ion dynamics is set to 'bfgs'.\n\nIn the provided project, the calculation type is 'relax' (as indicated by the tag \"calculation = 'relax'\"), and the ion dynamics is set to 'bfgs' (as indicated by the tag \"ion_dynamics = 'bfgs'\"). Therefore, the parameter \"upscale\" is relevant to this project.\n\nThe default value of \"upscale\" is \"100.D0\", but since the project involves a transition metal (Ti) and a high-symmetry system, it is recommended to use a more conservative value to ensure convergence. A commonly used value for \"upscale\" in such cases is \"200.D0\" or \"300.D0\". However, since there is no specific guidance in the provided tags, we will stick with the default value.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"upscale\": \"100.D0\"\n}\n```\n\nNote that the value is a string, as specified in the output format.",
            "Based on the provided project and tags, let's analyze the parameter \"esm_bc\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 slab system. The system is periodic in the x-y plane and has a vacuum boundary in the z-direction. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"esm_bc\" is related to the boundary conditions used for the slab system when assume_isolated = 'esm'. Since the project has a vacuum boundary in the z-direction, it can be considered an isolated system.\n\nAccording to the documentation, \"esm_bc\" is used when assume_isolated = 'esm', which is not explicitly set in the project. However, the presence of a vacuum boundary and the use of ultrasoft pseudopotentials (UPF) suggest that the system is indeed isolated.\n\nGiven the project's characteristics, the most suitable value for \"esm_bc\" would be \"bc1\", which corresponds to \"Vacuum-slab-vacuum (open boundary conditions)\".\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"esm_bc\": \"bc1\"\n}\n```\n\nNote that if the project had a different calculation type or system characteristics, the value of \"esm_bc\" might be different or even irrelevant.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"pot_extrapolation\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"pot_extrapolation\" parameter is relevant to the project because it is used to extrapolate the potential from preceding ionic steps, which is important for relaxation calculations.\n\nAccording to the documentation, the possible values for \"pot_extrapolation\" are:\n\n* none: no extrapolation\n* atomic: extrapolate the potential as if it was a sum of atomic-like orbitals\n* first_order: extrapolate the potential with first-order formula (only for molecular dynamics calculations)\n* second_order: extrapolate the potential with second-order formula (only for molecular dynamics calculations)\n\nSince the calculation type is 'relax' and not 'md', the 'first_order' and 'second_order' options are not applicable. The default value 'atomic' is a reasonable choice for relaxation calculations, as it provides a good balance between accuracy and efficiency.\n\nTherefore, the selected value for the \"pot_extrapolation\" parameter is 'atomic'.\n\n```python\nparameter_value = {\n    \"pot_extrapolation\": \"atomic\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"trust_radius_ini\".\n\nThe project is a Quantum ESPRESSO input file for a structural relaxation calculation of a TiCl2 system. The calculation type is 'relax', which is a multistep calculation. The ion_dynamics is set to 'verlet', but since 'bfgs' is also mentioned in the conditions, we can assume that the 'bfgs' dynamics might be used in the relaxation process.\n\nThe parameter \"trust_radius_ini\" is related to the initial ionic displacement in the structural relaxation. According to the Quantum ESPRESSO documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md' and the ion_dynamics is set to 'bfgs'.\n\nIn the context of this project, the \"trust_radius_ini\" parameter is relevant because the calculation type is 'relax' and the ion_dynamics might be set to 'bfgs' during the relaxation process.\n\nThe default value of \"trust_radius_ini\" is 0.5D0. However, for transition metal systems like TiCl2, a smaller initial trust radius might be more suitable to avoid large ionic displacements during the initial relaxation steps.\n\nConsidering the system and the calculation type, a reasonable value for \"trust_radius_ini\" could be 0.1D0.\n\n```python\nparameter_value = {\n    \"trust_radius_ini\": \"0.1D0\"\n}\n```\n\nNote that this value is a suggestion based on general guidelines and might need to be adjusted depending on the specific system and the desired level of convergence.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_nraise\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_nraise\" is related to Fictitious Charge Particle (FCP) calculations, which are used to control temperature adjustments in molecular dynamics simulations. However, the project does not involve molecular dynamics simulations, and the calculation type is 'relax', which is a ground-state calculation.\n\nAccording to the rules, the parameter \"fcp_nraise\" is not relevant to the project because the calculation type is not 'md' and the project does not involve FCP calculations.\n\n```python\nparameter_value = {\n    \"fcp_nraise\": None\n}\n```\n\nIn this case, the value of \"fcp_nraise\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"one_atom_occupations\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system with a monoclinic structure. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"one_atom_occupations\" is used for isolated atoms (nat=1) together with occupations='from_input'. However, in this project, the number of atoms (nat) is 3, not 1. Therefore, this parameter is not relevant to the project.\n\nAccording to the rules, if the parameter is not relevant, the value should be set to None.\n\n```python\nparameter_value = {\n    \"one_atom_occupations\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"occupations\" and the project.\n\nThe project is a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The system is a slab system with a periodic cell in the x-y plane and a vacuum boundary in the z-direction. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"occupations\" controls how electronic occupations are determined. In this case, the system is an insulator with a gap, as indicated by the presence of a vacuum boundary and the use of the PBE0 functional, which is suitable for insulating systems.\n\nAccording to the documentation, for insulators with a gap, the recommended value for \"occupations\" is 'fixed'. This is because the occupations are fixed and do not need to be determined self-consistently.\n\nTherefore, the parameter \"occupations\" is relevant to the project, and the appropriate value is 'fixed'.\n\n```python\nparameter_value = {\n    \"occupations\": \"fixed\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"w_2\".\n\nThe parameter \"w_2\" is related to the line search algorithm used in the BFGS (Broyden-Fletcher-Goldfarb-Shanno) optimization method, which is used for relaxation and molecular dynamics calculations. The BFGS method is a quasi-Newton optimization algorithm that uses an approximation of the Hessian matrix to find the minimum of a function.\n\nIn the context of the provided project, the calculation type is \"relax\", which is a multistep calculation. The \"relax\" calculation is used to relax the atomic positions and cell parameters to find the minimum energy configuration of the system.\n\nThe \"w_2\" parameter is relevant to the project because it is used in the line search algorithm of the BFGS method, which is used in the \"relax\" calculation. The default value of \"w_2\" is 0.5D0, but it can be adjusted to control the step size of the line search.\n\nHowever, since the project uses the \"verlet\" ion dynamics, which is not compatible with the BFGS method, the \"w_2\" parameter is not relevant to the project.\n\n```python\nparameter_value = {\n    \"w_2\": None\n}\n```\n\nNote that the \"w_2\" parameter is not relevant to the project because the \"verlet\" ion dynamics is used, which is not compatible with the BFGS method. Therefore, the value of \"w_2\" is set to None.",
            "Based on the provided project and tags, let's analyze the parameter \"tprnfor\".\n\nThe parameter \"tprnfor\" is related to the calculation of forces in Quantum ESPRESSO. According to the documentation, it is set to .TRUE. automatically if the calculation type is 'relax', 'md', or 'vc-md'. In the provided project, the calculation type is 'relax', as indicated by the tag \"calculation = 'relax'\".\n\nSince the project involves a relaxation calculation, the parameter \"tprnfor\" is relevant to the project. According to the documentation, the default value for \"tprnfor\" is .TRUE. for relaxation calculations.\n\nTherefore, the appropriate value for the parameter \"tprnfor\" is .TRUE.\n\n```python\nparameter_value = {\n    \"tprnfor\": \".TRUE.\"\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"smearing\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The system is a slab system with a periodic cell in the x-y plane and a vacuum boundary in the z-direction. The calculation type is 'relax', which is a multistep calculation.\n\nThe \"smearing\" parameter is relevant to the project because it controls the type of smearing method used to treat the partial occupations of the electronic states. In this case, the system is an insulating system with a fixed cell calculation, and the PBE0 functional is used, which is a hybrid functional that can exhibit a metallic behavior.\n\nAccording to the Quantum ESPRESSO documentation, the \"smearing\" parameter is used to control the smearing method for the occupations of the electronic states. The default value is \"gaussian\", but other options are available, such as \"methfessel-paxton\" and \"marzari-vanderbilt\".\n\nConsidering the project's characteristics, the most suitable smearing method is the \"marzari-vanderbilt\" method, also known as the \"cold smearing\" method. This method is suitable for insulating systems and is less sensitive to the choice of the smearing parameter.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"smearing\": \"marzari-vanderbilt\"\n}\n```\n\nNote that the \"marzari-vanderbilt\" method is also known as \"cold smearing\", \"m-v\", or \"mv\", but I used the full name for clarity.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"mixing_beta\" and the project.\n\nThe parameter \"mixing_beta\" is a mixing factor for self-consistency (SCF) calculations, which is used to control the convergence of the SCF cycle. In the context of the project, we can see that the calculation type is 'relax', which is a multistep calculation that involves SCF calculations.\n\nThe project also involves a transition metal (Ti) and a high-symmetry system, which can be challenging for SCF convergence. Additionally, the use of ultrasoft pseudopotentials (UPF) and the PBE0 exchange-correlation functional may also affect the SCF convergence.\n\nRecent research and documentation suggest that a smaller value of \"mixing_beta\" can be beneficial for systems with transition metals and ultrasoft pseudopotentials, as it can help to improve the convergence of the SCF cycle.\n\nConsidering the project's characteristics and the possible usage conditions, we can conclude that the parameter \"mixing_beta\" is relevant to the project.\n\nBased on the default value and the possible usage conditions, we can select a value for \"mixing_beta\". A smaller value than the default (0.7) is recommended for systems with transition metals and ultrasoft pseudopotentials. Let's choose a value of 0.4.\n\n```python\nparameter_value = {\n    \"mixing_beta\": \"0.4D0\"\n}\n```\n\nNote that the value is a string, as required by the Quantum ESPRESSO input format.",
            "Based on the provided project and tags, let's analyze the parameter \"tolp\".\n\nThe parameter \"tolp\" is related to the tolerance for velocity rescaling in molecular dynamics (MD) simulations. It is used to determine when to rescale the velocities of the atoms to maintain a target temperature. The default value is 100.0, which means that velocities are rescaled if the run-averaged and target temperature differ by more than 100.0 K.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The \"relax\" calculation involves a series of ionic steps to minimize the total energy of the system. Since \"relax\" is a type of calculation that involves ionic dynamics, the parameter \"tolp\" is relevant to this project.\n\nHowever, the project does not involve molecular dynamics (MD) simulations, but rather a relaxation calculation. In this case, the \"tolp\" parameter is not directly relevant to the project. The relaxation calculation uses the \"verlet\" or \"bfgs\" ion dynamics, which do not involve velocity rescaling.\n\nTherefore, the parameter \"tolp\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"tolp\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"lorbm\".\n\nThe parameter \"lorbm\" is related to the calculation of orbital magnetization, which is a property of magnetic systems. The project provided is a Quantum ESPRESSO input file for a TiCl2 system, which is a transition metal compound. The calculation type is 'relax', which is a multistep calculation.\n\nAccording to the rules, the type of calculation is important, and \"lorbm\" is only relevant for 'nscf' calculations, which is not the case here. Additionally, the project uses ultrasoft pseudopotentials (UPF), whereas \"lorbm\" only works with norm-conserving pseudopotentials.\n\nTherefore, the parameter \"lorbm\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"lorbm\": None\n}\n```\n\nNote: The \"lorbm\" parameter is not relevant to this project because the calculation type is 'relax' and not 'nscf', and the pseudopotential type is ultrasoft (UPF) and not norm-conserving.",
            "Based on the provided project and tags, let's analyze the parameter \"trust_radius_max\".\n\nThe project is a Quantum ESPRESSO input file for a structural relaxation calculation of a TiCl2 system. The calculation type is 'relax', which is a multistep calculation. The ion_dynamics is set to 'verlet', but since 'bfgs' is also mentioned in the conditions, we can assume that the 'bfgs' dynamics might be used in the relaxation process.\n\nThe parameter \"trust_radius_max\" is relevant to the project because it is used in structural relaxation calculations, and its usage condition is met since the calculation type is 'relax' and ion_dynamics is 'bfgs' (although not explicitly set in the project, it is mentioned in the conditions).\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"trust_radius_max\" is 0.8D0, which is a reasonable value for most systems. However, for systems with transition metals like Ti, a slightly larger value might be necessary to ensure convergence.\n\nConsidering the system is a transition metal compound and the default value might not be sufficient, a slightly larger value of 1.2D0 can be chosen.\n\n```python\nparameter_value = {\n    \"trust_radius_max\": \"1.2D0\"\n}\n```\n\nNote that this value is still within the reasonable range and should be tested for convergence.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_mu\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_mu\" is related to the Fictitious Charge Particle (FCP) method, which is used to simulate systems under constant chemical potential conditions. However, the project does not explicitly mention the use of the FCP method or constant chemical potential conditions.\n\nAccording to the rules, the parameter \"fcp_mu\" is only relevant if \"lfcp = .TRUE.\". However, this flag is not present in the provided project.\n\nTherefore, based on the provided information, the parameter \"fcp_mu\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_mu\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"scf_must_converge\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"scf_must_converge\" is relevant to relaxation calculations, as it determines whether the calculation should stop when the maximum number of self-consistent field (SCF) iterations is reached.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"scf_must_converge\" is .TRUE., which means that the calculation will stop when the maximum number of SCF iterations is reached. However, in relaxation calculations, it is often desirable to continue the calculation even if the SCF convergence is not reached, as the ionic relaxation can still proceed.\n\nGiven the project's calculation type and the presence of the 'relax' tag, it is reasonable to set \"scf_must_converge\" to .FALSE., allowing the calculation to continue even if the SCF convergence is not reached.\n\n```python\nparameter_value = {\n    \"scf_must_converge\": \".FALSE.\"\n}\n```\n\nThis value allows the relaxation calculation to proceed even if the SCF convergence is not reached, which is suitable for the project's requirements.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_tempw\".\n\nThe parameter \"fcp_tempw\" is related to Fictitious Charge Particle (FCP) dynamics runs, which is a method used in molecular dynamics simulations to accelerate the convergence of the electronic degrees of freedom. The parameter \"fcp_tempw\" represents the starting temperature (Kelvin) in FCP dynamics runs.\n\nIn the provided project, the calculation type is \"relax\", which is a multistep calculation. The tags also mention \"ion_dynamics = 'verlet'\", which is a type of molecular dynamics simulation. However, there is no explicit mention of FCP calculations or \"lfcp = .TRUE.\" in the project.\n\nAccording to the rules, the parameter \"fcp_tempw\" is only relevant if \"lfcp = .TRUE.\" and \"calculation = relax\" or \"md\". Since \"lfcp = .TRUE.\" is not mentioned in the project, we cannot confirm that FCP calculations are being performed.\n\nTherefore, based on the provided information, the parameter \"fcp_tempw\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_tempw\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"bfgs_ndim\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"bfgs_ndim\" is related to the BFGS algorithm used in the relaxation of the ionic positions. According to the documentation, \"bfgs_ndim\" controls the number of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse Hessian matrix given by the BFGS algorithm.\n\nGiven that the calculation type is 'relax' and the ion_dynamics is set to 'bfgs', the parameter \"bfgs_ndim\" is relevant to the project.\n\nThe default value of \"bfgs_ndim\" is 1, which corresponds to the standard quasi-Newton BFGS method. However, there is no specific condition in the tags that suggests a different value for \"bfgs_ndim\". Therefore, we will stick with the default value.\n\n```python\nparameter_value = {\n    \"bfgs_ndim\": \"1\"\n}\n```\n\nNote that the value is set to \"1\" as a string, as per the output format requirements.",
            "Based on the provided project and tags, let's analyze the parameter \"tempw\".\n\nThe parameter \"tempw\" is related to the temperature in molecular dynamics (MD) runs or the target temperature for most thermostats. According to the project, the calculation type is \"relax\", which is a multistep calculation. The \"tempw\" parameter is relevant to this type of calculation.\n\nHowever, upon closer inspection, we notice that the project does not involve molecular dynamics (MD) or any thermostat-related calculations. The \"relax\" calculation in this project is likely a structural relaxation, where the system's geometry is optimized to find the minimum energy configuration. In this case, the \"tempw\" parameter is not directly relevant to the calculation.\n\nAccording to the rules, since the parameter is not relevant to the project, we should set its value to None.\n\n```python\nparameter_value = {\n    \"tempw\": None\n}\n```",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"nsolv\" and the project.\n\nThe parameter \"nsolv\" is related to RISM (Reference Interaction Site Model) calculations, which is a method used to study the solvation properties of molecules in a solvent. However, the project provided is a quantum chemistry calculation using Quantum ESPRESSO, which is focused on the electronic structure of a solid-state system (a TiCl2 slab). The project does not involve any solvent molecules, and the calculation type is a relaxation calculation (calculation = 'relax').\n\nAccording to the rules, the type of calculation is important, and the tags must be relevant to the calculation type. Since the project is a relaxation calculation and does not involve any solvent molecules, the parameter \"nsolv\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"nsolv\": None\n}\n```\n\nIn this case, the value of \"nsolv\" is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_ndiis\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_ndiis\" is related to Fictitious Charge Particle (FCP) relaxation, which is used in Car-Parrinello molecular dynamics (CPMD) simulations. However, the project does not specify the use of CPMD or FCP calculations. The \"fcp_ndiis\" parameter is only relevant if `lfcp = .TRUE.` and `calculation = 'relax' or 'md'`.\n\nIn this case, since the project does not specify `lfcp = .TRUE.` and the calculation type is 'relax' but not a CPMD simulation, the parameter \"fcp_ndiis\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_ndiis\": None\n}\n```\n\nNote that the default value of \"fcp_ndiis\" is 4, but since the parameter is not relevant to the project, we set its value to None.",
            "Based on the provided project and tags, I will discuss the relation between the parameter \"laue_starting_left\" and the project.\n\nThe parameter \"laue_starting_left\" is related to the Laue-RISM (Reference Interaction Site Model) method, which is used to simulate systems with solvent-solute interactions. However, the project provided does not mention anything about solvent-solute interactions or the use of the Laue-RISM method. The project appears to be a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional.\n\nFurthermore, the tags provided do not mention anything about RISM calculations, Laue boundary conditions, or systems with solvent-solute interactions, which are the possible usage conditions for the \"laue_starting_left\" parameter.\n\nTherefore, I conclude that the parameter \"laue_starting_left\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"laue_starting_left\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"wfc_extrapolation\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"wfc_extrapolation\" is used to extrapolate the wavefunctions from preceding ionic steps. According to the documentation, this parameter is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'. Since the calculation type in the project is 'relax', this parameter is relevant.\n\nFor a 'relax' calculation, it is recommended to use a second-order extrapolation method to improve the convergence of the wavefunctions. Therefore, the appropriate value for the parameter \"wfc_extrapolation\" is \"second_order\".\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"wfc_extrapolation\": \"second_order\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"nbnd\".\n\nThe project is a quantum chemistry calculation using Quantum ESPRESSO, and the tags indicate that it's a ground state calculation with a fixed cell, using the PBE0 exchange-correlation functional, and involving a transition metal (Ti) and a non-metal (Cl). The system is a slab with a defined z-direction, and the calculation is a relaxation calculation.\n\nThe parameter \"nbnd\" is related to the number of electronic states (bands) to be calculated. According to the documentation, the default value for insulators is the number of valence bands (number_of_electrons/2), while for metals, it's (number of valence bands)*1.2.\n\nIn this project, the system is a slab with a transition metal, which can exhibit metallic behavior. However, the presence of Cl, a non-metal, might affect the overall electronic structure. Considering the calculation type (relaxation) and the presence of a transition metal, it's reasonable to assume that the system might exhibit some degree of metallic behavior.\n\nTherefore, the parameter \"nbnd\" is relevant to this project.\n\nTo determine the value of \"nbnd\", we need to estimate the number of valence bands. The number of valence electrons can be calculated by summing the valence electrons of each atom: Cl (7) + Ti (4) + Cl (7) = 18. Assuming a spin-polarized calculation (nspin = 2), the number of valence bands would be 18/2 = 9.\n\nUsing the metal default value formula, we can estimate \"nbnd\" as (9)*1.2 = 10.8. Since \"nbnd\" must be an integer, we round up to the nearest integer, resulting in \"nbnd\" = 11.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"nbnd\": \"11\"\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"fire_dtmax\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fire_dtmax\" is relevant to the project because it is used in the FIRE minimization algorithm, which is a popular method for structural relaxation. The FIRE algorithm is often used in conjunction with the 'relax' calculation type.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"fire_dtmax\" is 10.0, which is a reasonable value for most systems. However, the optimal value of \"fire_dtmax\" can depend on the specific system and the desired level of precision.\n\nConsidering the project's conditions, such as the use of ultrasoft pseudopotentials, a transition metal (Ti), and a high-symmetry system, a slightly lower value of \"fire_dtmax\" might be more suitable to ensure a stable and efficient relaxation process.\n\nTherefore, I recommend a value of 5.0 for \"fire_dtmax\", which is a common choice for systems with transition metals and ultrasoft pseudopotentials.\n\n```python\nparameter_value = {\n    \"fire_dtmax\": \"5.0\"\n}\n```\n\nNote that this value is not drastically different from the default value, and the user can always adjust it based on the specific needs of their system.",
            "Based on the provided project and tags, let's analyze the parameter \"conv_thr\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"conv_thr\" is related to the convergence threshold for self-consistency in self-consistent calculations ('scf') and is used to set the default threshold value for iterative diagonalization in non-self-consistent calculations ('nscf').\n\nAlthough the calculation type is 'relax', which is not explicitly mentioned in the Possible_Usage_Conditions, it is a multistep calculation that involves self-consistent calculations ('scf') as a sub-step. Therefore, the parameter \"conv_thr\" is relevant to the project.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"conv_thr\" is 1.D-6, which is suitable for most systems. However, for systems with transition metals, such as Ti, a more stringent convergence threshold may be required.\n\nConsidering the system under study, TiCl2, which contains a transition metal, a more stringent convergence threshold is recommended. A common choice for transition metal systems is 1.D-8.\n\n```python\nparameter_value = {\n    \"conv_thr\": \"1.D-8\"\n}\n```\n\nNote that this value is not explicitly mentioned in the Possible_Usage_Conditions, but it is a common choice in the literature for transition metal systems.",
            "Based on the provided project and tags, let's analyze the parameter \"fire_falpha\".\n\nThe parameter \"fire_falpha\" is related to the ion dynamics algorithm \"fire\" used in relaxation and molecular dynamics calculations. It controls the scaling of the alpha mixing parameter for steps with P > 0. The default value is 0.99D0.\n\nIn the provided project, the calculation type is \"relax\" (as indicated by the tag \"calculation = 'relax'\"), and the ion dynamics algorithm is \"verlet\" (as indicated by the tag \"ion_dynamics = 'verlet'\"). However, the \"fire_falpha\" parameter is only relevant when the ion dynamics algorithm is \"fire\", not \"verlet\".\n\nTherefore, the parameter \"fire_falpha\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fire_falpha\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"ion_temperature\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"ion_temperature\" is relevant to the project because it controls the ionic temperature during the relaxation process. In a 'relax' calculation, the ions are moved to their equilibrium positions, and the ionic temperature can affect the convergence of the calculation.\n\nAccording to the Quantum ESPRESSO documentation, the default value for \"ion_temperature\" is \"not_controlled\", which means that the ionic temperature is not controlled during the calculation. However, since the project involves a relaxation calculation, it is recommended to control the ionic temperature to ensure a stable and efficient convergence.\n\nConsidering the project's conditions, such as the presence of transition metals (Ti) and the use of ultrasoft pseudopotentials, a suitable value for \"ion_temperature\" would be \"andersen\". The Andersen thermostat is a widely used method for controlling the ionic temperature in molecular dynamics simulations, and it is suitable for systems with transition metals.\n\nHere is the output in the specified format:\n\n```python\nparameter_value = {\n    \"ion_temperature\": \"andersen\"\n}\n```\n\nNote that the value \"andersen\" is chosen based on the project's conditions and the recommended practices in the field. However, the optimal value for \"ion_temperature\" may depend on the specific system and the desired outcome of the calculation.",
            "Based on the provided project and tags, let's analyze the parameter \"trust_radius_min\".\n\nThe project is a Quantum ESPRESSO input file for a structural relaxation calculation of a TiCl2 system. The calculation type is 'relax', which is a multistep calculation. The ion_dynamics is set to 'bfgs', which is a quasi-Newton optimization algorithm.\n\nThe parameter \"trust_radius_min\" is relevant to the project because it is used in the BFGS algorithm to control the minimum ionic displacement during the structural relaxation. According to the Quantum ESPRESSO documentation, \"trust_radius_min\" is the minimum trust radius for the BFGS algorithm, and it is used to prevent the algorithm from taking too large steps.\n\nThe default value of \"trust_radius_min\" is 1.D-3, but it can be adjusted based on the specific system and calculation. Since the project involves a transition metal (Ti) and a high-symmetry system, a smaller value of \"trust_radius_min\" might be necessary to ensure convergence.\n\nConsidering the project and the tags, I would recommend a value of \"1.D-4\" for \"trust_radius_min\". This value is smaller than the default value and should provide a more conservative approach to the structural relaxation.\n\n```python\nparameter_value = {\n    \"trust_radius_min\": \"1.D-4\"\n}\n```\n\nNote that the value of \"trust_radius_min\" can be adjusted based on the specific needs of the project, and it's always a good idea to test different values to ensure convergence.",
            "Based on the provided project and tags, let's analyze the parameter \"twochem\".\n\nThe parameter \"twochem\" is related to the simulation of photoexcited systems, which is not directly relevant to the provided project. The project is a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional, and there is no indication of simulating photoexcited systems.\n\nHowever, the project does use the \"occupations = 'smearing'\" tag, which is a possible usage condition for the \"twochem\" parameter. But, according to the rules, we should not assume any additional information beyond the provided project and tags. Therefore, we cannot conclude that the \"twochem\" parameter is relevant to this project.\n\nMoreover, the project is a relaxation calculation (calculation = 'relax'), which is a multistep calculation. The \"twochem\" parameter is not explicitly mentioned as a relevant parameter for relaxation calculations in the provided tags.\n\nIn conclusion, based on the provided project and tags, the \"twochem\" parameter is not relevant to this project.\n\n```python\nparameter_value = {\n    \"twochem\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"ion_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system. The calculation type is not explicitly specified, but based on the presence of the \"K_POINTS\" and \"CELL_PARAMETERS\" tags, it appears to be a single-point calculation or a relaxation calculation.\n\nThe \"ion_dynamics\" parameter is relevant to the project when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'. Since the project does not explicitly specify the calculation type, we need to look for other clues.\n\nThe presence of the \"K_POINTS\" tag and the \"CELL_PARAMETERS\" tag with a fixed cell shape suggests that the calculation is likely a relaxation calculation, where the ions are allowed to move to their equilibrium positions while keeping the cell shape fixed. This is consistent with the \"calculation = 'relax'\" condition.\n\nTherefore, the \"ion_dynamics\" parameter is relevant to the project, and the appropriate value is \"bfgs\", which is the default value for relaxation calculations.\n\n```python\nparameter_value = {\n    \"ion_dynamics\": \"bfgs\"\n}\n```\n\nNote that if the calculation type were 'md' or 'vc-md', the appropriate value would be \"verlet\" or \"beeman\", respectively. However, based on the provided project and tags, \"bfgs\" is the most likely choice.",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_mass\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The system is a slab with a defined z-direction, and the calculation is a relaxation calculation (calculation = 'relax').\n\nThe parameter \"fcp_mass\" is related to FCP (Fictitious Charge Particle) calculations, which are used to accelerate the convergence of the self-consistent field (SCF) cycle in certain types of calculations. However, the project does not explicitly mention FCP calculations or the use of the \"lfcp\" flag.\n\nAccording to the rules, the parameter \"fcp_mass\" is only relevant if \"lfcp = .TRUE.\" and the calculation is either 'relax' or 'md'. Since the project does not specify \"lfcp = .TRUE.\", we cannot assume its value.\n\nTherefore, the parameter \"fcp_mass\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_mass\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"nraise\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"nraise\" is related to temperature control in molecular dynamics simulations. It is relevant when the calculation type is 'relax', 'md', 'vc-relax', or 'vc-md'. In this case, the calculation type is 'relax', so the parameter is relevant.\n\nHowever, the project does not specify any temperature control or molecular dynamics settings. The \"ion_dynamics\" tag is set to 'verlet', which is a molecular dynamics algorithm, but there is no mention of temperature control.\n\nGiven the lack of temperature control settings, it is difficult to determine an appropriate value for \"nraise\". However, based on the default value and common practices, a reasonable choice for \"nraise\" in a relaxation calculation without temperature control would be the default value of 1.\n\n```python\nparameter_value = {\n    \"nraise\": \"1\"\n}\n```\n\nNote that this value may not be optimal for the specific system being studied, and further research or experimentation may be necessary to determine the best value for \"nraise\" in this case.",
            "Based on the provided project and tags, let's analyze the parameter \"degauss_cond\".\n\nThe parameter \"degauss_cond\" is related to the Gaussian spreading value for Brillouin-zone integration in the conduction manifold in a two-chemical potential calculation. However, the project provided does not indicate a two-chemical potential calculation (twochem = .True.). The project is a ground-state calculation with a single chemical potential, as indicated by the \"calculation = 'relax'\" tag.\n\nMoreover, the project uses the PBE0 exchange-correlation functional, which is a hybrid functional that does not typically require a two-chemical potential calculation. The Monkhorst-Pack grid is used for k-point sampling, which is a standard approach for periodic systems.\n\nGiven the project details, the parameter \"degauss_cond\" is not relevant to this calculation.\n\n```python\nparameter_value = {\n    \"degauss_cond\": None\n}\n```\n\nIn this case, the value of \"degauss_cond\" is set to None, indicating that it is not applicable to the provided project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_delta_t\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_delta_t\" is related to Fictitious Charge Particle (FCP) temperature control, which is used in molecular dynamics (MD) simulations. However, the project does not involve MD simulations, but rather a relaxation calculation.\n\nAlthough the project involves a 'relax' calculation, which is a multistep calculation, the parameter \"fcp_delta_t\" is not relevant to this specific project. The 'relax' calculation in this project is a geometry optimization, not a molecular dynamics simulation.\n\nTherefore, the parameter \"fcp_delta_t\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_delta_t\": None\n}\n```\n\nNote: The parameter \"fcp_delta_t\" would be relevant if the project involved a molecular dynamics simulation (calculation = 'md') and FCP calculations (lfcp = .TRUE.).",
            "**Relation between the parameter and the project:**\n\nThe parameter \"ntyp\" represents the number of types of atoms in the unit cell. In the provided project, we have three atoms: two chlorine (Cl) atoms and one titanium (Ti) atom. However, the number of types of atoms is not necessarily equal to the number of atoms. In this case, we have two types of atoms: Cl and Ti.\n\nAccording to the Quantum ESPRESSO documentation, \"ntyp\" is a required parameter in the &SYSTEM namelist, and it should be set to the number of different atomic species present in the system.\n\n**Relevance of the parameter to the project:**\n\nThe parameter \"ntyp\" is relevant to the project, as it is a required parameter in the &SYSTEM namelist, and the project involves a ground-state calculation with two types of atoms.\n\n**Selected value:**\n\nBased on the project, the appropriate value for \"ntyp\" is 2, since we have two types of atoms: Cl and Ti.\n\n**Output:**\n\n```python\nparameter_value = {\"ntyp\": \"2\"}\n```",
            "Based on the provided project and tags, let's analyze the parameter \"nosym_evc\".\n\nThe project is a quantum chemistry calculation using Quantum ESPRESSO, and the tags indicate that it's a ground state calculation with a Monkhorst-Pack grid, full BZ coverage, and a periodic cell with defined z-direction. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"nosym_evc\" is related to the symmetry of the k-points in the Brillouin Zone. According to the documentation, if \"nosym_evc\" is set to .TRUE., symmetry is not used, and k-points are forced to have the symmetry of the Bravais lattice. This option is relevant to Monkhorst-Pack grids and custom k-points, which is the case in this project.\n\nHowever, the project has a high symmetry system (monoclinic) and uses a Monkhorst-Pack grid with full BZ coverage. In this case, using the full symmetry of the Bravais lattice might not be necessary, and the default value of .FALSE. might be sufficient.\n\nConsidering the project's characteristics and the parameter's description, I would recommend setting \"nosym_evc\" to .FALSE., which is the default value.\n\n```python\nparameter_value = {\n    \"nosym_evc\": \"False\"\n}\n```\n\nThis value allows the code to use the symmetry of the system, which is suitable for high symmetry systems like the one in this project.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_conv_thr\".\n\nThe parameter \"fcp_conv_thr\" is related to Fictitious Charge Particle (FCP) relaxation, which is a method used in Quantum ESPRESSO to optimize the atomic positions in a system. The convergence threshold on force (eV) is a critical parameter in this process.\n\nIn the provided project, the calculation type is 'relax', which is a multistep calculation. The tags also indicate that this is a relaxation calculation, and the system is a periodic slab system with a defined z-direction.\n\nHowever, there is no indication that FCP calculations are being used in this project. The pseudopotentials used are UPF (ultrasoft pseudopotentials), and there is no mention of lfcp = .TRUE. in the project.\n\nAccording to the rules, the parameter \"fcp_conv_thr\" is only relevant if lfcp = .TRUE. and calculation = 'relax' or 'md'. Since lfcp = .TRUE. is not present in the project, the parameter is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_conv_thr\": None\n}\n```\n\nIn this case, the value of the parameter is set to None, indicating that it is not relevant to the project.",
            "Based on the provided project and tags, let's analyze the parameter \"w_1\".\n\nThe parameter \"w_1\" is related to the line search algorithm used in the BFGS (Broyden-Fletcher-Goldfarb-Shanno) optimization method, which is used for relaxation and molecular dynamics calculations. The BFGS method is a quasi-Newton optimization algorithm that uses an approximation of the Hessian matrix to find the minimum of a function.\n\nIn the context of the provided project, the calculation type is \"relax\", which is a multistep calculation. The \"relax\" calculation is used to relax the atomic positions and cell parameters to find the minimum energy configuration of the system.\n\nThe \"w_1\" parameter is relevant to the project because it is used in the line search algorithm of the BFGS method, which is used in the \"relax\" calculation. The \"w_1\" parameter controls the step size of the line search, and a smaller value of \"w_1\" can lead to a more accurate but slower convergence.\n\nAccording to the Quantum ESPRESSO documentation, the default value of \"w_1\" is 0.01, which is a reasonable starting point for most systems. However, the optimal value of \"w_1\" can depend on the specific system and the desired level of accuracy.\n\nBased on the provided project and tags, we can conclude that the parameter \"w_1\" is relevant to the project, and the default value of 0.01 is a reasonable choice.\n\n```python\nparameter_value = {\n    \"w_1\": \"0.01D0\"\n}\n```\n\nNote that the value of \"w_1\" can be adjusted based on the specific needs of the project, but the default value of 0.01 is a good starting point.",
            "Based on the provided project and tags, let's analyze the parameter \"fcp_dynamics\".\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_dynamics\" is related to the Fictitious Charge Particle (FCP) method, which is used to accelerate the convergence of the self-consistent field (SCF) cycle. However, the project does not explicitly mention the use of FCP or the \"lfcp\" flag.\n\nAccording to the rules, the parameter \"fcp_dynamics\" is only relevant if \"lfcp = .TRUE.\" and the calculation type is either 'relax' or 'md'. Since the project does not specify \"lfcp = .TRUE.\", we cannot assume its value.\n\nTherefore, the parameter \"fcp_dynamics\" is not relevant to this project.\n\n```python\nparameter_value = {\n    \"fcp_dynamics\": None\n}\n```",
            "Based on the provided project and tags, let's analyze the relation between the parameter \"fcp_temperature\" and the project.\n\nThe project is a Quantum ESPRESSO input file for a ground-state calculation of a TiCl2 system using the PBE0 exchange-correlation functional. The calculation type is 'relax', which is a multistep calculation.\n\nThe parameter \"fcp_temperature\" is related to Fictitious Charge Particle (FCP) calculations, which are used to accelerate the convergence of the self-consistent field (SCF) cycle. However, the project does not explicitly mention FCP calculations or the use of the \"lfcp\" flag.\n\nAccording to the rules, the parameter \"fcp_temperature\" is only relevant if \"lfcp = .TRUE.\" and the calculation type is 'relax' or 'md'. Since the project does not provide information about the \"lfcp\" flag, we cannot assume its value.\n\nTherefore, based on the provided information, the parameter \"fcp_temperature\" is not relevant to the project.\n\n```python\nparameter_value = {\n    \"fcp_temperature\": None\n}\n```"
        ],
        "evaluated_parameters_graph": {
            "directed": true,
            "multigraph": false,
            "graph": {},
            "nodes": [
                {
                    "Parameter_Name": "calculation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "scf"
                    },
                    "Description": "calculation\nA string describing the task to be performed",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'",
                        "calculation = 'bands'",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Fixed cell calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "scf": "standard calculation",
                        "nscf": null,
                        "bands": null,
                        "relax": "only the atomic positions are allowed to vary",
                        "md": "ab-initio molecular dynamics (MD) simulations",
                        "vc-relax": "allows to vary both the atomic positions and lattice constants",
                        "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "calculation"
                },
                {
                    "Parameter_Name": "tprnfor",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "tprnfor\ncalculate forces",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-md'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                    "Parameter_Value_Conditions": {
                        ".TRUE.": "when calculation = 'relax','md','vc-md'"
                    },
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "tprnfor"
                },
                {
                    "Parameter_Name": "ntyp",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "ntyp\nnumber of types of atoms in the unit cell",
                    "Possible_Usage_Conditions": [],
                    "Required/Optional": "required",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "ntyp"
                },
                {
                    "Parameter_Name": "nbnd",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "insulator": "number of valence bands (number_of_electrons/2)",
                        "metal": "(number of valence bands)*1.2"
                    },
                    "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                    "Possible_Usage_Conditions": [
                        "Insulating systems",
                        "Metallic systems",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nbnd"
                },
                {
                    "Parameter_Name": "nosym_evc",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                    "Possible_Usage_Conditions": [
                        "Monkhorst-Pack grid",
                        "custom k-points",
                        "full BZ coverage"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                    },
                    "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                    "Namelist": "&SYSTEM",
                    "id": "nosym_evc"
                },
                {
                    "Parameter_Name": "occupations",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null
                    },
                    "Description": "occupations\nControls how electronic occupations are determined",
                    "Possible_Usage_Conditions": [
                        "DOS calculations",
                        "stress calculations",
                        "Relaxation calculations",
                        "Dynamics calculations",
                        "Metallic systems",
                        "Insulating systems",
                        "Uniform k-point grid",
                        "Single k-point",
                        "occupations = 'smearing'",
                        "Tetrahedron method (Bloechl's version)",
                        "Linear tetrahedron method",
                        "Optimized tetrahedron method",
                        "Fixed occupations",
                        "occupations = 'from_input'"
                    ],
                    "Required/Optional": null,
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "smearing": "for metals, requires parameters smearing and degauss",
                        "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                        "tetrahedra_lin": "original linear tetrahedron method, reference only",
                        "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                        "fixed": "for insulators with a gap",
                        "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "occupations"
                },
                {
                    "Parameter_Name": "degauss",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.D0"
                    },
                    "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'bands'",
                        "Metallic systems",
                        "partial occupations",
                        "occupations = 'smearing'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "degauss"
                },
                {
                    "Parameter_Name": "smearing",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "gaussian"
                    },
                    "Description": "smearing\nControls the type of smearing method to be used",
                    "Possible_Usage_Conditions": [
                        "Metallic systems",
                        "Semiconductor systems",
                        "partial occupations",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "gaussian/gauss": "ordinary Gaussian spreading",
                        "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                        "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                        "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "smearing"
                },
                {
                    "Parameter_Name": "esm_bc",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "pbc"
                    },
                    "Description": "esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "Slab systems",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = 'esm'",
                    "Parameter_Value_Conditions": {
                        "pbc": "regular periodic calculation (no ESM)",
                        "bc1": "Vacuum-slab-vacuum (open boundary conditions)",
                        "bc2": "Metal-slab-metal (dual electrode configuration)",
                        "bc3": "Vacuum-slab-metal"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_bc"
                },
                {
                    "Parameter_Name": "scf_must_converge",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": ".TRUE."
                    },
                    "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Relaxation calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                    },
                    "Final_comments": "Use with care.",
                    "Namelist": "&ELECTRONS",
                    "id": "scf_must_converge"
                },
                {
                    "Parameter_Name": "conv_thr",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-6"
                    },
                    "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'",
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "conv_thr"
                },
                {
                    "Parameter_Name": "mixing_mode",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "plain"
                    },
                    "Description": "mixing_mode\nControls the type of charge density mixing method",
                    "Possible_Usage_Conditions": [
                        "homogeneous systems",
                        "inhomogeneous systems",
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "plain": "charge density Broyden mixing",
                        "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                        "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                    },
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_mode"
                },
                {
                    "Parameter_Name": "mixing_beta",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.7D0"
                    },
                    "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                    "Possible_Usage_Conditions": [
                        "Smearing method"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "mixing_beta"
                },
                {
                    "Parameter_Name": "ion_positions",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "default"
                    },
                    "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "required",
                    "Usage_Conditions": "",
                    "Parameter_Value_Conditions": {
                        "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                        "from_input": "read atomic positions from standard input, even if restarting"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_positions"
                },
                {
                    "Parameter_Name": "ion_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "calculation=relax": "bfgs",
                        "calculation=md": "verlet",
                        "calculation=vc-relax": "bfgs",
                        "calculation=vc-md": "beeman"
                    },
                    "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                        "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                        "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                        "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                        "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                        "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                        "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_dynamics"
                },
                {
                    "Parameter_Name": "pot_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "atomic"
                    },
                    "Description": "pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "atomic": "extrapolate the potential as if it was a sum of atomic-like orbitals",
                        "first_order": "extrapolate the potential with first-order formula",
                        "second_order": "extrapolate the potential with second order formula"
                    },
                    "Final_comments": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations",
                    "Namelist": "&IONS",
                    "id": "pot_extrapolation"
                },
                {
                    "Parameter_Name": "wfc_extrapolation",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "none": "no extrapolation",
                        "first_order": "extrapolate the wave-functions with first-order formula",
                        "second_order": "extrapolate the wave-functions with second order formula"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "wfc_extrapolation"
                },
                {
                    "Parameter_Name": "ion_temperature",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "not_controlled"
                    },
                    "Description": "ion_temperature\nControls the ionic temperature using different methods",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                        "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                        "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                        "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                        "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                        "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                        "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                        "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                        "not_controlled": "(default) ionic temperature is not controlled"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "ion_temperature"
                },
                {
                    "Parameter_Name": "nraise",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                        "1/nraise": "when ion_temperature = 'andersen'"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "nraise"
                },
                {
                    "Parameter_Name": "refold_pos",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'md'",
                        "calculation = 'relax'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'damp'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "refold_pos"
                },
                {
                    "Parameter_Name": "upscale",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "upscale"
                },
                {
                    "Parameter_Name": "bfgs_ndim",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "1": "standard quasi-Newton BFGS method is used"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "bfgs_ndim"
                },
                {
                    "Parameter_Name": "trust_radius_max",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.8D0"
                    },
                    "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_max"
                },
                {
                    "Parameter_Name": "trust_radius_min",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D-3"
                    },
                    "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": {
                        "trust_radius < trust_radius_min": "BFGS is reset"
                    },
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_min"
                },
                {
                    "Parameter_Name": "trust_radius_ini",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.5D0"
                    },
                    "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "trust_radius_ini"
                },
                {
                    "Parameter_Name": "w_1",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.01D0"
                    },
                    "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'",
                        "ion_dynamics = 'bfgs'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "w_1"
                },
                {
                    "Parameter_Name": "fire_nmin",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 5
                    },
                    "Description": "fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "fire_nmin"
                },
                {
                    "Parameter_Name": "fire_dtmax",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "10.D0"
                    },
                    "Description": "fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "fire_dtmax"
                },
                {
                    "Parameter_Name": "cell_dynamics",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": null,
                        "vc-relax": "bfgs"
                    },
                    "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                    "Possible_Usage_Conditions": [
                        "Dynamics calculations",
                        "Variable cell calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                    "Parameter_Value_Conditions": {
                        "none": "no dynamics (both vc-relax and vc-md)",
                        "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                        "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                        "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                        "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                        "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                    },
                    "Final_comments": null,
                    "Namelist": "&CELL",
                    "id": "cell_dynamics"
                },
                {
                    "Parameter_Name": "noinv",
                    "Value_Type": "logical",
                    "Default_Values": {
                        "default": false
                    },
                    "Description": "noinv\nif (.TRUE.) disable the usage of k => -k symmetry (time reversal) in k-point generation",
                    "Possible_Usage_Conditions": [
                        "Non-collinear magnetic calculations",
                        "custom k-points"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "noinv"
                },
                {
                    "Card_Name": "K_POINTS",
                    "Namelist": "Card: K_POINTS",
                    "Required/Optional": null,
                    "Card_Options": [
                        "tpiba",
                        "tpiba_b",
                        "tpiba_c",
                        "crystal",
                        "crystal_b",
                        "crystal_c",
                        "gamma",
                        "automatic"
                    ],
                    "Default_Option": "tpiba",
                    "Description": null,
                    "Card_Use_Conditions": null,
                    "Card_Option_Given_Conditions": {
                        "gamma": "wavefunctions can be chosen as real, and specialized subroutines optimized for calculations at the gamma point are used",
                        "automatic": "generates uniform grid of k-points with specified grid and offset parameters"
                    },
                    "Syntax_Given_Option": {
                        "tpiba": "K_POINTS tpiba\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal": "K_POINTS crystal\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_b": "K_POINTS tpiba_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_b": "K_POINTS crystal_b\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "tpiba_c": "K_POINTS tpiba_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "crystal_c": "K_POINTS crystal_c\nnks\nxk_x(1) xk_y(1) xk_z(1) wk(1)\nxk_x(2) xk_y(2) xk_z(2) wk(2)\nxk_x(nks) xk_y(nks) xk_z(nks) wk(nks)",
                        "automatic": "K_POINTS automatic\nnk1 nk2 nk3 sk1 sk2 sk3",
                        "gamma": "K_POINTS gamma"
                    },
                    "Item_Description": {
                        "nks": "Number of supplied special k-points",
                        "xk_x, xk_y, xk_z": "Special k-points in the irreducible Brillouin Zone (IBZ) of the lattice (with all symmetries)",
                        "wk": "weights",
                        "nk1, nk2, nk3": "These parameters specify the k-point grid (nk1 x nk2 x nk3) as in Monkhorst-Pack grids",
                        "sk1, sk2, sk3": "The grid offsets"
                    },
                    "Item_Conditions": {
                        "sk1, sk2, sk3": "must be 0 (no offset) or 1 (grid displaced by half a grid step in the corresponding direction)",
                        "nks": "must be 3 for tpiba_c and crystal_c options"
                    },
                    "General_Syntax": null,
                    "Final_comments": "Only grids having the full symmetry of the crystal work with tetrahedra. Some grids with offset may not work.",
                    "Possible_Usage_Conditions": [],
                    "id": "K_POINTS"
                },
                {
                    "Card_Name": "OCCUPATIONS",
                    "Namelist": "Card: OCCUPATIONS",
                    "Required/Optional": "optional",
                    "Card_Options": null,
                    "Default_Option": null,
                    "Description": null,
                    "Card_Use_Conditions": {
                        "occupations": "from_input"
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": null,
                    "Item_Description": {
                        "f_inp1": "Occupations of individual states (MAX 10 PER ROW). For spin-polarized calculations, these are majority spin states.",
                        "f_inp2": "Occupations of minority spin states (MAX 10 PER ROW)"
                    },
                    "Item_Conditions": {
                        "f_inp2": "To be specified only for spin-polarized calculations"
                    },
                    "General_Syntax": "OCCUPATIONS\nf_inp1(1) f_inp1(2) . . . f_inp1(nbnd)\n[ f_inp2(1) f_inp2(2) . . . f_inp2(nbnd) ]",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "occupations = 'from_input'"
                    ],
                    "id": "OCCUPATIONS"
                },
                {
                    "Parameter_Name": "tot_charge",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": 0.0
                    },
                    "Description": "tot_charge\nTotal charge of the system. Useful for simulations with charged cells.",
                    "Possible_Usage_Conditions": [
                        "charged cells"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when simulating systems with non-neutral charge states. In periodic calculations, a compensating jellium background is inserted for non-neutral cells.",
                    "Parameter_Value_Conditions": {
                        "0": "neutral cell",
                        "+1": "one electron missing from the system",
                        "-1": "one additional electron"
                    },
                    "Final_comments": "In a periodic calculation a compensating jellium background is inserted to remove divergences if the cell is not neutral.",
                    "Namelist": "&SYSTEM",
                    "id": "tot_charge"
                },
                {
                    "Parameter_Name": "nspin",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 1
                    },
                    "Description": "nspin\nControls spin polarization type in calculations",
                    "Possible_Usage_Conditions": [
                        "nspin = 1",
                        "nspin = 2",
                        "Collinear magnetic calculations (LSDA)",
                        "Spin-polarized calculations"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "1": "non-polarized calculation",
                        "2": "spin-polarized calculation, LSDA (magnetization along z axis)",
                        "4": "spin-polarized calculation, noncollinear (magnetization in generic direction)"
                    },
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "nspin"
                },
                {
                    "Parameter_Name": "constrained_magnetization",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "constrained_magnetization\nUsed to perform constrained calculations in magnetic systems.",
                    "Possible_Usage_Conditions": [
                        "Magnetic systems",
                        "Non-collinear magnetic calculations",
                        "Collinear magnetic calculations (LSDA)"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "no constraint",
                        "total": "total magnetization is constrained by adding a penalty term to total energy, noncolinear case only",
                        "atomic": "atomic magnetization are constrained to defined starting magnetization",
                        "total direction": "angle theta of total magnetization with z axis is constrained",
                        "atomic direction": "only cosine of angle1 of atomic magnetic moment is constrained"
                    },
                    "Final_comments": "Note: symmetrization may prevent to reach the desired orientation of the magnetization. Try not to start with very highly symmetric configurations or use the nosym flag (only as a last remedy)",
                    "Namelist": "&SYSTEM",
                    "id": "constrained_magnetization"
                },
                {
                    "Parameter_Name": "assume_isolated",
                    "Value_Type": "character",
                    "Default_Values": {
                        "default": "none"
                    },
                    "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'vc-relax'",
                        "Cubic supercells",
                        "2D periodic systems in x-y plane",
                        "Isolated (non-periodic) systems",
                        "charged slabs",
                        "vacuum boundaries",
                        "electrode boundaries",
                        "optional electric field"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": {
                        "none": "regular periodic calculation w/o any correction",
                        "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                        "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                        "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                    },
                    "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                    "Namelist": "&SYSTEM",
                    "id": "assume_isolated"
                },
                {
                    "Parameter_Name": "esm_efield",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "0.d0"
                    },
                    "Description": "esm_efield\ngives the magnitude of the electric field [Ry/a.u.] to be applied between semi-infinite ESM electrodes",
                    "Possible_Usage_Conditions": [
                        "ESM calculations",
                        "Isolated (non-periodic) systems"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "Used when assume_isolated = \"esm\" and esm_bc = \"bc2\"",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&SYSTEM",
                    "id": "esm_efield"
                },
                {
                    "Parameter_Name": "electron_maxstep",
                    "Value_Type": "integer",
                    "Default_Values": {
                        "default": 100
                    },
                    "Description": "electron_maxstep\nmaximum number of iterations in a scf step. If exact exchange is active, this will affect the inner loops.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'scf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "electron_maxstep"
                },
                {
                    "Parameter_Name": "diago_thr_init",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": null,
                        "scf_atomic_orbitals": "1.D-2",
                        "scf_charge_density": "1.D-5",
                        "non_scf": "(conv_thr/N elec)/10"
                    },
                    "Description": "diago_thr_init\nConvergence threshold (ethr) for iterative diagonalization (the check is on eigenvalue convergence)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'nscf'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "During self consistency (scf) the threshold is automatically reduced (but never below 1.D-13) when approaching convergence",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&ELECTRONS",
                    "id": "diago_thr_init"
                },
                {
                    "Card_Name": "CONSTRAINTS",
                    "Namelist": "Card: CONSTRAINTS",
                    "Required/Optional": "optional",
                    "Card_Options": [
                        "type_coord",
                        "atom_coord",
                        "distance",
                        "planar_angle",
                        "torsional_angle",
                        "bennett_proj",
                        "potential_wall"
                    ],
                    "Default_Option": null,
                    "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                    "Card_Use_Conditions": {
                        "calculation": [
                            "calculation = 'relax'",
                            "calculation = 'md'"
                        ],
                        "ion_dynamics": [
                            "damp",
                            "verlet"
                        ],
                        "not_compatible": [
                            "calculation = 'vc-relax'",
                            "calculation = 'vc-md'"
                        ]
                    },
                    "Card_Option_Given_Conditions": null,
                    "Syntax_Given_Option": {
                        "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                        "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                        "distance": "constr_type distance constr(1) constr(2) constr_target",
                        "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                        "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                        "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                        "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                    },
                    "Item_Description": {
                        "nconstr": "The total number of constraints to be applied",
                        "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                        "constr_type": "Type of constraint"
                    },
                    "Item_Conditions": null,
                    "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                    "Final_comments": null,
                    "Possible_Usage_Conditions": [
                        "ion_dynamics = 'verlet'",
                        "ion_dynamics = 'damp'"
                    ],
                    "id": "CONSTRAINTS"
                },
                {
                    "Parameter_Name": "tempw",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "300.D0"
                    },
                    "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tempw"
                },
                {
                    "Parameter_Name": "tolp",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "100.D0"
                    },
                    "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&IONS",
                    "id": "tolp"
                },
                {
                    "Parameter_Name": "delta_t",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "1.D0"
                    },
                    "Description": "delta_t\nControls temperature modification in molecular dynamics simulations depending on ion_temperature setting",
                    "Possible_Usage_Conditions": [
                        "calculation = 'relax'",
                        "calculation = 'md'",
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "Parameter_Value_Conditions": {
                        "positive": "when ion_temperature = 'rescale-T': instantaneous temperature is multiplied by delta_t through velocity rescaling",
                        "negative": "when ion_temperature = 'reduce-T': temperature is reduced by -delta_t every 'nraise' steps"
                    },
                    "Final_comments": "For delta_t < 0, the actual average rate of heating or cooling should be roughly C*delta_t/(nraise*dt) (C=1 for an ideal gas, C=0.5 for a harmonic solid, theorem of energy equipartition between all quadratic degrees of freedom). The instantaneous temperature is calculated at the end of every ionic move and BEFORE rescaling. This is the temperature reported in the main output.",
                    "Namelist": "&IONS",
                    "id": "delta_t"
                },
                {
                    "Parameter_Name": "dt",
                    "Value_Type": "real",
                    "Default_Values": {
                        "default": "20.D0"
                    },
                    "Description": "dt\ntime step for molecular dynamics, in Rydberg atomic units (1 a.u.=4.8378 * 10^-17 s : Note, the Car\u2013Parrinello code uses Hartree atomic units, half that much!!!)",
                    "Possible_Usage_Conditions": [
                        "calculation = 'md'"
                    ],
                    "Required/Optional": "optional",
                    "Usage_Conditions": null,
                    "Parameter_Value_Conditions": null,
                    "Final_comments": null,
                    "Namelist": "&CONTROL",
                    "id": "dt"
                }
            ],
            "edges": [
                {
                    "condition": "parameter is automatically set",
                    "source_node": "tprnfor",
                    "source_type": "&CONTROL",
                    "relationship_defined_by": "tprnfor",
                    "source": "tprnfor",
                    "target": "calculation"
                },
                {
                    "condition": "when noinv=.true., time revers",
                    "source_node": "nosym_evc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "nosym_evc",
                    "source": "nosym_evc",
                    "target": "noinv"
                },
                {
                    "condition": "requires smearing and degauss ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "smearing"
                },
                {
                    "condition": "tetrahedra method requires uni",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "K_POINTS"
                },
                {
                    "condition": "from_input option requires occ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "OCCUPATIONS"
                },
                {
                    "condition": "from_input option requires nbn",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "nbnd"
                },
                {
                    "condition": "from_input occupations should ",
                    "source_node": "occupations",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "occupations",
                    "source": "occupations",
                    "target": "tot_charge"
                },
                {
                    "condition": "gaussian smearing for metals o",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "occupations"
                },
                {
                    "condition": "used in Gaussian smearing",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "degauss"
                },
                {
                    "condition": "for spin-polarized calculation",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "nspin"
                },
                {
                    "condition": "for magnetic calculations",
                    "source_node": "smearing",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "smearing",
                    "source": "smearing",
                    "target": "constrained_magnetization"
                },
                {
                    "condition": "must be set to 'esm'",
                    "source_node": "esm_bc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "esm_bc",
                    "source": "esm_bc",
                    "target": "assume_isolated"
                },
                {
                    "condition": "related when bc2 is used",
                    "source_node": "esm_bc",
                    "source_type": "&SYSTEM",
                    "relationship_defined_by": "esm_bc",
                    "source": "esm_bc",
                    "target": "esm_efield"
                },
                {
                    "condition": "referenced when scf_must_conve",
                    "source_node": "scf_must_converge",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "scf_must_converge",
                    "source": "scf_must_converge",
                    "target": "electron_maxstep"
                },
                {
                    "condition": "In nscf calculations, conv_thr",
                    "source_node": "conv_thr",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "conv_thr",
                    "source": "conv_thr",
                    "target": "diago_thr_init"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "calculation"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "mixing_beta"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_mode",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_mode",
                    "source": "mixing_mode",
                    "target": "smearing"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "mixing_mode"
                },
                {
                    "condition": "Used in SCF calculations",
                    "source_node": "mixing_beta",
                    "source_type": "&ELECTRONS",
                    "relationship_defined_by": "mixing_beta",
                    "source": "mixing_beta",
                    "target": "smearing"
                },
                {
                    "condition": "can be used with 'damp' and 'f",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "CONSTRAINTS"
                },
                {
                    "condition": "for vc-relax with 'bfgs', requ",
                    "source_node": "ion_dynamics",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_dynamics",
                    "source": "ion_dynamics",
                    "target": "cell_dynamics"
                },
                {
                    "condition": "'relax', 'md', 'vc-relax', or ",
                    "source_node": "pot_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "pot_extrapolation",
                    "source": "pot_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "'first_order' and 'second-orde",
                    "source_node": "wfc_extrapolation",
                    "source_type": "&IONS",
                    "relationship_defined_by": "wfc_extrapolation",
                    "source": "wfc_extrapolation",
                    "target": "calculation"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tempw"
                },
                {
                    "condition": "used with most temperature con",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "nraise"
                },
                {
                    "condition": "used with rescaling method",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "tolp"
                },
                {
                    "condition": "used with rescale-T and reduce",
                    "source_node": "ion_temperature",
                    "source_type": "&IONS",
                    "relationship_defined_by": "ion_temperature",
                    "source": "ion_temperature",
                    "target": "delta_t"
                },
                {
                    "condition": "reduce-T:\n\"temperature reducti",
                    "source_node": "nraise",
                    "source_type": "&IONS",
                    "relationship_defined_by": "nraise",
                    "source": "nraise",
                    "target": "ion_temperature"
                },
                {
                    "condition": "must be one of: relax, md, vc-",
                    "source_node": "nraise",
                    "source_type": "&IONS",
                    "relationship_defined_by": "nraise",
                    "source": "nraise",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'md' or ion_dynamics m",
                    "source_node": "refold_pos",
                    "source_type": "&IONS",
                    "relationship_defined_by": "refold_pos",
                    "source": "refold_pos",
                    "target": "calculation"
                },
                {
                    "condition": "can be 'damp'",
                    "source_node": "refold_pos",
                    "source_type": "&IONS",
                    "relationship_defined_by": "refold_pos",
                    "source": "refold_pos",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "'conv_thr' is automatically re",
                    "source_node": "upscale",
                    "source_type": "&IONS",
                    "relationship_defined_by": "upscale",
                    "source": "upscale",
                    "target": "conv_thr"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "bfgs_ndim",
                    "source_type": "&IONS",
                    "relationship_defined_by": "bfgs_ndim",
                    "source": "bfgs_ndim",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_max",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_max",
                    "source": "trust_radius_max",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be bfgs",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: relax, md, vc-",
                    "source_node": "trust_radius_min",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_min",
                    "source": "trust_radius_min",
                    "target": "calculation"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "trust_radius_ini",
                    "source_type": "&IONS",
                    "relationship_defined_by": "trust_radius_ini",
                    "source": "trust_radius_ini",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be 'bfgs'",
                    "source_node": "w_1",
                    "source_type": "&IONS",
                    "relationship_defined_by": "w_1",
                    "source": "w_1",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "must be one of: 'relax', 'md',",
                    "source_node": "fire_nmin",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_nmin",
                    "source": "fire_nmin",
                    "target": "calculation"
                },
                {
                    "condition": "must be 'fire'",
                    "source_node": "fire_nmin",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_nmin",
                    "source": "fire_nmin",
                    "target": "ion_dynamics"
                },
                {
                    "condition": "dtmax = fire_dtmax*dt",
                    "source_node": "fire_dtmax",
                    "source_type": "&IONS",
                    "relationship_defined_by": "fire_dtmax",
                    "source": "fire_dtmax",
                    "target": "dt"
                },
                {
                    "condition": "must be 'bfgs' when cell_dynam",
                    "source_node": "cell_dynamics",
                    "source_type": "&CELL",
                    "relationship_defined_by": "cell_dynamics",
                    "source": "cell_dynamics",
                    "target": "ion_dynamics"
                }
            ]
        },
        "trimmed_documentation": [
            {
                "Parameter_Name": "calculation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "scf"
                },
                "Description": "calculation\nA string describing the task to be performed",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'",
                    "calculation = 'bands'",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Fixed cell calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "scf": "standard calculation",
                    "nscf": null,
                    "bands": null,
                    "relax": "only the atomic positions are allowed to vary",
                    "md": "ab-initio molecular dynamics (MD) simulations",
                    "vc-relax": "allows to vary both the atomic positions and lattice constants",
                    "vc-md": "molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "tprnfor",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": null
                },
                "Description": "tprnfor\ncalculate forces",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-md'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'",
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when calculation = 'relax','md','vc-md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "parameter is automatically set to .TRUE. when calculation is 'relax','md','vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "lorbm",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "lorbm\nIf .TRUE. perform orbital magnetization calculation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'nscf'",
                    "norm-conserving pseudopotentials",
                    "Uniform k-point grid",
                    "Kubo terms"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.",
                "Parameter_Value_Conditions": {
                    "TRUE": "Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed."
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lelfield": "If lelfield=.true., only Kubo terms are computed"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "twochem",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.",
                "Possible_Usage_Conditions": [
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".TRUE.": "when performing two chemical potential calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "must be set to smearing",
                    "nelec_cond": "related parameter",
                    "nbnd_cond": "related parameter",
                    "degauss_cond": "related parameter"
                },
                "Final_comments": null,
                "Namelist": "&CONTROL"
            },
            {
                "Parameter_Name": "ntyp",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "ntyp\nnumber of types of atoms in the unit cell",
                "Possible_Usage_Conditions": [],
                "Required/Optional": "required",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nbnd",
                "Value_Type": "integer",
                "Default_Values": {
                    "insulator": "number of valence bands (number_of_electrons/2)",
                    "metal": "(number of valence bands)*1.2"
                },
                "Description": "nbnd\nNumber of electronic states (bands) to be calculated.",
                "Possible_Usage_Conditions": [
                    "Insulating systems",
                    "Metallic systems",
                    "Spin-polarized calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nr1s, nr2s, nr3s",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )",
                "Possible_Usage_Conditions": [
                    "Smooth FFT grid",
                    "Ultrasoft pseudopotentials",
                    "PAW sets"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "all three dimensions should be set, to use this parameter",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "nr1, nr2, nr3": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutrho": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc",
                    "ecutwfc": "Coincides with nr1, nr2, nr3 if ecutrho = 4 * ecutwfc"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "nosym_evc",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.",
                "Possible_Usage_Conditions": [
                    "Monkhorst-Pack grid",
                    "custom k-points",
                    "full BZ coverage"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "TRUE": "symmetry is not used, k points have Bravais lattice symmetry"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "noinv": "when noinv=.true., time reversal symmetry is not assumed"
                },
                "Final_comments": "This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "occupations",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null
                },
                "Description": "occupations\nControls how electronic occupations are determined",
                "Possible_Usage_Conditions": [
                    "DOS calculations",
                    "stress calculations",
                    "Relaxation calculations",
                    "Dynamics calculations",
                    "Metallic systems",
                    "Insulating systems",
                    "Uniform k-point grid",
                    "Single k-point",
                    "occupations = 'smearing'",
                    "Tetrahedron method (Bloechl's version)",
                    "Linear tetrahedron method",
                    "Optimized tetrahedron method",
                    "Fixed occupations",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": null,
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "smearing": "for metals, requires parameters smearing and degauss",
                    "tetrahedra": "requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations",
                    "tetrahedra_lin": "original linear tetrahedron method, reference only",
                    "tetrahedra_opt": "optimized tetrahedron method, can be used for phonon calculations",
                    "fixed": "for insulators with a gap",
                    "from_input": "valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "smearing": "requires smearing and degauss parameters",
                    "K_POINTS": "tetrahedra method requires uniform grid of k-points",
                    "OCCUPATIONS": "from_input option requires occupations to be read from OCCUPATIONS card",
                    "nbnd": "from_input option requires nbnd parameter to be set",
                    "tot_charge": "from_input occupations should be consistent with tot_charge"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "one_atom_occupations",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.",
                "Possible_Usage_Conditions": [
                    "single atom/isolated systems",
                    "UPF pseudopotentials",
                    "Non-collinear magnetic calculations",
                    "Spin-orbit coupling",
                    "starting_magnetization=0.0",
                    "Isolated (non-periodic) systems",
                    "occupations = 'from_input'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used only for isolated atoms (nat=1) and when occupations='from_input'",
                "Parameter_Value_Conditions": {
                    "TRUE": "When ordering of wavefunctions as atomic starting wavefunctions is needed"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "Must be set to 'from_input'",
                    "nat": "Must be 1",
                    "starting_magnetization": "Equal to 0.0 for spin-orbit with time-reversal case",
                    "starting_spin_angle": "Can be set to TRUE in magnetic case with spin-orbit"
                },
                "Final_comments": "The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss_cond",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0 Ry"
                },
                "Description": "degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)",
                "Possible_Usage_Conditions": [
                    "Two-chemical-potential calculations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used in two-chemical potential calculations when twochem = .True.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "twochem": "Parameter is used when twochem = .True."
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "degauss",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.D0"
                },
                "Description": "degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.",
                "Possible_Usage_Conditions": [
                    "calculation = 'bands'",
                    "Metallic systems",
                    "partial occupations",
                    "occupations = 'smearing'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "smearing",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "gaussian"
                },
                "Description": "smearing\nControls the type of smearing method to be used",
                "Possible_Usage_Conditions": [
                    "Metallic systems",
                    "Semiconductor systems",
                    "partial occupations",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "gaussian/gauss": "ordinary Gaussian spreading",
                    "methfessel-paxton/m-p/mp": "Methfessel-Paxton first-order spreading, m-p, mp",
                    "marzari-vanderbilt/cold/m-v/mv": "Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv",
                    "fermi-dirac/f-d/fd": "smearing with Fermi-Dirac function, f-d, fd"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "occupations": "gaussian smearing for metals occupations='smearing'",
                    "degauss": "used in Gaussian smearing",
                    "nspin": "for spin-polarized calculations",
                    "constrained_magnetization": "for magnetic calculations"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "assume_isolated",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)",
                "Possible_Usage_Conditions": [
                    "calculation = 'vc-relax'",
                    "Cubic supercells",
                    "2D periodic systems in x-y plane",
                    "Isolated (non-periodic) systems",
                    "charged slabs",
                    "vacuum boundaries",
                    "electrode boundaries",
                    "optional electric field"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "none": "regular periodic calculation w/o any correction",
                    "makov-payne": "ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)",
                    "esm": "Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0",
                    "2D": "The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "esm_bc": "Used with esm to choose boundary conditions",
                    "esm_efield": "Used with esm for optional electric field",
                    "esm_w": "Related to esm",
                    "esm_nfit": "Related to esm",
                    "cell_dofree": "Should be set to \"2Dxy\" when using 2D option in vc-relax calculations"
                },
                "Final_comments": "For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.",
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "esm_bc",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "pbc"
                },
                "Description": "esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.",
                "Possible_Usage_Conditions": [
                    "ESM calculations",
                    "Slab systems",
                    "Isolated (non-periodic) systems"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Used when assume_isolated = 'esm'",
                "Parameter_Value_Conditions": {
                    "pbc": "regular periodic calculation (no ESM)",
                    "bc1": "Vacuum-slab-vacuum (open boundary conditions)",
                    "bc2": "Metal-slab-metal (dual electrode configuration)",
                    "bc3": "Vacuum-slab-metal"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "assume_isolated": "must be set to 'esm'",
                    "esm_efield": "related when bc2 is used"
                },
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "gcscf_beta",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.05D0"
                },
                "Description": "gcscf_beta\nMixing factor for GC-SCF.",
                "Possible_Usage_Conditions": [
                    "GC-SCF calculations",
                    "DOS of materials",
                    "Materials like graphite",
                    "Grand canonical ensemble"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Larger values are recommended if systems with small DOS on Fermi surface as graphite.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&SYSTEM"
            },
            {
                "Parameter_Name": "scf_must_converge",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": ".TRUE."
                },
                "Description": "scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Relaxation calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    ".false.": "allows continuation of MD/ionic relaxation even if electron_maxstep is reached"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "electron_maxstep": "referenced when scf_must_converge is .false."
                },
                "Final_comments": "Use with care.",
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-6"
                },
                "Description": "conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)",
                "Possible_Usage_Conditions": [
                    "calculation = 'scf'",
                    "calculation = 'nscf'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "diago_thr_init": "In nscf calculations, conv_thr is used to set the default value of the threshold (ethr) for iterative diagonalization"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_mode",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "plain"
                },
                "Description": "mixing_mode\nControls the type of charge density mixing method",
                "Possible_Usage_Conditions": [
                    "homogeneous systems",
                    "inhomogeneous systems",
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": {
                    "plain": "charge density Broyden mixing",
                    "TF": "charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)",
                    "local-TF": "charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "Used in SCF calculations",
                    "mixing_beta": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "mixing_beta",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.7D0"
                },
                "Description": "mixing_beta\nmixing factor for self-consistency ('scf')",
                "Possible_Usage_Conditions": [
                    "Smearing method"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": null,
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "mixing_mode": "Used in SCF calculations",
                    "smearing": "Used in SCF calculations"
                },
                "Final_comments": null,
                "Namelist": "&ELECTRONS"
            },
            {
                "Parameter_Name": "ion_positions",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "default"
                },
                "Description": "ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "",
                "Parameter_Value_Conditions": {
                    "default": "if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input",
                    "from_input": "read atomic positions from standard input, even if restarting"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation=relax": "bfgs",
                    "calculation=md": "verlet",
                    "calculation=vc-relax": "bfgs",
                    "calculation=vc-md": "beeman"
                },
                "Description": "ion_dynamics\nSpecify the type of ionic dynamics.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure",
                    "damp": "for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics",
                    "fire": "for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration",
                    "verlet": "for calculation='md', uses Verlet algorithm to integrate Newton's equation",
                    "langevin": "for calculation='md', ion dynamics is over-damped Langevin",
                    "langevin-smc": "for calculation='md', over-damped Langevin with Smart Monte Carlo",
                    "beeman": "for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "CONSTRAINTS": "can be used with 'damp' and 'fire' for constrained optimization, and with 'verlet' for constrained dynamics",
                    "cell_dynamics": "for vc-relax with 'bfgs', requires cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "pot_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "atomic"
                },
                "Description": "pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "atomic": "extrapolate the potential as if it was a sum of atomic-like orbitals",
                    "first_order": "extrapolate the potential with first-order formula",
                    "second_order": "extrapolate the potential with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations",
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "wfc_extrapolation",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "none"
                },
                "Description": "wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "none": "no extrapolation",
                    "first_order": "extrapolate the wave-functions with first-order formula",
                    "second_order": "extrapolate the wave-functions with second order formula"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "ion_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "ion_temperature\nControls the ionic temperature using different methods",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD",
                    "rescale-v": "control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise",
                    "rescale-T": "scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling",
                    "reduce-T": "reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling",
                    "berendsen": "control ionic temperature using soft velocity rescaling - see parameters tempw and nraise",
                    "andersen": "control ionic temperature using Andersen thermostat see parameters tempw and nraise",
                    "svr": "control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise",
                    "initial": "initialize ion velocities to temperature tempw and leave uncontrolled further on",
                    "not_controlled": "(default) ionic temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tempw": "used with most temperature control methods",
                    "nraise": "used with most temperature control methods",
                    "tolp": "used with rescaling method",
                    "delta_t": "used with rescale-T and reduce-T methods"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "tempw",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "300.D0"
                },
                "Description": "tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "tolp",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {},
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'",
                "Parameter_Value_Conditions": {
                    "nraise*dt": "when ion_temperature = 'berendsen' or 'svr'",
                    "1/nraise": "when ion_temperature = 'andersen'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_temperature": {
                        "reduce-T": "temperature reduction by delta_t",
                        "rescale-v": "average temperature rescaling to tempw",
                        "rescaling": "instantaneous temperature rescaling to tempw (with vc-md)",
                        "berendsen": "rise time parameter calculation",
                        "andersen": "collision frequency parameter calculation",
                        "svr": "characteristic time setting"
                    },
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "refold_pos",
                "Value_Type": "logical",
                "Default_Values": {
                    "default": false
                },
                "Description": "refold_pos\nIf true the ions are refolded at each step into the supercell.",
                "Possible_Usage_Conditions": [
                    "calculation = 'md'",
                    "calculation = 'relax'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'damp'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be 'md' or ion_dynamics must be 'damp'",
                    "ion_dynamics": "can be 'damp'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "upscale",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "100.D0"
                },
                "Description": "upscale\nMax reduction factor for 'conv_thr' during structural optimization",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "conv_thr": "'conv_thr' is automatically reduced when the relaxation approaches convergence so that forces are still accurate, but 'conv_thr' will not be reduced to less that conv_thr / upscale"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "bfgs_ndim",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 1
                },
                "Description": "bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "1": "standard quasi-Newton BFGS method is used"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_max",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.8D0"
                },
                "Description": "trust_radius_max\nMaximum ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_min",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-3"
                },
                "Description": "trust_radius_min\nMinimum ionic displacement in the structural relaxation",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": {
                    "trust_radius < trust_radius_min": "BFGS is reset"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be bfgs",
                    "calculation": "must be one of: relax, md, vc-relax, or vc-md"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "trust_radius_ini",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "trust_radius_ini\nInitial ionic displacement in the structural relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_1",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.01D0"
                },
                "Description": "w_1\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "w_2",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "w_2\nParameters used in line search based on the Wolfe conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'bfgs'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_alpha_init",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.2D0"
                },
                "Description": "fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": {
                    "0.1-0.3": "recommended values"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_falpha",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.99D0"
                },
                "Description": "fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_nmin",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 5
                },
                "Description": "fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'",
                    "ion_dynamics": "must be 'fire'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_inc",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.1D0"
                },
                "Description": "fire_f_inc\nFactor for increasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_f_dec",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "0.5D0"
                },
                "Description": "fire_f_dec\nFactor for decreasing 'dt'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'",
                    "ion_dynamics = 'fire'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'fire'",
                    "calculation": "must be one of: 'relax', 'md', 'vc-relax', or 'vc-md'"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "fire_dtmax",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "10.D0"
                },
                "Description": "fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "calculation = 'vc-relax'",
                    "calculation = 'vc-md'"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "dt": "dtmax = fire_dtmax*dt"
                },
                "Final_comments": null,
                "Namelist": "&IONS"
            },
            {
                "Parameter_Name": "cell_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "default": null,
                    "vc-relax": "bfgs"
                },
                "Description": "cell_dynamics\nSpecify the type of dynamics for the cell.",
                "Possible_Usage_Conditions": [
                    "Dynamics calculations",
                    "Variable cell calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only in 'vc-relax' or 'vc-md' calculation",
                "Parameter_Value_Conditions": {
                    "none": "no dynamics (both vc-relax and vc-md)",
                    "damp-pr": "damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)",
                    "damp-w": "damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)",
                    "bfgs": "BFGS quasi-newton algorithm (vc-relax)",
                    "pr": "(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)",
                    "w": "(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be 'bfgs' when cell_dynamics='bfgs'"
                },
                "Final_comments": null,
                "Namelist": "&CELL"
            },
            {
                "Parameter_Name": "fcp_mu",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null
                },
                "Description": "fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "constant chemical potential conditions"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if lfcp = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_dynamics",
                "Value_Type": "character",
                "Default_Values": {
                    "calculation = relax": "bfgs",
                    "calculation = md": "velocity-verlet"
                },
                "Description": "fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "bfgs": "calculation = 'relax'",
                    "newton": "calculation = 'relax'",
                    "damp": "calculation = 'relax'",
                    "lm": "calculation = 'relax'",
                    "velocity-verlet": "calculation = 'md'",
                    "verlet": "calculation = 'md'"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": {
                        "bfgs": "must be bfgs",
                        "newton": "must be damp",
                        "damp": "must be damp",
                        "lm": "must be damp",
                        "velocity-verlet": "must be verlet",
                        "verlet": "must be verlet"
                    }
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_conv_thr",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "1.D-2"
                },
                "Description": "fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_ndiis",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": 4
                },
                "Description": "fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'",
                    "fcp_dynamics": "only used if equal to 'newton'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_mass",
                "Value_Type": "real",
                "Default_Values": {
                    "default": null,
                    "ESM": "5.D+6 / (xy area)",
                    "ESM-RISM": "5.D+4 / (xy area)"
                },
                "Description": "fcp_mass\nMass of the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_velocity",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "determined by fcp_temperature"
                },
                "Description": "fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be 'relax' or 'md'",
                    "fcp_temperature": "determines default value"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_temperature",
                "Value_Type": "character",
                "Default_Values": {
                    "default": "not_controlled"
                },
                "Description": "fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'",
                "Parameter_Value_Conditions": {
                    "rescaling": "control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'",
                    "rescale-v": "control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "rescale-T": "control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'",
                    "reduce-T": "reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'",
                    "berendsen": "control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "andersen": "control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'",
                    "initial": "initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on",
                    "not_controlled": "(default) FCP's temperature is not controlled"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_tempw": [
                        "rescaling",
                        "rescale-v",
                        "berendsen",
                        "andersen",
                        "initial"
                    ],
                    "fcp_tolp": [
                        "rescaling"
                    ],
                    "fcp_nraise": [
                        "rescale-v",
                        "reduce-T",
                        "berendsen",
                        "andersen"
                    ],
                    "fcp_delta_t": [
                        "rescale-T",
                        "reduce-T"
                    ]
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_tempw",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from tempw"
                },
                "Description": "fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "lfcp": "must be .TRUE.",
                    "calculation": "must be relax or md"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_tolp",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from tolp"
                },
                "Description": "fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "tolp": "reads default value from"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_delta_t",
                "Value_Type": "real",
                "Default_Values": {
                    "default": "reads from &IONS -> delta_t"
                },
                "Description": "fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_delta_t < 0": "For cooling/heating rate calculation"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "&IONS": "reads default value from delta_t",
                    "fcp_nraise": "Used in reduce-T mode for step counting",
                    "fcp_temperature": "Determines mode of operation"
                },
                "Final_comments": "The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.",
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "fcp_nraise",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": "reads from nraise"
                },
                "Description": "fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter",
                "Possible_Usage_Conditions": [
                    "calculation = 'relax'",
                    "calculation = 'md'",
                    "FCP calculations",
                    "lfcp = .TRUE."
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if lfcp = .TRUE. AND calculation = relax and md",
                "Parameter_Value_Conditions": {
                    "fcp_temperature = reduce-T": "every fcp_nraise steps temperature reduced by -fcp_delta_t",
                    "fcp_temperature = rescale-v": "every fcp_nraise steps average temperature rescaled to fcp_tempw",
                    "fcp_temperature = berendsen": "tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise",
                    "fcp_temperature = andersen": "nu*dt = 1/fcp_nraise"
                },
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "fcp_temperature": "determines how fcp_nraise is used",
                    "fcp_delta_t": "used when fcp_temperature = reduce-T",
                    "fcp_tempw": "used when fcp_temperature = rescale-v"
                },
                "Final_comments": null,
                "Namelist": "&FCP"
            },
            {
                "Parameter_Name": "nsolv",
                "Value_Type": "integer",
                "Default_Values": {
                    "default": null
                },
                "Description": "nsolv\nThe number of solvents (i.e. molecular species) in the unit cell",
                "Possible_Usage_Conditions": [
                    "RISM calculations"
                ],
                "Required/Optional": "required",
                "Usage_Conditions": "Only if trism = .TRUE.",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE."
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Parameter_Name": "laue_starting_left",
                "Value_Type": "real",
                "Default_Values": {
                    "default": 0.0
                },
                "Description": "laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.",
                "Possible_Usage_Conditions": [
                    "RISM calculations",
                    "Periodic systems",
                    "Laue boundary conditions",
                    "Systems with solvent-solute interactions"
                ],
                "Required/Optional": "optional",
                "Usage_Conditions": "Only if trism = .TRUE. and for Laue-RISM",
                "Parameter_Value_Conditions": null,
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "trism": "must be .TRUE.",
                    "laue_expand_left": "used in solvent region definition"
                },
                "Final_comments": null,
                "Namelist": "&RISM"
            },
            {
                "Card_Name": "CONSTRAINTS",
                "Namelist": "Card: CONSTRAINTS",
                "Required/Optional": "optional",
                "Card_Options": [
                    "type_coord",
                    "atom_coord",
                    "distance",
                    "planar_angle",
                    "torsional_angle",
                    "bennett_proj",
                    "potential_wall"
                ],
                "Default_Option": null,
                "Description": "Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.",
                "Card_Use_Conditions": {
                    "calculation": [
                        "calculation = 'relax'",
                        "calculation = 'md'"
                    ],
                    "ion_dynamics": [
                        "damp",
                        "verlet"
                    ],
                    "not_compatible": [
                        "calculation = 'vc-relax'",
                        "calculation = 'vc-md'"
                    ]
                },
                "Card_Option_Given_Conditions": null,
                "Syntax_Given_Option": {
                    "type_coord": "constr_type type_coord constr(1) constr(2) constr(3) constr(4)",
                    "atom_coord": "constr_type atom_coord constr(1) constr(2) constr(3) constr(4)",
                    "distance": "constr_type distance constr(1) constr(2) constr_target",
                    "planar_angle": "constr_type planar_angle constr(1) constr(2) constr(3) constr_target",
                    "torsional_angle": "constr_type torsional_angle constr(1) constr(2) constr(3) constr(4) constr_target",
                    "bennett_proj": "constr_type bennett_proj constr(1) constr(2) constr(3) constr(4)",
                    "potential_wall": "constr_type potential_wall constr(1) constr(2) constr(3)"
                },
                "Item_Description": {
                    "nconstr": "The total number of constraints to be applied",
                    "constr_tol": "Optional tolerance value for how strictly constraints should be enforced",
                    "constr_type": "Type of constraint"
                },
                "Item_Conditions": null,
                "General_Syntax": "CONSTRAINTS\nnconstr   { constr_tol   }\nconstr_type(1) \t constr(1)(1) \t constr(2)(1) \t[\t constr(3)(1)  \t constr(4)(1)  \t]\t{\t constr_target(1) \t}\nconstr_type(2) \t constr(1)(2) \t constr(2)(2) \t[\t constr(3)(2)  \t constr(4)(2)  \t]\t{\t constr_target(2) \t}\nconstr_type(nconstr) \t constr(1)(nconstr) \t constr(2)(nconstr) \t[\t constr(3)(nconstr)  \t constr(4)(nconstr)  \t]\t{\t constr_target(nconstr) \t}",
                "Relationships_Conditions_to_Other_Parameters_Cards": {
                    "ion_dynamics": "must be set to 'damp' or 'verlet'"
                },
                "Final_comments": null,
                "Possible_Usage_Conditions": [
                    "ion_dynamics = 'verlet'",
                    "ion_dynamics = 'damp'"
                ]
            }
        ],
        "trimmed_documentation_string": [
            "Parameter_Name:\n\"fcp_velocity\"\nDefault_Values:\n{\n  default:\n\"determined by fcp_temperature\"\n}\nDescription:\n\"fcp_velocity\nInitial velocity of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"gcscf_beta\"\nDefault_Values:\n{\n  default:\n\"0.05D0\"\n}\nDescription:\n\"gcscf_beta\nMixing factor for GC-SCF.\"\nPossible_Usage_Conditions: [\n  GC-SCF calculations,\n  DOS of materials,\n  Materials like graphite,\n  Grand canonical ensemble,\n]\nUsage_Conditions:\n\"Larger values are recommended if systems with small DOS on Fermi surface as graphite.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"ion_positions\"\nDefault_Values:\n{\n  default:\n\"default\"\n}\nDescription:\n\"ion_positions\nControls how atomic positions are determined, either from restart file or standard input depending on the option chosen\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"\"\nParameter_Value_Conditions:\n{\n  default:\n\"if restarting, use atomic positions read from the restart file; in all other cases, use atomic positions from standard input\"\n  from_input:\n\"read atomic positions from standard input, even if restarting\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"cell_dynamics\"\nDefault_Values:\n{\n  default: None\n  vc-relax:\n\"bfgs\"\n}\nDescription:\n\"cell_dynamics\nSpecify the type of dynamics for the cell.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"Only in 'vc-relax' or 'vc-md' calculation\"\nParameter_Value_Conditions:\n{\n  none:\n\"no dynamics (both vc-relax and vc-md)\"\n  damp-pr:\n\"damped (Beeman) dynamics of the Parrinello-Rahman extended lagrangian (vc-relax)\"\n  damp-w:\n\"damped (Beeman) dynamics of the new Wentzcovitch extended lagrangian (vc-relax)\"\n  bfgs:\n\"BFGS quasi-newton algorithm (vc-relax)\"\n  pr:\n\"(Beeman) molecular dynamics of the Parrinello-Rahman extended lagrangian (vc-md)\"\n  w:\n\"(Beeman) molecular dynamics of the new Wentzcovitch extended lagrangian (vc-md)\"\n}\nFinal_comments: None\nNamelist:\n\"&CELL\"",
            "Parameter_Name:\n\"degauss\"\nDefault_Values:\n{\n  default:\n\"0.D0\"\n}\nDescription:\n\"degauss\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in metals.\"\nPossible_Usage_Conditions: [\n  calculation = 'bands',\n  Metallic systems,\n  partial occupations,\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nr1s, nr2s, nr3s\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nr1s, nr2s, nr3s\nThree-dimensional mesh for wavefunction FFT and for the smooth part of charge density ( smooth grid )\"\nPossible_Usage_Conditions: [\n  Smooth FFT grid,\n  Ultrasoft pseudopotentials,\n  PAW sets,\n]\nUsage_Conditions:\n\"all three dimensions should be set, to use this parameter\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"calculation\"\nDefault_Values:\n{\n  default:\n\"scf\"\n}\nDescription:\n\"calculation\nA string describing the task to be performed\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n  calculation = 'bands',\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Fixed cell calculations,\n  Variable cell calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  scf:\n\"standard calculation\"\n  nscf: None\n  bands: None\n  relax:\n\"only the atomic positions are allowed to vary\"\n  md:\n\"ab-initio molecular dynamics (MD) simulations\"\n  vc-relax:\n\"allows to vary both the atomic positions and lattice constants\"\n  vc-md:\n\"molecular dynamics (MD) simulations, vary both the atomic positions and lattice constants (vc = variable-cell)\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"assume_isolated\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"assume_isolated\nUsed to perform calculation assuming the system to be isolated (a molecule or a cluster in a 3D supercell)\"\nPossible_Usage_Conditions: [\n  calculation = 'vc-relax',\n  Cubic supercells,\n  2D periodic systems in x-y plane,\n  Isolated (non-periodic) systems,\n  charged slabs,\n  vacuum boundaries,\n  electrode boundaries,\n  optional electric field,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  none:\n\"regular periodic calculation w/o any correction\"\n  makov-payne:\n\"ONLY FOR CUBIC SYSTEMS (ibrav=1,2,3)\"\n  esm:\n\"Requires cell with a_3 lattice vector along z, normal to the xy plane, with the slab centered around z=0\"\n  2D:\n\"The length of the unit-cell along the z direction should be larger than twice the thickness of the 2D material\"\n}\nFinal_comments:\n\"For 2D option: there is a lower limit of 20 bohr imposed by the cutoff radius used to read pseudopotentials. Linear-response calculations done on top of a self-consistent calculation with this flag will automatically be performed in the 2D framework as well.\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"refold_pos\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"refold_pos\nIf true the ions are refolded at each step into the supercell.\"\nPossible_Usage_Conditions: [\n  calculation = 'md',\n  calculation = 'relax',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'damp',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'. Applies only in the case of calculation = 'md' or damped dynamics (ion_dynamics = 'damp')\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_alpha_init\"\nDefault_Values:\n{\n  default:\n\"0.2D0\"\n}\nDescription:\n\"fire_alpha_init\nInitial value of the alpha mixing factor in the FIRE minimization scheme; recommended values are between 0.1 and 0.3\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions:\n{\n  0.1-0.3:\n\"recommended values\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fire_f_dec\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"fire_f_dec\nFactor for decreasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_tolp\"\nDefault_Values:\n{\n  default:\n\"reads from tolp\"\n}\nDescription:\n\"fcp_tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than tolp.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fire_f_inc\"\nDefault_Values:\n{\n  default:\n\"1.1D0\"\n}\nDescription:\n\"fire_f_inc\nFactor for increasing 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'fire',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Card_Name:\n\"CONSTRAINTS\"\nNamelist:\n\"Card: CONSTRAINTS\"\nDescription:\n\"Used to impose specific geometric constraints during molecular dynamics simulations or constrained optimization processes. These constraints can apply to distances, angles, or coordination numbers between atoms.\"\nFinal_comments: None\nPossible_Usage_Conditions: [\n  ion_dynamics = 'verlet',\n  ion_dynamics = 'damp',\n]",
            "Parameter_Name:\n\"fire_nmin\"\nDefault_Values:\n{\n  default:\n5\n}\nDescription:\n\"fire_nmin\nMinimum number of steps with P > 0 before increase of 'dt'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"mixing_mode\"\nDefault_Values:\n{\n  default:\n\"plain\"\n}\nDescription:\n\"mixing_mode\nControls the type of charge density mixing method\"\nPossible_Usage_Conditions: [\n  homogeneous systems,\n  inhomogeneous systems,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  plain:\n\"charge density Broyden mixing\"\n  TF:\n\"charge density Broyden mixing with simple Thomas-Fermi screening (for highly homogeneous systems)\"\n  local-TF:\n\"charge density Broyden mixing with local-density-dependent TF screening (for highly inhomogeneous systems)\"\n}\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"upscale\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"upscale\nMax reduction factor for 'conv_thr' during structural optimization\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"esm_bc\"\nDefault_Values:\n{\n  default:\n\"pbc\"\n}\nDescription:\n\"esm_bc\nIf assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.\"\nPossible_Usage_Conditions: [\n  ESM calculations,\n  Slab systems,\n  Isolated (non-periodic) systems,\n]\nUsage_Conditions:\n\"Used when assume_isolated = 'esm'\"\nParameter_Value_Conditions:\n{\n  pbc:\n\"regular periodic calculation (no ESM)\"\n  bc1:\n\"Vacuum-slab-vacuum (open boundary conditions)\"\n  bc2:\n\"Metal-slab-metal (dual electrode configuration)\"\n  bc3:\n\"Vacuum-slab-metal\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"pot_extrapolation\"\nDefault_Values:\n{\n  default:\n\"atomic\"\n}\nDescription:\n\"pot_extrapolation\nUsed to extrapolate the potential from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  atomic:\n\"extrapolate the potential as if it was a sum of atomic-like orbitals\"\n  first_order:\n\"extrapolate the potential with first-order formula\"\n  second_order:\n\"extrapolate the potential with second order formula\"\n}\nFinal_comments:\n\"'first_order' and 'second-order' extrapolation make sense only for molecular dynamics ('md') calculations\"\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"trust_radius_ini\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"trust_radius_ini\nInitial ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_nraise\"\nDefault_Values:\n{\n  default:\n\"reads from nraise\"\n}\nDescription:\n\"fcp_nraise\nFictitious Charge Particle (FCP) parameter that controls temperature adjustments based on fcp_temperature setting: for reduce-T mode, controls steps between temperature reductions; for rescale-v mode, controls steps for temperature rescaling; for berendsen mode, controls rise time parameter; for andersen mode, controls collision frequency parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_temperature = reduce-T:\n\"every fcp_nraise steps temperature reduced by -fcp_delta_t\"\n  fcp_temperature = rescale-v:\n\"every fcp_nraise steps average temperature rescaled to fcp_tempw\"\n  fcp_temperature = berendsen:\n\"tau = fcp_nraise*dt, dt/tau = 1/fcp_nraise\"\n  fcp_temperature = andersen:\n\"nu*dt = 1/fcp_nraise\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"one_atom_occupations\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"one_atom_occupations\nFlag used for isolated atoms (nat=1) together with occupations='from_input'. If TRUE, wavefunctions are ordered as atomic starting wavefunctions, independently from their eigenvalue. The occupations indicate which atomic states are filled.\"\nPossible_Usage_Conditions: [\n  single atom/isolated systems,\n  UPF pseudopotentials,\n  Non-collinear magnetic calculations,\n  Spin-orbit coupling,\n  starting_magnetization=0.0,\n  Isolated (non-periodic) systems,\n  occupations = 'from_input',\n]\nUsage_Conditions:\n\"Used only for isolated atoms (nat=1) and when occupations='from_input'\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"When ordering of wavefunctions as atomic starting wavefunctions is needed\"\n}\nFinal_comments:\n\"The order of states is written inside the UPF pseudopotential file. Different ordering schemes exist for scalar relativistic case (S, P, D orbitals), noncollinear magnetic case (doubled states), and spin-orbit cases (spin-angle functions).\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"occupations\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"occupations\nControls how electronic occupations are determined\"\nPossible_Usage_Conditions: [\n  DOS calculations,\n  stress calculations,\n  Relaxation calculations,\n  Dynamics calculations,\n  Metallic systems,\n  Insulating systems,\n  Uniform k-point grid,\n  Single k-point,\n  occupations = 'smearing',\n  Tetrahedron method (Bloechl's version),\n  Linear tetrahedron method,\n  Optimized tetrahedron method,\n  Fixed occupations,\n  occupations = 'from_input',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  smearing:\n\"for metals, requires parameters smearing and degauss\"\n  tetrahedra:\n\"requires uniform grid of k-points, suitable for DOS calculations, less suitable for force/optimization/dynamics calculations\"\n  tetrahedra_lin:\n\"original linear tetrahedron method, reference only\"\n  tetrahedra_opt:\n\"optimized tetrahedron method, can be used for phonon calculations\"\n  fixed:\n\"for insulators with a gap\"\n  from_input:\n\"valid only for single k-point, requires nbnd to be set in input, occupations should be consistent with tot_charge\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"w_2\"\nDefault_Values:\n{\n  default:\n\"0.5D0\"\n}\nDescription:\n\"w_2\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"tprnfor\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"tprnfor\ncalculate forces\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-md',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"It is set to .TRUE. automatically if calculation = 'relax','md','vc-md'\"\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when calculation = 'relax','md','vc-md'\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"smearing\"\nDefault_Values:\n{\n  default:\n\"gaussian\"\n}\nDescription:\n\"smearing\nControls the type of smearing method to be used\"\nPossible_Usage_Conditions: [\n  Metallic systems,\n  Semiconductor systems,\n  partial occupations,\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  gaussian/gauss:\n\"ordinary Gaussian spreading\"\n  methfessel-paxton/m-p/mp:\n\"Methfessel-Paxton first-order spreading, m-p, mp\"\n  marzari-vanderbilt/cold/m-v/mv:\n\"Marzari-Vanderbilt-DeVita-Payne cold smearing, cold, m-v, mv\"\n  fermi-dirac/f-d/fd:\n\"smearing with Fermi-Dirac function, f-d, fd\"\n}\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"mixing_beta\"\nDefault_Values:\n{\n  default:\n\"0.7D0\"\n}\nDescription:\n\"mixing_beta\nmixing factor for self-consistency ('scf')\"\nPossible_Usage_Conditions: [\n  Smearing method,\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"tolp\"\nDefault_Values:\n{\n  default:\n\"100.D0\"\n}\nDescription:\n\"tolp\nTolerance for velocity rescaling. Velocities are rescaled if the run-averaged and target temperature differ more than 'tolp'.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"lorbm\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"lorbm\nIf .TRUE. perform orbital magnetization calculation.\"\nPossible_Usage_Conditions: [\n  calculation = 'nscf',\n  norm-conserving pseudopotentials,\n  Uniform k-point grid,\n  Kubo terms,\n]\nUsage_Conditions:\n\"Works ONLY with norm-conserving pseudopotentials. The type of calculation should be nscf and should be performed on an automatically generated uniform grid of k points.\"\nParameter_Value_Conditions:\n{\n  TRUE:\n\"Performs orbital magnetization calculation. If lelfield=.true., only Kubo terms are computed.\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"trust_radius_max\"\nDefault_Values:\n{\n  default:\n\"0.8D0\"\n}\nDescription:\n\"trust_radius_max\nMaximum ionic displacement in the structural relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_mu\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"fcp_mu\nThe target Fermi energy (eV). Fictitious Charge Particle (FCP) The FCP method introduces a fictitious particle with an assigned charge to facilitate simulations under constant chemical potential conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  constant chemical potential conditions,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"scf_must_converge\"\nDefault_Values:\n{\n  default:\n\".TRUE.\"\n}\nDescription:\n\"scf_must_converge\nIf .false. do not stop molecular dynamics or ionic relaxation when 'electron_maxstep' is reached. Use with care.\"\nPossible_Usage_Conditions: [\n  Dynamics calculations,\n  Relaxation calculations,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .false.:\n\"allows continuation of MD/ionic relaxation even if electron_maxstep is reached\"\n}\nFinal_comments:\n\"Use with care.\"\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"fcp_tempw\"\nDefault_Values:\n{\n  default:\n\"reads from tempw\"\n}\nDescription:\n\"fcp_tempw\nStarting temperature (Kelvin) in Fictitious Charge Particle (FCP) dynamics runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"bfgs_ndim\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"bfgs_ndim\nNumber of old forces and displacements vectors used in the PULAY mixing of the residual vectors obtained on the basis of the inverse hessian matrix given by the BFGS algorithm. When bfgs_ndim = 1, the standard quasi-Newton BFGS method is used.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  1:\n\"standard quasi-Newton BFGS method is used\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"tempw\"\nDefault_Values:\n{\n  default:\n\"300.D0\"\n}\nDescription:\n\"tempw\nStarting temperature (Kelvin) in MD runs target temperature for most thermostats.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nsolv\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"nsolv\nThe number of solvents (i.e. molecular species) in the unit cell\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"fcp_ndiis\"\nDefault_Values:\n{\n  default:\n4\n}\nDescription:\n\"fcp_ndiis\nSize of Direct Inversion in the Iterative Subspace (DIIS) for Fictitious Charge Particle (FCP) relaxation, used only if fcp_dynamics = 'newton'\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"laue_starting_left\"\nDefault_Values:\n{\n  default:\n0.0\n}\nDescription:\n\"laue_starting_left\nSet the starting position [in a.u.] of the solvent region on left-hand side of the unit cell. Then the solvent region is defined as [ -L_z/2 - laue_expand_left , laue_starting_left ], where distribution functions are finite.\"\nPossible_Usage_Conditions: [\n  RISM calculations,\n  Periodic systems,\n  Laue boundary conditions,\n  Systems with solvent-solute interactions,\n]\nUsage_Conditions:\n\"Only if trism = .TRUE. and for Laue-RISM\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&RISM\"",
            "Parameter_Name:\n\"wfc_extrapolation\"\nDefault_Values:\n{\n  default:\n\"none\"\n}\nDescription:\n\"wfc_extrapolation\nUsed to extrapolate the wavefunctions from preceding ionic steps.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  none:\n\"no extrapolation\"\n  first_order:\n\"extrapolate the wave-functions with first-order formula\"\n  second_order:\n\"extrapolate the wave-functions with second order formula\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"nbnd\"\nDefault_Values:\n{\n  insulator:\n\"number of valence bands (number_of_electrons/2)\"\n  metal:\n\"(number of valence bands)*1.2\"\n}\nDescription:\n\"nbnd\nNumber of electronic states (bands) to be calculated.\"\nPossible_Usage_Conditions: [\n  Insulating systems,\n  Metallic systems,\n  Spin-polarized calculations,\n]\nUsage_Conditions:\n\"Note that in spin-polarized calculations the number of k-point, not the number of bands per k-point, is doubled\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fire_dtmax\"\nDefault_Values:\n{\n  default:\n\"10.D0\"\n}\nDescription:\n\"fire_dtmax\nDetermines the maximum value of 'dt' in the FIRE minimization; dtmax = fire_dtmax*dt\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-6\"\n}\nDescription:\n\"conv_thr\nConvergence threshold for selfconsistency, estimated energy error < conv_thr (note that conv_thr is extensive, like the total energy)\"\nPossible_Usage_Conditions: [\n  calculation = 'scf',\n  calculation = 'nscf',\n]\nUsage_Conditions:\n\"Used in self-consistent calculations ('scf') for convergence threshold. For non-self-consistent calculations ('nscf'), used to set default threshold value for iterative diagonalization\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&ELECTRONS\"",
            "Parameter_Name:\n\"fire_falpha\"\nDefault_Values:\n{\n  default:\n\"0.99D0\"\n}\nDescription:\n\"fire_falpha\nScaling of the alpha mixing parameter for steps with P > 0\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'fire'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"ion_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"ion_temperature\nControls the ionic temperature using different methods\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control ionic temperature via velocity rescaling (first method), see parameters tempw, tolp, and nraise (for calculation = vc-md only). This rescaling method is the only one currently implemented in VC-MD\"\n  rescale-v:\n\"control ionic temperature via velocity rescaling (second method), see parameters tempw and nraise\"\n  rescale-T:\n\"scale temperature of the thermostat every nraise steps by delta_t, starting from tempw. The temperature is controlled via velocitiy rescaling\"\n  reduce-T:\n\"reduce temperature of the thermostat every nraise steps by the (negative) value delta_t, starting from tempw. If delta_t is positive, the target temperature is augmented. The temperature is controlled via velocitiy rescaling\"\n  berendsen:\n\"control ionic temperature using soft velocity rescaling - see parameters tempw and nraise\"\n  andersen:\n\"control ionic temperature using Andersen thermostat see parameters tempw and nraise\"\n  svr:\n\"control ionic temperature using stochastic-velocity rescaling with parameters tempw and nraise\"\n  initial:\n\"initialize ion velocities to temperature tempw and leave uncontrolled further on\"\n  not_controlled:\n\"(default) ionic temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"trust_radius_min\"\nDefault_Values:\n{\n  default:\n\"1.D-3\"\n}\nDescription:\n\"trust_radius_min\nMinimum ionic displacement in the structural relaxation\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions:\n{\n  trust_radius < trust_radius_min:\n\"BFGS is reset\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"twochem\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"twochem\nIF .TRUE. , a two chemical potential calculation for the simulation of photoexcited systems is performed, constraining a fraction of the electrons in the conduction manifold.\"\nPossible_Usage_Conditions: [\n  occupations = 'smearing',\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  .TRUE.:\n\"when performing two chemical potential calculation\"\n}\nFinal_comments: None\nNamelist:\n\"&CONTROL\"",
            "Parameter_Name:\n\"ion_dynamics\"\nDefault_Values:\n{\n  calculation=relax:\n\"bfgs\"\n  calculation=md:\n\"verlet\"\n  calculation=vc-relax:\n\"bfgs\"\n  calculation=vc-md:\n\"beeman\"\n}\nDescription:\n\"ion_dynamics\nSpecify the type of ionic dynamics.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  Variable cell calculations,\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"for calculation='relax' or 'vc-relax', uses BFGS quasi-newton algorithm based on trust radius procedure\"\n  damp:\n\"for calculation='relax': damped quick-min Verlet dynamics, for calculation='vc-relax': damped Beeman dynamics\"\n  fire:\n\"for calculation='relax', uses FIRE minimization algorithm with semi-implicit Euler integration\"\n  verlet:\n\"for calculation='md', uses Verlet algorithm to integrate Newton's equation\"\n  langevin:\n\"for calculation='md', ion dynamics is over-damped Langevin\"\n  langevin-smc:\n\"for calculation='md', over-damped Langevin with Smart Monte Carlo\"\n  beeman:\n\"for calculation='vc-md', uses Beeman algorithm to integrate Newton's equation\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_mass\"\nDefault_Values:\n{\n  default: None\n  ESM:\n\"5.D+6 / (xy area)\"\n  ESM-RISM:\n\"5.D+4 / (xy area)\"\n}\nDescription:\n\"fcp_mass\nMass of the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"nraise\"\nDefault_Values:\n{\n  default:\n1\n}\nDescription:\n\"nraise\nControls various temperature-related behaviors depending on ion_temperature:\n- For 'reduce-T': Controls steps before temperature reduction by delta_t\n- For 'rescale-v': Controls steps before average temperature rescaling to tempw\n- For 'rescaling' with vc-md: Controls steps before instantaneous temperature rescaling to tempw\n- For 'berendsen': Defines rise time parameter (tau = nraise*dt)\n- For 'andersen': Defines collision frequency parameter (nu*dt = 1/nraise)\n- For 'svr': Sets characteristic time of thermostat (tau = nraise*dt)\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md'\"\nParameter_Value_Conditions:\n{\n  nraise*dt:\n\"when ion_temperature = 'berendsen' or 'svr'\"\n  1/nraise:\n\"when ion_temperature = 'andersen'\"\n}\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"degauss_cond\"\nDefault_Values:\n{\n  default:\n\"0.D0 Ry\"\n}\nDescription:\n\"degauss_cond\nvalue of the gaussian spreading (Ry) for brillouin-zone integration in the conduction manifold in a two-chemical potential calculation (twochem = .True.)\"\nPossible_Usage_Conditions: [\n  Two-chemical-potential calculations,\n  Smearing method,\n]\nUsage_Conditions:\n\"Used in two-chemical potential calculations when twochem = .True.\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_delta_t\"\nDefault_Values:\n{\n  default:\n\"reads from &IONS -> delta_t\"\n}\nDescription:\n\"fcp_delta_t\nFictitious Charge Particle (FCP) temperature control parameter. For rescale-T mode: multiplies instantaneous temperature by this value at each step by rescaling velocities. For reduce-T mode: reduces temperature by -fcp_delta_t every fcp_nraise steps. For fcp_delta_t < 0, actual average rate of heating/cooling is roughly C*fcp_delta_t/(fcp_nraise*dt) where C=1 for ideal gas, C=0.5 for harmonic solid.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = relax and md\"\nParameter_Value_Conditions:\n{\n  fcp_delta_t < 0:\n\"For cooling/heating rate calculation\"\n}\nFinal_comments:\n\"The instantaneous temperature is calculated at the end of FCP's move and BEFORE rescaling. This is the temperature reported in the main output.\"\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"ntyp\"\nDefault_Values:\n{\n  default: None\n}\nDescription:\n\"ntyp\nnumber of types of atoms in the unit cell\"\nPossible_Usage_Conditions: [\n]\nUsage_Conditions: None\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"nosym_evc\"\nDefault_Values:\n{\n  default:\nFalse\n}\nDescription:\n\"nosym_evc\nif (.TRUE.) symmetry is not used, and k points are forced to have the symmetry of the Bravais lattice; an automatically generated Monkhorst-Pack grid will contain all points of the grid over the entire Brillouin Zone, plus the points rotated by the symmetries of the Bravais lattice which were not in the original grid. The same applies if a k-point list is provided in input instead of a Monkhorst-Pack grid. Time reversal symmetry is assumed so k and -k are equivalent unless noinv=.true. is specified.\"\nPossible_Usage_Conditions: [\n  Monkhorst-Pack grid,\n  custom k-points,\n  full BZ coverage,\n]\nUsage_Conditions: None\nParameter_Value_Conditions:\n{\n  TRUE:\n\"symmetry is not used, k points have Bravais lattice symmetry\"\n}\nFinal_comments:\n\"This option differs from nosym because it forces k-points in all cases to have the full symmetry of the Bravais lattice (not all uniform grids have such property!)\"\nNamelist:\n\"&SYSTEM\"",
            "Parameter_Name:\n\"fcp_conv_thr\"\nDefault_Values:\n{\n  default:\n\"1.D-2\"\n}\nDescription:\n\"fcp_conv_thr\nConvergence threshold on force (eV) for Fictitious Charge Particle (FCP) relaxation.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"w_1\"\nDefault_Values:\n{\n  default:\n\"0.01D0\"\n}\nDescription:\n\"w_1\nParameters used in line search based on the Wolfe conditions.\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  calculation = 'vc-relax',\n  calculation = 'vc-md',\n  ion_dynamics = 'bfgs',\n]\nUsage_Conditions:\n\"relevant when calculation = 'relax', 'md', 'vc-relax', or 'vc-md' AND ion_dynamics = 'bfgs'\"\nParameter_Value_Conditions: None\nFinal_comments: None\nNamelist:\n\"&IONS\"",
            "Parameter_Name:\n\"fcp_dynamics\"\nDefault_Values:\n{\n  calculation = relax:\n\"bfgs\"\n  calculation = md:\n\"velocity-verlet\"\n}\nDescription:\n\"fcp_dynamics\nSpecify the type of dynamics for the Fictitious Charge Particle (FCP).\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  bfgs:\n\"calculation = 'relax'\"\n  newton:\n\"calculation = 'relax'\"\n  damp:\n\"calculation = 'relax'\"\n  lm:\n\"calculation = 'relax'\"\n  velocity-verlet:\n\"calculation = 'md'\"\n  verlet:\n\"calculation = 'md'\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\"",
            "Parameter_Name:\n\"fcp_temperature\"\nDefault_Values:\n{\n  default:\n\"not_controlled\"\n}\nDescription:\n\"fcp_temperature\nFictitious Charge Particle (FCP) temperature control parameter\"\nPossible_Usage_Conditions: [\n  calculation = 'relax',\n  calculation = 'md',\n  FCP calculations,\n  lfcp = .TRUE.,\n]\nUsage_Conditions:\n\"Only if lfcp = .TRUE. AND calculation = 'relax' and 'md'\"\nParameter_Value_Conditions:\n{\n  rescaling:\n\"control FCP's temperature via velocity rescaling (first method) see parameters 'fpc_tempw' and 'fcp_tolp'\"\n  rescale-v:\n\"control FCP's temperature via velocity rescaling (second method) see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  rescale-T:\n\"control FCP's temperature via velocity rescaling (third method) see parameter 'fcp_delta_t'\"\n  reduce-T:\n\"reduce FCP's temperature every 'fcp_nraise' steps by the (negative) value 'fcp_delta_t'\"\n  berendsen:\n\"control FCP's temperature using \"soft\" velocity rescaling - see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  andersen:\n\"control FCP's temperature using Andersen thermostat see parameters 'fcp_tempw' and 'fcp_nraise'\"\n  initial:\n\"initialize FCP's velocities to temperature 'fcp_tempw' and leave uncontrolled further on\"\n  not_controlled:\n\"(default) FCP's temperature is not controlled\"\n}\nFinal_comments: None\nNamelist:\n\"&FCP\""
        ],
        "qe_generation_template": "&CONTROL calculation, value: scf, value_type: character\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nbnd, value: 11, value_type: integer\n&SYSTEM nosym_evc, value: False, value_type: logical\n&SYSTEM occupations, value: fixed, value_type: character\n&SYSTEM degauss, value: 0.02, value_type: real\n&SYSTEM smearing, value: marzari-vanderbilt, value_type: character\n&SYSTEM esm_bc, value: bc1, value_type: character\n&ELECTRONS scf_must_converge, value: .FALSE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-8, value_type: real\n&ELECTRONS mixing_mode, value: TF, value_type: character\n&ELECTRONS mixing_beta, value: 0.4D0, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS pot_extrapolation, value: atomic, value_type: character\n&IONS wfc_extrapolation, value: second_order, value_type: character\n&IONS ion_temperature, value: andersen, value_type: character\n&IONS nraise, value: 1, value_type: integer\n&IONS refold_pos, value: True, value_type: logical\n&IONS upscale, value: 100.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 1.2D0, value_type: real\n&IONS trust_radius_min, value: 1.D-4, value_type: real\n&IONS trust_radius_ini, value: 0.1D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS fire_nmin, value: 10, value_type: integer\n&IONS fire_dtmax, value: 5.0, value_type: real\n&CELL cell_dynamics, value: bfgs, value_type: character\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107",
        "qe_initialization": "&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107",
        "generated_input": "qe_input=QeMatch(qe_input_gen=\"&CONTROL\\n  calculation = 'relax'\\n  title = 'test'\\n  pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\\n  outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\\n  tprnfor = .TRUE.\\n/\\n\\n&SYSTEM\\n  ibrav = 0\\n  nat = 3\\n  ntyp = 2\\n  nbnd = 11\\n  nosym_evc = False\\n  occupations = 'fixed'\\n  degauss = 0.02\\n  smearing = 'marzari-vanderbilt'\\n  esm_bc = 'bc1'\\n  ecutwfc = 40.0\\n  ecutrho = 320.0\\n/\\n\\n&ELECTRONS\\n  scf_must_converge = .FALSE.\\n  conv_thr = 1.D-8\\n  mixing_mode = 'TF'\\n  mixing_beta = 0.4D0\\n/\\n\\n&IONS\\n  ion_positions = 'from_input'\\n  ion_dynamics = 'bfgs'\\n  pot_extrapolation = 'atomic'\\n  wfc_extrapolation = 'second_order'\\n  ion_temperature = 'andersen'\\n  nraise = 1\\n  refold_pos = True\\n  upscale = 100.D0\\n  bfgs_ndim = 1\\n  trust_radius_max = 1.2D0\\n  trust_radius_min = 1.D-4\\n  trust_radius_ini = 0.1D0\\n  w_1 = 0.01D0\\n  fire_nmin = 10\\n  fire_dtmax = 5.0\\n/\\n\\n&CELL\\n  cell_dynamics = 'bfgs'\\n/\\n\\nATOMIC_SPECIES\\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\\nTi     47.867 ti_pbe_v1.4.uspp\\n\\nATOMIC_POSITIONS angstrom\\nCl      -0.0000000000     1.8967970932     9.9999458227\\nTi       0.0000000000     0.0000000000    11.5977250554\\nCl       1.6426744685     0.9483985466    13.1955042880\\n\\nK_POINTS automatic\\n7 7 2 0 0 0\\n\\nCELL_PARAMETERS angstrom\\n    3.2853489371     0.0000000000     0.0000000000\\n   -1.6426744685     2.8451956399     0.0000000000\\n    0.0000000000     0.0000000000    23.1954501107\\n\")",
        "error_msg": [],
        "log_qe_gen_prompt": [
            "You are an AI assistant specializing in quantum chemistry calculations using Quantum ESPRESSO.\nCreate a Quantum Espresso input file for 'calculation = 'relax'\nGround state calculations\nRelaxation calculations\nStress calculations\nTotal energy calculations' calculation of 'TiCl2' compound, based on the given CONTEXT and DETAILS.\n\n<CONTEXT>\n&CONTROL title = 'test'\n\n&CONTROL calculation, value: scf, value_type: character\n&CONTROL tprnfor, value: .TRUE., value_type: logical\n&SYSTEM ntyp, value: 2, value_type: integer\n&SYSTEM nbnd, value: 11, value_type: integer\n&SYSTEM nosym_evc, value: False, value_type: logical\n&SYSTEM occupations, value: fixed, value_type: character\n&SYSTEM degauss, value: 0.02, value_type: real\n&SYSTEM smearing, value: marzari-vanderbilt, value_type: character\n&SYSTEM esm_bc, value: bc1, value_type: character\n&ELECTRONS scf_must_converge, value: .FALSE., value_type: logical\n&ELECTRONS conv_thr, value: 1.D-8, value_type: real\n&ELECTRONS mixing_mode, value: TF, value_type: character\n&ELECTRONS mixing_beta, value: 0.4D0, value_type: real\n&IONS ion_positions, value: from_input, value_type: character\n&IONS ion_dynamics, value: bfgs, value_type: character\n&IONS pot_extrapolation, value: atomic, value_type: character\n&IONS wfc_extrapolation, value: second_order, value_type: character\n&IONS ion_temperature, value: andersen, value_type: character\n&IONS nraise, value: 1, value_type: integer\n&IONS refold_pos, value: True, value_type: logical\n&IONS upscale, value: 100.D0, value_type: real\n&IONS bfgs_ndim, value: 1, value_type: integer\n&IONS trust_radius_max, value: 1.2D0, value_type: real\n&IONS trust_radius_min, value: 1.D-4, value_type: real\n&IONS trust_radius_ini, value: 0.1D0, value_type: real\n&IONS w_1, value: 0.01D0, value_type: real\n&IONS fire_nmin, value: 10, value_type: integer\n&IONS fire_dtmax, value: 5.0, value_type: real\n&CELL cell_dynamics, value: bfgs, value_type: character\n&SYSTEM\n  ecutwfc = 40.0\n  ecutrho = 320.0\n  ibrav = 0\n  nat = 3\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n</CONTEXT>\n\n<DETAILS>\nCalculate relaxation of the structure based on relax calculation for TiCl2 monolayer in 2H hexagonal phase, using a pseudopotential and a plane-wave basis set. The calculation uses a smearing method for the occupation scheme and a mixing parameter for the SCF cycle. The k-point grid is defined for the Brillouin zone sampling.\n</DETAILS>\n\n<RULES>\n- Write the input file for the given calculation type\n- Set the value of the variables based on the CONTEXT and the DETAILS\n- Use only relevant parameters based on the CONTEXT, DETAILS\n- Each parameter should be under correct namelist\n- Each parameter should have a correct value type such as integer, real, character, or logical\n- The namelists &CONTROL, &SYSTEM, &ELECTRONS, must be in this order exactly\n- The cards ATOMIC_SPECIES, ATOMIC_POSITIONS, K_POINTS, and CELL_PARAMETERS must be present and based on CONTEXT and DETAILS\n- In &CONTROL should have 'pseudo_dir': /home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp and 'outdir':'/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir' defined, according to the given CONTEXT\n</RULES>\n\n<OUTPUT>\n- Write the input file\n- Put the code blocks in ```fortran and ```.\n- Review the code to see how the generated code followed the RULES, CONTEXT, and DETAILS, then give some explanation.\n</OUTPUT>\n"
        ],
        "log_qe_input": [
            "&CONTROL\n  calculation = 'relax'\n  title = 'test'\n  pseudo_dir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/new_pp'\n  outdir = '/home/ws/ec5456/VS-nano/kg_qe_tmp3/kg_qe/out_dir'\n  tprnfor = .TRUE.\n/\n\n&SYSTEM\n  ibrav = 0\n  nat = 3\n  ntyp = 2\n  nbnd = 11\n  nosym_evc = False\n  occupations = 'fixed'\n  degauss = 0.02\n  smearing = 'marzari-vanderbilt'\n  esm_bc = 'bc1'\n  ecutwfc = 40.0\n  ecutrho = 320.0\n/\n\n&ELECTRONS\n  scf_must_converge = .FALSE.\n  conv_thr = 1.D-8\n  mixing_mode = 'TF'\n  mixing_beta = 0.4D0\n/\n\n&IONS\n  ion_positions = 'from_input'\n  ion_dynamics = 'bfgs'\n  pot_extrapolation = 'atomic'\n  wfc_extrapolation = 'second_order'\n  ion_temperature = 'andersen'\n  nraise = 1\n  refold_pos = True\n  upscale = 100.D0\n  bfgs_ndim = 1\n  trust_radius_max = 1.2D0\n  trust_radius_min = 1.D-4\n  trust_radius_ini = 0.1D0\n  w_1 = 0.01D0\n  fire_nmin = 10\n  fire_dtmax = 5.0\n/\n\n&CELL\n  cell_dynamics = 'bfgs'\n/\n\nATOMIC_SPECIES\nCl     35.450 cl_pbe_v1.4.uspp.F.UPF\nTi     47.867 ti_pbe_v1.4.uspp\n\nATOMIC_POSITIONS angstrom\nCl      -0.0000000000     1.8967970932     9.9999458227\nTi       0.0000000000     0.0000000000    11.5977250554\nCl       1.6426744685     0.9483985466    13.1955042880\n\nK_POINTS automatic\n7 7 2 0 0 0\n\nCELL_PARAMETERS angstrom\n    3.2853489371     0.0000000000     0.0000000000\n   -1.6426744685     2.8451956399     0.0000000000\n    0.0000000000     0.0000000000    23.1954501107\n"
        ],
        "log_qe_solution": [],
        "rest_formula_data": {
            "formula": "TiCl2",
            "k_points_2d": "None",
            "uuid": "0ab69709-74ff-4adb-af32-9af2aeceaa9c",
            "ase_atom_object": "None",
            "indx": "None"
        },
        "workflow_log": [
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Interface agent",
                    "start_time": "2025-02-07 12:18:56"
                },
                "timestamp": "2025-02-07 12:18:56.506832",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:18:56",
                    "end_time": "2025-02-07 12:19:00",
                    "message": "Interface agent"
                },
                "timestamp": "2025-02-07 12:19:00.282554",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "2D structure generation",
                    "start_time": "2025-02-07 12:19:00"
                },
                "timestamp": "2025-02-07 12:19:00.282632",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:19:00",
                    "end_time": "2025-02-07 12:19:00",
                    "message": "2D structure generation"
                },
                "timestamp": "2025-02-07 12:19:00.495356",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Starting Quantum Espresso documentation collection",
                    "start_time": "2025-02-07 12:19:00"
                },
                "timestamp": "2025-02-07 12:19:00.495422",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:19:00",
                    "end_time": "2025-02-07 12:19:03",
                    "message": "Quantum Espresso documentation collection"
                },
                "timestamp": "2025-02-07 12:19:03.154789",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso condition extraction",
                    "start_time": "2025-02-07 12:19:03"
                },
                "timestamp": "2025-02-07 12:19:03.154867",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:19:03",
                    "end_time": "2025-02-07 12:19:46",
                    "message": "Quantum Espresso condition extraction"
                },
                "timestamp": "2025-02-07 12:19:46.933278",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Parameter graph generation",
                    "start_time": "2025-02-07 12:19:46"
                },
                "timestamp": "2025-02-07 12:19:46.933393",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:19:46",
                    "end_time": "2025-02-07 12:19:46",
                    "message": "Parameter graph generation"
                },
                "timestamp": "2025-02-07 12:19:46.938809",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Documentation collection for trimmed parameters",
                    "start_time": "2025-02-07 12:19:46"
                },
                "timestamp": "2025-02-07 12:19:46.938874",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:19:46",
                    "end_time": "2025-02-07 12:19:46",
                    "message": "Documentation collection for trimmed parameters"
                },
                "timestamp": "2025-02-07 12:19:46.940265",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input parameter evaluation",
                    "start_time": "2025-02-07 12:19:46"
                },
                "timestamp": "2025-02-07 12:19:46.940320",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:19:46",
                    "end_time": "2025-02-07 12:21:56",
                    "message": "Quantum Espresso input parameter evaluation"
                },
                "timestamp": "2025-02-07 12:21:56.765081",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation template",
                    "start_time": "2025-02-07 12:21:56"
                },
                "timestamp": "2025-02-07 12:21:56.765361",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:21:56",
                    "end_time": "2025-02-07 12:21:56",
                    "message": "Quantum Espresso input generation template"
                },
                "timestamp": "2025-02-07 12:21:56.772413",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso input generation",
                    "start_time": "2025-02-07 12:21:56"
                },
                "timestamp": "2025-02-07 12:21:56.772486",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:21:56",
                    "end_time": "2025-02-07 12:22:07",
                    "message": "Quantum Espresso input generation"
                },
                "timestamp": "2025-02-07 12:22:07.287222",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.PENDING",
                    "message": "Quantum Espresso is initializing",
                    "start_time": "2025-02-07 12:22:07"
                },
                "timestamp": "2025-02-07 12:22:07.287353",
                "level": "INFO"
            },
            {
                "status": "",
                "message": {
                    "status": "WorkflowStatus.SUCCESS",
                    "start_time": "2025-02-07 12:22:07",
                    "end_time": "2025-02-07 12:22:08",
                    "message": "Quantum Espresso calculation completed successfully"
                },
                "timestamp": "2025-02-07 12:22:08.981409",
                "level": "INFO"
            }
        ],
        "workflow_state": "FINISHED"
    }
]